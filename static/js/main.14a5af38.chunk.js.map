{"version":3,"sources":["assets/scripts/modernizr/modernizr-custom.js","services/api/apiAxios.js","services/auth/tokenService.js","shared/constants/routes.js","shared/constants/apiEndpoints.js","shared/constants/permissions.js","shared/constants/schedules.js","shared/constants/sessionStorageKeys.js","shared/constants/calendarModes.js","services/auth/authService.js","store/auth/actions.js","store/auth/index.js","services/api/locationService.js","store/location/actions.js","store/location/selectors.js","store/location/index.js","shared/components/Copyrights/Copyrights.jsx","shared/components/Button/Button.jsx","assets/images/svg-sprite.svg","shared/components/Icon/Icon.jsx","shared/components/Logo/Logo.jsx","store/auth/selectors.js","shared/components/ProtectedRoute/ProtectedRoute.jsx","store/cards/selectors.js","shared/utils/utils.js","shared/hooks/useClickAway/useClickAway.js","services/cards/getParamsForLoadCards.js","services/cards/cardServices.js","store/cards/actions.js","store/cards/index.js","modules/Schedule/components/ScheduleMonthUsers/ScheduleMonthUsers.jsx","shared/components/CardListItem/components/CardAttributes.jsx","shared/components/Btn/Btn.jsx","shared/components/CardListItem/components/CardActions.jsx","shared/components/CardListItem/components/CardStatus.jsx","shared/components/CardListItem/components/CardHeader.jsx","shared/components/CardListItem/components/ToolTipInactive.jsx","store/schedule/selectors.js","modules/Schedule/components/ScheduleMonthBooked/ScheduleMonthBooked.jsx","shared/components/FormModal/FormModal.jsx","shared/components/CardListItem/CardListItem.jsx","shared/components/CardList/CardList.jsx","shared/components/NavSubtItem/NavSubItem.jsx","shared/components/UserBar/UserBar.jsx","shared/components/Burger/Burger.jsx","shared/components/CurrentDate/CurrentDate.jsx","shared/hooks/useDebounce/useDebounce.js","shared/hooks/useLocationId/useLocationId.js","shared/hooks/useCardFilters/useCardFilters.js","services/paginationService/paginationService.js","services/reservations/reservationsServices.js","store/reservations/actions.js","shared/layout/Sidebar/Sidebar.jsx","shared/components/ConfirmationModal/ConfirmationModal.jsx","shared/components/Modal/Modal.jsx","shared/components/CheckboxBtn/CheckboxBtn.jsx","shared/components/NavMenu/NavMenu.jsx","shared/components/FormSearch/FormSearch.jsx","shared/components/NavItem/NavItem.jsx","shared/components/Calendar/Calendar.jsx","shared/components/Toast/Toast.jsx","shared/constants/namesOfMonthsAndDays.js","services/scheduleYear/scheduleYearServices.js","store/scheduleYear/actions.js","store/scheduleYear/selectors.js","store/scheduleYear/index.js","shared/components/ToastErrorList/ToastErrorList.jsx","shared/components/Tag/Tag.jsx","shared/constants/user.js","services/users/userService.js","store/users/actions.js","store/roles/selectors.js","modules/Login/components/InputFormField/InputFormField.jsx","shared/components/UserFilter/FilterSelector/FilterSelector.jsx","shared/components/UserFilter/UserFilter.jsx","shared/components/Filter/Filter.jsx","store/users/selectors.js","shared/hooks/useWindowsSize/useWindowSize.js","shared/components/UserList/components/DropDown/DropDown.jsx","shared/components/UserList/components/TableUserAttribute/TableUserAttribute.jsx","store/users/index.js","shared/components/UserList/components/ButtonBlock/ButtonBlock.jsx","shared/components/UserList/UserList.jsx","shared/components/ControlCardWrapper/components/MonitorInventoryCode/MonitorInventoryCode.jsx","shared/components/FormModal/validation-modal.jsx","shared/components/ControlCardWrapper/ControlCardWrapper.jsx","shared/components/TooltipContent/TooltipContent.jsx","shared/components/TimeSelectInput/TimeSelectInput.jsx","shared/components/DeleteModal/DeleteModal.jsx","shared/components/CancelHeader/CancelHeader.jsx","shared/components/UserAvatar/UserAvatar.jsx","shared/components/UnauthenticatedRoute/UnauthenticatedRoute.jsx","shared/components/EmptyReservations/EmptyReservation.jsx","services/schedule/getCurrentLocationId.js","shared/components/BlockModal/components/BlockInput/BlockInput.jsx","store/profile/selectors.js","shared/components/BlockModal/BlockModal.jsx","shared/components/Toast/utils/helpers.js","services/schedule/scheduleService.js","store/schedule/actions.js","store/schedule/index.js","services/profile/profileService.js","store/profile/actions.js","store/profile/index.js","services/scheduleMonth/scheduleMonthServices.js","store/scheduleMonth/actions.js","store/scheduleMonth/selectors.js","store/scheduleMonth/index.js","services/roles/rolesService.js","store/roles/actions.js","store/roles/index.js","services/detailedSchedule/detailedScheduleServices.js","store/detailedSchedule/actions.js","store/detailedSchedule/index.js","store/reservations/index.js","store/search/index.js","store/index.js","shared/utils/history.js","reportWebVitals.js","modules/Login/constants/inputNames.js","modules/Login/validation/yupAuthSchema.js","modules/Login/index.jsx","modules/Compensation/components/Report/Report.jsx","modules/Compensation/components/ReportSearch/ReportSearch.jsx","modules/Compensation/Compensation.jsx","shared/components/UserFilter/FilterForMobile/FilterForMobile.jsx","modules/UserPage/UserPage.jsx","modules/UserRole/index.jsx","modules/VersionHistory/components/VersionInfo/VersionInfo.jsx","modules/VersionHistory/history.jsx","modules/VersionHistory/VersionHistory.jsx","modules/Settings/index.jsx","modules/UserProfile/validation-profile.js","modules/UserProfile/prepareProfile.js","modules/UserProfile/components/UserImageLoader/UserImageLoader.jsx","modules/UserProfile/components/UserButtons/UserButtons.jsx","modules/UserProfile/UserProfile.jsx","services/searchServices/searchServices.js","services/users/usersServices.js","modules/Schedule/components/SearchInput/SearchInput.jsx","modules/Schedule/components/SearchItem/SearchItem.jsx","modules/Schedule/components/SearchModal/SearchModal.jsx","modules/Schedule/components/UserReservation/components/UserSchedule/UserSchedule.jsx","modules/Schedule/components/UserReservation/UserReservation.jsx","modules/ReservationDatePicker/DateValidation/DateValidation.jsx","modules/ReservationDatePicker/DateRangePicker/DateRangePicker.jsx","modules/ReservationDatePicker/ReservationDatePickerFooter/ReservationDatePickerFooter.jsx","modules/ReservationDatePicker/utils/generate-validate-constants.js","services/schedule/getCurrentCard.js","shared/utils/validate-schedule-notifications.js","modules/ReservationDatePicker/ReservationDatePicker.jsx","modules/DetailedSchedule/detailedScheduleService.js","modules/DetailedSchedule/DetailedSchedule.jsx","modules/Schedule/components/Days/Days.jsx","modules/Schedule/components/TableLines/TableLines.jsx","modules/Schedule/components/ScheduleBookingColumn/ScheduleBookingColumn.jsx","modules/Location/components/CalendarTime/CalendarTime.jsx","modules/Schedule/components/ScheduleWeeks/ScheduleWeeks.jsx","modules/Schedule/components/ScheduleMonth/utils.js","modules/ScheduleMonth/ScheduleDay.jsx","modules/Schedule/components/ScheduleMonth/ScheduleMonth.jsx","modules/Schedule/Schedule.jsx","modules/Schedule/components/SchedulePage/SchedulePage.jsx","modules/Schedule/components/ScheduleDashboardFoundLocations/ScheduleDashboardFoundLocations.jsx","modules/Schedule/components/ScheduleHeader/components/ScheduleButton/ScheduleButton.jsx","modules/Schedule/components/ScheduleHeader/components/NavigationButtons/NavigationButtons.jsx","modules/Schedule/components/ScheduleHeader/components/HeaderFacade/HeaderFacade.jsx","modules/Schedule/components/ScheduleHeader/components/DeleteScheduleButtons/utils/deleteSchedule.js","modules/Schedule/components/ScheduleHeader/components/DeleteScheduleButtons/utils/fetchSchedule.js","modules/Schedule/components/ScheduleHeader/components/DeleteScheduleButtons/utils/editSchedule.js","modules/Schedule/components/ScheduleHeader/components/DeleteScheduleButtons/DeleteScheduleButtons.jsx","shared/components/Filter/FilterContext.jsx","modules/Reservation/components/AllWorkPlaces/AllWorkPlaces.jsx","shared/components/Back/Back.jsx","shared/components/SearchFilter/SearchFilter.jsx","modules/Schedule/components/ScheduleHeader/components/NavigationButtons/components/PlaceChanger/PlaceChanger.jsx","modules/Schedule/components/ScheduleHeader/components/StaticButtons/StaticButtons.jsx","modules/Schedule/components/ScheduleHeader/ScheduleHeader.jsx","modules/ScheduleYearDayOfMonth/ScheduleYearDayOfMonth.jsx","modules/Schedule/components/ScheduleYearMonth/ScheduleYearMonth.jsx","modules/Schedule/components/ScheduleYear/ScheduleYear.jsx","shared/layout/Header/Header.jsx","shared/layout/Layout.jsx","modules/Reservation/components/ReservationTools/ReservationTools.jsx","modules/Reservation/components/ReservationCard/ReservationCard.jsx","store/reservations/selectors.js","modules/Reservation/components/ReservationRoom/ReservationRoom.jsx","shared/components/Filters/components/WorkplaceFilter/WorkplaceFilter.jsx","modules/Reservation/components/LocationsFilter/LocationsFilter.jsx","modules/Reservation/components/FilterDateFrom/FilterDateFrom.jsx","modules/Reservation/components/FilterDateTo/FilterDateTo.jsx","modules/Reservation/components/FilterDate/FilterDate.jsx","modules/Reservation/components/FilterTimeFrom/FilterTimeFrom.jsx","modules/Reservation/components/FilterTimeTo/FilterTimeTo.jsx","modules/Reservation/components/FilterTime/FilterTime.jsx","shared/components/Filters/Filters.jsx","shared/components/Filters/components/FilterTitle/FilterTitle.jsx","shared/utils/reservations.js","modules/Reservation/Reservation.jsx","shared/hooks/useDeleteReservations/useDeleteReservations.js","modules/Location/Location.jsx","modules/SearchPage/SearchPage.jsx","App.jsx","services/interceptors/check-valid-token.js","services/interceptors/index.js","index.jsx","services/interceptors/setup-auth-header.js","services/interceptors/show-server-errors.js"],"names":["e","n","t","o","i","createElement","arguments","p","createElementNS","call","apply","r","body","fake","f","c","d","_version","_config","classPrefix","enableClasses","enableJSClass","usePrefixes","_q","on","this","setTimeout","addTest","push","name","fn","options","addAsyncTest","Modernizr","prototype","u","documentElement","nodeName","toLowerCase","h","split","_prefixes","m","testStyles","s","a","l","parseInt","id","appendChild","type","styleSheet","cssText","createTextNode","style","background","overflow","parentNode","removeChild","offsetHeight","DocumentTouch","join","offsetTop","hasOwnProperty","aliases","length","Boolean","className","baseVal","RegExp","replace","v","window","document","axios","create","ACCESS_TOKEN_KEY","ACCESS_TOKEN_STORED_AT_KEY","refresh","init","store","authActions","isAccessTokenValid","setupRefreshTimer","setClaims","getAccessToken","dispatch","getClaims","localStorage","getItem","setAccessToken","accessToken","setItem","String","removeTokens","clear","storedAt","res","Number","isNaN","value","setTokens","token","Date","now","isTokenExpired","claims","decodeJwt","timeout","calcTimeout","exp","timer","expiration","delta","Math","max","PERMISSIONS","CanManageLocations","CanDeleteReservations","CanManageUserInfoRole","CanManageReservations","CanManageOwnReservations","CanAccessLogs","CanManageUserInfo","CanViewLocations","CanViewReservations","CanDeleteOwnReservations","CanDeleteLocations","CanAccessStats","CanManageLocationItemsWithCodes","CanViewLocationItems","CanDeleteLocationItems","CanManageLocationItems","CanManuallyImportData","CanSearchUsers","CanManageTechnicalWorkPeriod","adminPermissions","guestPermissions","recruiterPermissions","statisticianPermissions","sysAdminPermissions","undefined","username","password","apiAxios","post","API","tokenService","data","get","withCredentials","loginUser","createAsyncThunk","authService","logoutUser","refreshToken","authSlice","createSlice","initialState","isAuth","reducers","setIsAuth","state","action","payload","extraReducers","builder","addCase","actions","fulfilled","rejected","loadLocationsThunk","ROUTES","locationService","then","apiEndpoints","getLocations","locations","getCurrentLocation","find","location","getIsOpenSearch","isOpenSearch","locationsSlice","users","surname","loaded","searchItem","setLocations","setIsOpenSearch","pending","isLoading","Copyrights","year","getFullYear","Button","icon","children","btnProps","cn","disabled","React","isValidElement","cloneElement","props","defaultProps","Icon","size","fill","iconProps","width","height","xlinkHref","IconsSprite","Logo","to","isAuthSelector","auth","permissionsSelector","permissions","getUserId","sub","ProtectedRoute","forwardRef","ref","useSelector","displayName","getCards","cards","getCardsItemsType","itemTypes","obj","addEventListener","args","off","removeEventListener","hasPermission","personPermissions","every","perm","includes","format","date","customFormat","dateFnsFormat","locale","ru","disableClick","stopPropagation","preventDefault","checkNullSrc","src","slice","isBrowser","defaultEvents","useClickAway","cb","events","exclude","savedCallback","useRef","useEffect","current","handler","event","contains","target","eventName","getParamsForLoadCards","parentLocationId","pageRequest","index","params","query","sortAsc","sortBy","getCardItemsType","getCardItems","cardId","deleteCard","delete","createCard","editActiveCard","activeCard","dto","setToLocalStorage","curCardName","cardsName","currentCard","JSON","stringify","createCardItem","getScheduleDay","createCardItemWithCode","deleteCardItem","checkMonitor","code","loadCardsThunk","cardsServices","deleteCardThunk","createCardThunk","loadCardItemsTypeThunk","changeActiveCardThunk","createCardItemThunk","loadScheduleDayThunk","deleteCardItemThunk","rows","cardsSlice","setCards","removeCard","filter","card","setCurrentCard","cleanState","findIndex","isInactive","cardsActions","ScheduleMonthUsers","booking","isMonth","bookings","isMyReservation","filteredSchedules","useMemo","schedule","user","isSchedulesWithTechWork","some","isMySchedule","firstName","lastName","map","filteredShedule","parseISO","from","CardAttributes","items","monitorInfo","loadMonitorInfo","cardItemsTypes","Selectors","iconClasses","keyboard","monitor","useState","isOpenToolTip","setIsOpenToolTip","monitorsCount","monitorType","item","typeId","icons","uniqIcons","itemsTypes","itemsIcons","Array","Set","onClick","onMouseEnter","onMouseLeave","itemIcon","Btn","CardActions","onDelete","onEdit","onLock","isFullTimeInactive","isCanManageTechnicalWorkPeriod","propTypes","PropTypes","string","node","CardStatus","isCardFullReserved","reservationInfo","isPartialBusy","card__status","CardHeader","room","match","useParams","availabilityStatus","ToolTipInactive","schedules","shedulesTechWork","shedulesWithoutTechWork","filterBooking","uniqBy","userId","time","getIsScheduleActive","isScheduleActive","getCurrentDate","currentDate","getListOfAllReservations","listOfAllReservations","getListOfReservations","listOfReservations","getSelectedDate","selectedDate","getSelectedTime","selectedTime","getIsScheduleSlotActive","isScheduleSlotActive","getSelectedSchedule","selectedSchedule","getCheckboxes","checkboxes","ScheduleMonthBooked","hideTooltip","showCounter","counterValue","uniqUsersId","avatars","isFullDayReserved","uniqUsers","isArray","reduce","acc","cur","differenceInHours","interactive","placement","offset","popperOptions","strategy","modifiers","fallbackPlacements","content","FormModal","title","excludeRef","onClose","isDeleteForm","CardListItem","currentLocation","isCanManageLocations","sizePage","handleCardClick","isOpenConfirmationModal","setOpenConfirmationModal","isOpenEditModal","setOpenEditModal","isOpenBlockModal","setOpenBlockModal","setIsLoading","setMonitorInfo","isOpenInfoAboutInactive","setIsOpenInfoAboutInactive","refModal","useDispatch","roomNumber","isCardPartReserved","isCardInactiveAndReserv","reservations","reserv","handleCloseConfirmationModal","handleCloseEditModal","useCallback","forEach","inventoryCode","status","prev","isInactiveCard","closeBlockModal","generatePath","number","mode","CALENDAR_MODES","workspace__card_hover","sched","ids","unwrap","showToastSuccess","catch","showToastError","CardList","isOpenModal","setOpenModal","handleCloseModal","visibleCards","NavSubItem","activeClassName","UserBar","isCanViewMyReservations","setProfileOpen","profile","isModalOpen","setIsModalOpen","userBarRef","history","useHistory","isNullImage","pictureUrl","isImageSelected","logout","alt","href","email","Burger","isOpen","role","tabIndex","bool","func","CurrentDate","useDebounce","delay","cleanUp","timeoutRef","clearTimer","clearTimeout","useLocationId","useRouteMatch","useCardFilters","checkedRooms","setCheckedRooms","checkedPlaces","setCheckedPlaces","opts","str","getReservations","getMyReservations","getLoadTools","tableId","loadReservationsThunk","reservationsServices","Sidebar","setIsOpen","openSidebar","ConfirmationModal","Modal","CheckboxBtn","label","onChange","checked","htmlFor","object","NavMenu","isViewUserList","isViewSettings","isViewStatistics","handleCloseSidebar","loc","link","FormSearch","NavItem","Calendar","sessionDate","setSessionDate","startDate","scheduleMode","changeScheduleMode","isIncrease","duration","isIncreaseDay","changeDate","add","days","weeks","months","years","sessionStorage","SESSION_STORAGE_KEYS","formatISO","setCurrentDate","parseJSON","selected","showYearDropdown","yearDropdownItemNumber","dateFormat","dateFormatCalendar","scrollableYearDropdown","customInput","Toast","description","showToast","iconName","toastPosition","toast","POSITION","BOTTOM_RIGHT","position","getScheduleYear","loadScheduleYearThunk","scheduleYearServices","scheduleYear","isListOfAllBookings","getListOfErrorBookings","isListOfErrorBookings","scheduleYearSlice","setListOfErrorBookings","scheduleYearActions","dayStatusCode","getStatus","incorrectSchedules","alreadyBookedSchedules","alreadyBookedSchedule","statusCode","reBookingSchedules","reBookingSchedule","unavailableSchedules","unavailableSchedule","day","getDay","getDate","getMonth","table","locationNumber","roomId","exact","showToastErrorList","error","autoClose","Tag","deleteTag","setActiveTag","userTypes","local","remote","localRemote","getUsers","getUsersForAdmin","updateUserType","updateUserEquipment","updateUserStatus","getRole","updateUserRole","loadUsersThunk","userService","loadUsersForAdminThunk","updateUserTypeThunk","updateUserEquipmentThunk","updateUserStatusThunk","updateUserRoleThunk","getUsersRoles","roles","InputFormField","register","FilterSelector","refSelector","filteredType","setOpenOptions","isHaveCheckedType","actionInput","isOpenOptions","tableType","handleOptionClick","placeholder","form","k","autoComplete","readOnly","option","UserFilter","setIsFilteredUserList","fieldForSort","userTypeOptions","Object","values","searchValue","setSearchValue","isOpenTypeSelector","setIsOpenTypeSelector","isOpenRoleSelector","setIsOpenRoleSelector","filteredUserType","setFilteredUserType","filteredRoles","setFilteredRoles","isCanManageRole","formSearchFocused","setFormSearchFocused","refSelectorUserType","excludeRefSelectorUserType","refSelectorRole","excludeRefSelectorRole","isHaveCheckedUserType","isHaveCheckedRole","isFiltersApplied","tempTableUserType","optionIndex","tempTableRole","optionIndexRole","roleIds","debounceInput","newValue","onFocus","onBlur","toggle","tempTableRoles","Filter","getUserList","getIsFilterActive","isFilterActive","useWindowSize","initialWidth","Infinity","initialHeight","innerWidth","innerHeight","setState","DropDown","setIsEditMode","refDropDown","list","attribute","itemTable","userType","equipmentType","roleId","updateUserInfo","TableUserAttribute","attributeList","field","refCurrentOption","isEditMode","toggleEditMode","styleDisable","cursor","usersSlice","setUsers","setFilterUsersActive","userIndex","usersActions","ButtonBlock","handleButtonBlockStatus","updateStatus","UserName","isOpenInfoAboutUser","setIsOpenInfoAboutUser","userEquipmentOptions","own","company","UserList","isFilteredUserList","setFieldForSort","col1","col2","col3","col4","col5","getUsersTableData","windowWidth","columns","Header","accessor","disableFilters","disableSortBy","canSort","hiddenColumn","desc","pageSize","pageIndex","hiddenColumns","useTable","disableSortRemove","disableMultiRemove","manualSortBy","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","nextPage","previousPage","setPageSize","isPageSelectMode","setIsPageSelectMode","equipmentForSort","statusForSort","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","actionColumn","render","row","getRowProps","cells","cell","getCellProps","countOfDisplayedRows","firstRecordNum","lastRecordNum","totalRecords","getPaginationInfo","MonitorInventoryCode","monitorTypeId","activeTagMonitor","setActiveTagMonitor","handleClickTag","tags","isHaveMonitor","setIsHaveMonitor","isRequired","setIsCodeRequestLoading","monitorTags","setMonitorTags","monitorsInfo","setMonitorsInfo","isCheckMonitorCode","useForm","handleSubmit","setValue","newMonitorInfo","setNewMonitorInfo","IsVerifyCode","isCanManageLocationItemsWithCodes","newMonitor","diagonal","additional_fields","model","manufacturer","sortedMonitorTags","sort","element","nextElement","sortedMonitorInfo","activeMonitorTag","tag","newOptions","splice","updatedOptions","onSubmit","newM","mon","verifyCode","verify","handleSelectChange","finally","newMonitorTags","toString","newTags","activeMonitorIndex","editMonitorTags","defaultValue","paddingBottom","schema","yup","shape","required","trim","ControlCardWrapper","setIsRequired","isCodeRequestLoading","activeTag","tagsMonitor","setTagsMonitor","defaultValues","myId","resolver","yupResolver","control","errors","formState","useFieldArray","fields","updateOption","update","appendTag","append","removeTag","remove","cardItem","opt","refCheckBox","nameMonitorsTags","deleteArray","concat","bodyItem","newCard","cardForAction","addTags","addArray","Promise","all","newBody","locationId","formRef","message","disable","TooltipContent","color","TimeSelectInput","text","activeIcon","clearDate","isError","isMobile","isTouch","setIsTouch","isReservationPage","changedValue","isEmptyChangedValue","dashIndex","indexOf","substring","customFunc","touchFunc","touched","handleClick","DeleteModal","deleteCount","isActive","CancelHeader","setScheduleActive","UserAvatar","imageSrc","userName","loading","UnauthenticatedRoute","EmptyReservation","subtitle","getCurrentLocationId","BlockInput","setDate","getProfile","userProfile","BlockModal","setStartDate","endDate","setEndDate","startHours","setStartHours","endHours","setEndHours","setIsError","datePickerModal","allowedTime","hours","scheduleService","setAllowedTime","setScheduledTime","minTime","maxTime","lockCard","removeTechWorkAction","set","minutes","fromHours","toHours","prepareSchedule","checkScheduleData","makeTechWorkAction","showMonthYearPicker","minDate","subDays","inline","start","end","selectsRange","shouldCloseOnSelect","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","makeReservation","hasPermissions","makeBlock","removeBlock","scheduleId","eachDayOfInterval","getHours","toJSON","hoursToMilliseconds","calculateSchedulePosition","schedulesDays","dayHeight","idx","buff","schedulePosition","findVerticalPosition","arr","hourHeight","initialHours","userID","houseBeforeStart","isDate","setHours","roundingMethod","top","generateHours","eachHourOfInterval","loadSchedules","deleteSchedule","scheduleIds","createParams","locationIds","dateFrom","startOfWeek","weekStartsOn","dateTo","endOfWeek","splitHours","checkDates","weekDay","selectedDay","isSameDay","checkTimes","dayTime","seconds","addHours","setScheduledIndex","deleteScheduleEnd","scheduleDuration","scheduledIndex","deleteScheduleStart","scheduledId","deleteEndCheckboxes","selectedCheckboxes","deleteStartCheckboxes","splitIntoTwoSchedule","startSplit","endSplit","startISO","endISO","firstParams","lastParams","makeReservationAction","scheduleDays","rejectWithValue","err","response","loadReservations","deleteReservations","scheduleWeeks","listOfMadeBookings","isShowAvatar","deleteCheckboxes","scheduleSlice","setSelectedDate","setSelectedTime","setScheduleWeeks","setListOfMadeBookings","setScheduleSlotActive","setShowAvatar","setSelectedSchedule","setDeleteCheckboxes","setCheckboxesItem","meta","requestId","addRandomHashToPictureUrl","assign","random","changeProfile","updatedProfile","profileService","profileSlice","getScheduleMonth","loadScheduleMonthThunk","scheduleMonthServices","scheduleMonth","scheduleMonthSlice","loadUsersRolesThunk","rolesService","rolesSlice","setRoles","getDetailedSchedule","loadDetailedScheduleThunk","detailedScheduleServices","detailedScheduleSlice","reservationsSlice","allReservations","selectedDateFrom","selectedDateTo","selectedTimeFrom","selectedTimeTo","setDateFrom","setDateTo","setTimeFrom","setTimeTo","searchSlice","isUserSearched","setIsUserSearched","configureStore","reducer","detailedSchedule","search","middleware","getDefaults","createBrowserHistory","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INPUTS_NAMES","REMEMBER_ME_KEY","Login","isRemember","setIsRemember","rememberMe","remember","domainName","Report","month","fetchReport","reportMonth","report","setReport","console","log","download","ReportSearch","setYear","setMonth","showError","setShowError","startYear","getYear","startOfYear","yearDate","showYearPicker","yearItemNumber","maxDate","Compensation","currentFormatMonth","previousMonth","subMonths","currentYear","isMiddleOfMonth","currentMonth","differenceInWeeks","startOfMonth","handleExceptedMonth","FilterForMobile","setIsOpenFilters","dataWithSort","filterUsers","UserPage","isVisibleUserList","setIsVisibleUserList","isOpenFilters","mobileView","UserRole","VersionInfo","version","web","important","app","os","VersionHistory","Settings","russianRegex","profileSchema","profileName","matches","profileSurname","prepareProfile","userData","img","lastname","pictureString","UserImageLoader","selectedImage","imageChangeHandler","objUrl","isSelectedImageString","URL","createObjectURL","Blob","revokeObjectURL","accept","UserButtons","USER_NAME_FIELD_NAME","USER_SURNAME_FIELD_NAME","UserProfile","closeProfile","encodeImage","setEncodeImage","setName","setSurname","setSelectedImage","files","reader","FileReader","onloadend","base64String","result","readAsDataURL","fullName","path","SearchInput","isGlobalSearch","searchProps","isFocus","setIsFocus","setModalActive","searchUser","clearValue","closeSearchModal","isValueEmpty","loadUsers","validateEmptySearch","isUserFound","isEmptySearch","searchServices","isGuestSearch","usersServices","fetchUser","onKeyDown","key","SearchItem","onCLick","currentUserId","SearchModal","close","selectUser","modalWidth","handleUserClick","selectedUser","UserSchedule","checkBoxNumber","setCheckboxes","allCheckbox","isRecruiter","setIsShowUser","columnId","dayId","setSelectScheduleTime","currentIndex","editedTime","el","oldItems","isCheckBoxDisable","checkbox","isAllCheckboxActive","handleAllCheckBoxActive","keys","handleCheckboxActive","tippyPopperOptions","UserReservation","reservationProps","setIsScheduleActive","isShowUser","setIsShowAvatar","resRef","reservation","reservationStyle","disableSelect","currentChanges","scheduleList","maxWidth","previous","batch","DateValidation","DateRangePicker","setFrom","setTo","ReservationDatePickerFooter","isFooterVisible","generateValidateConstants","isResponseError","isAccessForbidden","isDataIncorrect","isSchedulesIncorrect","getCurrentCard","validateScheduleNotifications","CURRENT_DATE","ReservationDatePicker","showReservationData","setIsFooterVisible","monthQuantity","setMonthQuantity","debouncedSearchValue","setDebouncedSearchValue","setSelectedUser","isUserModalActive","setIsUserModalActive","isEmptyDate","isEmptyHours","currentLocationId","isInputValueEmpty","isAdmin","isSysAdmin","isEditor","makeSchedule","isEmpty","scheduleServices","SCHEDULES","dates","monthsShown","onYearChange","firstHour","lastHour","intervalBookings","initialHour","hour","backgroundColor","positionNumber","DetailedSchedule","setDetailedSchedule","calculateService","fetchDetailedSchedule","paginationService","ind","Days","arrWeek","dayIndex","setDayIndex","activeDate","selectedDayIndex","arrLines","TableLines","line","ScheduleBookingColumn","showCardTime","styles","columnBookings","selectedWeekBookings","schedulePositions","marginTop","CalendarTime","calendarTime","activeTimes","setActiveTimes","selectedTimeIndex","ScheduleWeeks","allReservationsList","isDateLoad","fetchAllReservations","isBefore","isAfter","endOfMonth","ScheduleDay","dayBooking","onTouchStart","ScheduleMonth","week","addDays","arrDays","Schedule","isWeek","isYear","isDetailed","startDayOfReservation","endDayOfReservation","startMonthOfReservation","endMonthOfReservation","SchedulePage","ScheduleDashboardFoundLocations","setDropdownActive","ScheduleButton","url","NavigationButtons","HeaderFacade","isShowPlusButton","StaticButtons","scheduleCount","isMiddle","fetchSchedule","delIndex","isScheduleEnd","isSeparateMiddle","startSeparate","endSeparate","slicedSchedule","DeleteScheduleButtons","isTimeSelected","scheduleCounter","deleteText","cancelText","disableSelection","editSchedule","FilterContext","createContext","useFilterContext","useContext","AllWorkPlaces","searchText","places","elem","it","place","Back","openFilters","SearchFilter","customClass","isDropdownActive","showSearchFilter","setSearchText","filteredLocations","PlaceChanger","setIsDropDownActive","modalRef","ScheduleHeader","ScheduleYearDayOfMonth","isSameDayAndMonth","isSameMonth","showInactive","showBooking","showSuccesBooking","showInactiveLocations","firstDayBooking","lastDayBooking","interactiveDebounce","ScheduleYearMonth","startEveryMonth","everyMonth","ScheduleYear","endOfYear","eachMonthOfInterval","propagationNode","isBurgerOpen","setIsBurgerOpen","isProfileOpen","setIsProfileOpen","isTooltipOpen","setIsTooltipOpen","searchInputRef","headerRef","searchMatch","matchPath","pathname","isEditProfile","hasUpdatedProfile","tooltipTitle","profileCloseHandler","tooltipCloseHandler","prevState","isHeaderContains","clientWidth","Layout","isSidebarOpen","setIsSidebarOpen","ReservationTools","tools","setTools","fetchTools","monitorIndex","ReservationCard","pickReservation","selectedRooms","isSelected","setIsSelected","isRoomSelected","bookingId","select","reservationIndex","getSelectedDateFrom","getSelectedDateTo","getSelectedTimeFrom","getSelectedTimeTo","ReservationRoom","selectedReservations","myBookings","myFilteredBookings","filtered","tables","filteredВookingsByDate","filteredВookingsByTime","roomTitle","oldReservations","selectCurrentRoom","bookingObject","diff","selectAll","WorkplaceFilter","checkedCount","LocationsFilter","locationsFilter","setlocationsFilter","showLocationsFilter","nameRoom","FilterDateFrom","FilterDateTo","FilterDate","popperClassName","FilterTimeFrom","FilterTimeTo","FilterTime","Filters","isFiltersOpen","isReservation","isSearchFilterActive","setIsSearchFilterActive","FilterTitle","subTitle","changeEditMode","isSearchPage","getValidReservations","userReservations","imageUrl","Reservation","setIsFiltersOpen","initialFiltersValue","myReservations","validReservations","openModal","setSelectedReservations","prepareDeleteData","deleteId","deleteScheduleHandle","isMultipleDelete","useDeleteReservations","isReservationSelect","delCount","closeConfirmationModal","Provider","activateSchedule","myReservation","Location","setIsOpenModal","SearchPage","setMyReservations","searchOptions","fetchUserReservations","reservationCount","reqOptions","userFullName","registerLocale","setDefaultLocale","App","instance","axiosInstance","component","svg4","interceptors","request","use","config","Authorization","originalConfig","retry","reject","showServerErrors","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14a5af38.chunk.js","sourcesContent":["/*! modernizr 3.6.0 (Custom Build) | MIT *\r\n * https://modernizr.com/download/?-touchevents-setclasses !*/\r\n!function(e,n,t){function o(e,n){return typeof e===n}function s(){var e,n,t,s,a,i,r;for(var l in c)if(c.hasOwnProperty(l)){if(e=[],n=c[l],n.name&&(e.push(n.name.toLowerCase()),n.options&&n.options.aliases&&n.options.aliases.length))for(t=0;t<n.options.aliases.length;t++)e.push(n.options.aliases[t].toLowerCase());for(s=o(n.fn,\"function\")?n.fn():n.fn,a=0;a<e.length;a++)i=e[a],r=i.split(\".\"),1===r.length?Modernizr[r[0]]=s:(!Modernizr[r[0]]||Modernizr[r[0]]instanceof Boolean||(Modernizr[r[0]]=new Boolean(Modernizr[r[0]])),Modernizr[r[0]][r[1]]=s),f.push((s?\"\":\"no-\")+r.join(\"-\"))}}function a(e){var n=u.className,t=Modernizr._config.classPrefix||\"\";if(p&&(n=n.baseVal),Modernizr._config.enableJSClass){var o=new RegExp(\"(^|\\\\s)\"+t+\"no-js(\\\\s|$)\");n=n.replace(o,\"$1\"+t+\"js$2\")}Modernizr._config.enableClasses&&(n+=\" \"+t+e.join(\" \"+t),p?u.className.baseVal=n:u.className=n)}function i(){return\"function\"!=typeof n.createElement?n.createElement(arguments[0]):p?n.createElementNS.call(n,\"http://www.w3.org/2000/svg\",arguments[0]):n.createElement.apply(n,arguments)}function r(){var e=n.body;return e||(e=i(p?\"svg\":\"body\"),e.fake=!0),e}function l(e,t,o,s){var a,l,f,c,d=\"modernizr\",p=i(\"div\"),h=r();if(parseInt(o,10))for(;o--;)f=i(\"div\"),f.id=s?s[o]:d+(o+1),p.appendChild(f);return a=i(\"style\"),a.type=\"text/css\",a.id=\"s\"+d,(h.fake?h:p).appendChild(a),h.appendChild(p),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(n.createTextNode(e)),p.id=d,h.fake&&(h.style.background=\"\",h.style.overflow=\"hidden\",c=u.style.overflow,u.style.overflow=\"hidden\",u.appendChild(h)),l=t(p,e),h.fake?(h.parentNode.removeChild(h),u.style.overflow=c,u.offsetHeight):p.parentNode.removeChild(p),!!l}var f=[],c=[],d={_version:\"3.6.0\",_config:{classPrefix:\"\",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,n){var t=this;setTimeout(function(){n(t[e])},0)},addTest:function(e,n,t){c.push({name:e,fn:n,options:t})},addAsyncTest:function(e){c.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=d,Modernizr=new Modernizr;var u=n.documentElement,p=\"svg\"===u.nodeName.toLowerCase(),h=d._config.usePrefixes?\" -webkit- -moz- -o- -ms- \".split(\" \"):[\"\",\"\"];d._prefixes=h;var m=d.testStyles=l;Modernizr.addTest(\"touchevents\",function(){var t;if(\"ontouchstart\"in e||e.DocumentTouch&&n instanceof DocumentTouch)t=!0;else{var o=[\"@media (\",h.join(\"touch-enabled),(\"),\"heartz\",\")\",\"{#modernizr{top:9px;position:absolute}}\"].join(\"\");m(o,function(e){t=9===e.offsetTop})}return t}),s(),a(f),delete d.addTest,delete d.addAsyncTest;for(var v=0;v<Modernizr._q.length;v++)Modernizr._q[v]();e.Modernizr=Modernizr}(window,document);","import axios from 'axios';\r\n\r\nexport default axios.create();\r\n","import decodeJwt from 'jwt-decode';\r\n\r\nconst ACCESS_TOKEN_KEY = 'accessToken';\r\nconst ACCESS_TOKEN_STORED_AT_KEY = 'accessTokenStoredAt';\r\nconst timeoutFactor = 0.8;\r\n\r\nexport default {\r\n  refresh: () => {},\r\n\r\n  init(refresh, store, authActions) {\r\n    this.refresh = refresh;\r\n    if (this.isAccessTokenValid()) {\r\n      this.setupRefreshTimer();\r\n      this.setClaims(this.getAccessToken());\r\n      store.dispatch(authActions.setClaims(this.getClaims()));\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  getAccessToken() {\r\n    return localStorage.getItem(ACCESS_TOKEN_KEY);\r\n  },\r\n  setAccessToken(accessToken) {\r\n    localStorage.setItem(ACCESS_TOKEN_KEY, String(accessToken));\r\n  },\r\n  removeTokens() {\r\n    localStorage.clear();\r\n  },\r\n  get storedAt() {\r\n    const res = localStorage.getItem(ACCESS_TOKEN_STORED_AT_KEY);\r\n    return !Number.isNaN(res) ? parseInt(res, 10) : null;\r\n  },\r\n  set storedAt(value) {\r\n    if (value) {\r\n      localStorage.setItem(ACCESS_TOKEN_STORED_AT_KEY, String(value));\r\n    }\r\n  },\r\n  setTokens(token) {\r\n    this.storedAt = Date.now();\r\n    this.setAccessToken(token);\r\n    this.setClaims(token);\r\n    this.setupRefreshTimer();\r\n  },\r\n  isAccessTokenValid() {\r\n    const token = this.getAccessToken();\r\n    return token ? this.isTokenExpired(token) : false;\r\n  },\r\n  setupRefreshTimer() {\r\n    const token = this.getAccessToken();\r\n    if (token) {\r\n      const claims = decodeJwt(token);\r\n      const timeout = this.calcTimeout(this.storedAt, claims.exp * 1000);\r\n      this.timer = setTimeout(() => {\r\n        this.refresh();\r\n      }, timeout);\r\n    }\r\n  },\r\n  calcTimeout(storedAt, expiration) {\r\n    const now = Date.now();\r\n    const delta = (expiration - storedAt) * timeoutFactor - (now - storedAt);\r\n    return Math.max(0, delta);\r\n  },\r\n  isTokenExpired(token) {\r\n    const claims = decodeJwt(token);\r\n    return Date.now() - claims.exp * 1000 < 0;\r\n  },\r\n  setClaims(token) {\r\n    if (token) {\r\n      this.claims = decodeJwt(token);\r\n    }\r\n  },\r\n  getClaims() {\r\n    return this.claims;\r\n  },\r\n};\r\n","export default {\r\n  home: '/locations',\r\n  login: '/login',\r\n  room: '/locations/:id',\r\n  loadAll: '/locations/loadAll',\r\n  search: '/locations/search/:fullName',\r\n  mobileDatepicker: '/locations/mobile-datepicker',\r\n  calendar: '/locations/:id/:number/calendar/:mode',\r\n  reservation: '/my-reservations',\r\n  usersList: '/users',\r\n  userRoles: '/user-roles',\r\n  compensations: '/compensations',\r\n  settings: '/settings',\r\n  datePicker: '/date-picker',\r\n  versionHistory: '/version-history',\r\n};\r\n","export default {\r\n  apiLogin: '/api/Auth/login',\r\n  apiLogout: '/api/Auth/logout',\r\n  apiRefresh: '/api/Auth/refresh',\r\n  apiGetProfile: '/api/user',\r\n  apiGetRooms: '/api/location/rooms',\r\n  apiGetPage: '/api/location/page',\r\n  apiDeleteCard: '/api/location',\r\n  apiCreateCard: '/api/location',\r\n  apiSetOwnSchedules: '/api/schedule/set-own-schedules',\r\n  apiSetSchedules: '/api/schedule/set-schedules',\r\n  apiGetSchedules: '/api/schedule/page',\r\n  apiGetPersonCompensation: '/api/compensation/:month',\r\n  apiGetReport: '/api/report',\r\n  apiDeleteSchedules: '/api/schedule/remove-user-schedules',\r\n  apiDeleteUsersSchedules: '/api/schedule/remove-schedules',\r\n  apiGetCardItemsType: '/api/location-item/item-type',\r\n  apiGetCardItems: '/api/location-item',\r\n  apiGetUsers: '/api/user/info/page',\r\n  apiChangeActiveCard: '/api/Location/status',\r\n  apiCreateCardItem: '/api/location-item',\r\n  apiCreateCardItemWithCode: '/api/location-item/with-code',\r\n  apiGetUserList: '/api/User/info/Page',\r\n  apiUpdateUserList: '/api/User/info',\r\n  apiDeleteCardItem: '/api/location-item',\r\n  apiReservations: '/api/schedule/user-schedules',\r\n  apiGetAllReservations: '/api/schedule/search-page',\r\n  apiGetAllUserList: '/api/user/search',\r\n  apiGetUserListForAdmin: '/api/User/info-role/page',\r\n  apiGetUsersRoles: '/api/Role',\r\n  apiUpdateUserRole: '/api/User/info-role',\r\n  apiSetTechWork: '/api/schedule/set-tech-schedules',\r\n  apiRemoveTechWork: '/api/schedule/remove-tech-schedules',\r\n};\r\n","const PERMISSIONS = {\r\n  CanManageLocations: 'CanManageLocations',\r\n  CanDeleteReservations: 'CanDeleteReservations',\r\n  CanManageUserInfoRole: 'CanManageUserInfoRole',\r\n  CanManageReservations: 'CanManageReservations',\r\n  CanManageOwnReservations: 'CanManageOwnReservations',\r\n  CanAccessLogs: 'CanAccessLogs',\r\n  CanManageUserInfo: 'CanManageUserInfo',\r\n  CanViewLocations: 'CanViewLocations',\r\n  CanViewReservations: 'CanViewReservations',\r\n  CanDeleteOwnReservations: 'CanDeleteOwnReservations',\r\n  CanDeleteLocations: 'CanDeleteLocations',\r\n  CanAccessStats: 'CanAccessStats',\r\n  CanManageLocationItemsWithCodes: 'CanManageLocationItemsWithCodes',\r\n  CanViewLocationItems: 'CanViewLocationItems',\r\n  CanDeleteLocationItems: 'CanDeleteLocationItems',\r\n  CanManageLocationItems: 'CanManageLocationItems',\r\n  CanManuallyImportData: 'CanManuallyImportData',\r\n  CanSearchUsers: 'CanSearchUsers',\r\n  CanManageTechnicalWorkPeriod: 'CanManageTechnicalWorkPeriod',\r\n};\r\n\r\nexport default PERMISSIONS;\r\n\r\nexport const adminPermissions = [\r\n  PERMISSIONS.CanViewLocationItems,\r\n  PERMISSIONS.CanManageLocations,\r\n  PERMISSIONS.CanAccessStats,\r\n  PERMISSIONS.CanViewLocations,\r\n  PERMISSIONS.CanDeleteReservations,\r\n  PERMISSIONS.CanManageUserInfoRole,\r\n  PERMISSIONS.CanManageUserInfo,\r\n  PERMISSIONS.CanManageReservations,\r\n  PERMISSIONS.CanDeleteOwnReservations,\r\n  PERMISSIONS.CanAccessLogs,\r\n  PERMISSIONS.CanDeleteLocationItems,\r\n  PERMISSIONS.CanManageOwnReservations,\r\n  PERMISSIONS.CanManageLocationItems,\r\n  PERMISSIONS.CanDeleteLocations,\r\n  PERMISSIONS.CanViewReservations,\r\n];\r\nexport const guestPermissions = [PERMISSIONS.CanViewReservations];\r\nexport const recruiterPermissions = [PERMISSIONS.CanManageUserInfo, PERMISSIONS.CanManageReservations];\r\nexport const statisticianPermissions = [PERMISSIONS.CanManageUserInfo, PERMISSIONS.CanAccessStats];\r\nexport const sysAdminPermissions = [\r\n  PERMISSIONS.CanManageLocationItems,\r\n  PERMISSIONS.CanViewLocationItems,\r\n  PERMISSIONS.CanManageLocations,\r\n  PERMISSIONS.CanViewLocations,\r\n  PERMISSIONS.CanDeleteReservations,\r\n  PERMISSIONS.CanManuallyImportData,\r\n  PERMISSIONS.CanManageReservations,\r\n  PERMISSIONS.CanSearchUsers,\r\n  PERMISSIONS.CanDeleteOwnReservations,\r\n  PERMISSIONS.CanDeleteLocationItems,\r\n  PERMISSIONS.CanManageOwnReservations,\r\n  PERMISSIONS.CanManageLocationItems,\r\n  PERMISSIONS.CanDeleteLocations,\r\n  PERMISSIONS.CanViewReservations,\r\n  PERMISSIONS.CanManageTechnicalWorkPeriod,\r\n];\r\n","export default {\r\n  visibleFooterWidth: 658,\r\n};\r\n","export default {\r\n  sessionDate: 'sessionDate',\r\n};\r\n","export default {\r\n  day: undefined,\r\n  week: 'schedule-week',\r\n  month: 'schedule-month',\r\n  year: 'schedule-year',\r\n  details: 'details',\r\n};\r\n","import apiAxios from 'services/api/apiAxios';\r\nimport tokenService from 'services/auth/tokenService';\r\nimport { API } from 'shared/constants';\r\n\r\nexport default {\r\n  async login(username, password) {\r\n    const res = await apiAxios.post(API.apiLogin, {\r\n      username,\r\n      password,\r\n    });\r\n    await tokenService.setTokens(res.data.accessToken);\r\n    return tokenService.getClaims();\r\n  },\r\n  async logout() {\r\n    await apiAxios.get(API.apiLogout);\r\n    tokenService.removeTokens();\r\n  },\r\n  async refresh() {\r\n    const res = await apiAxios.get(API.apiRefresh, { withCredentials: true });\r\n    if (res.data) {\r\n      tokenService.setTokens(res.data.accessToken);\r\n    }\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from 'services/auth/authService';\r\n\r\nexport const loginUser = createAsyncThunk('login/requestStatus', ({ username, password }) => authService.login(username, password));\r\nexport const logoutUser = createAsyncThunk('logout/requestStatus', () => authService.logout());\r\nexport const refreshToken = createAsyncThunk('refresh/requestStatus', () => authService.refresh());\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  claims: {},\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setIsAuth(state, action) {\r\n      state.isAuth = action.payload;\r\n    },\r\n    setClaims(state, action) {\r\n      state.claims = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(actions.loginUser.fulfilled, (state, action) => {\r\n      state.isAuth = true;\r\n      state.claims = action.payload;\r\n    });\r\n    builder.addCase(actions.logoutUser.fulfilled, (state) => {\r\n      state.isAuth = false;\r\n      state.claims = {};\r\n    });\r\n    builder.addCase(actions.refreshToken.rejected, (state) => {\r\n      state.isAuth = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\nexport const authActions = authSlice.actions;\r\n","import apiAxios from './apiAxios';\r\n\r\nexport default {\r\n  getAll() {\r\n    return apiAxios.get('locations/rooms');\r\n  },\r\n  search(value) {\r\n    return apiAxios.post(`locations/search/${value}`);\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport locationService from 'services/api/locationService';\r\nimport { ROUTES } from 'shared/constants';\r\nimport apiAxios from 'services/api/apiAxios';\r\nimport apiEndpoints from 'shared/constants/apiEndpoints';\r\n\r\nexport const loadLocations = createAsyncThunk(ROUTES.loadAll, () => locationService.getAll().then((res) => res.data));\r\nexport const searchLocations = createAsyncThunk(ROUTES.search, (value) => locationService.search(value).then((res) => res.data));\r\n\r\nexport const loadLocationsThunk = createAsyncThunk(ROUTES.room, async () => {\r\n  const res = await apiAxios.get(apiEndpoints.apiGetRooms);\r\n  return res.data;\r\n});\r\n","export const getLocations = (store) => store.locations.locations;\r\nexport const getCards = (store) => store.locations.cards;\r\nexport const getUsers = (store) => store.locations.users;\r\nexport const getCurrentLocation = (name) => (store) => store.locations.locations.find((location) => location.name === name);\r\nexport const getIsOpenSearch = (store) => store.locations.isOpenSearch;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadLocationsThunk } from './actions';\r\n\r\nconst initialState = {\r\n  locations: [],\r\n  users: [\r\n    { id: 1, name: 'Иван', surname: 'Иванов' },\r\n    { id: 2, name: 'Владимир', surname: 'Иванов' },\r\n  ],\r\n  loaded: false,\r\n  searchItem: null,\r\n  isOpenSearch: false,\r\n};\r\n\r\nexport const locationsSlice = createSlice({\r\n  name: 'locations',\r\n  initialState,\r\n  reducers: {\r\n    setLocations(state, action) {\r\n      state.locations = action.payload;\r\n    },\r\n    setIsOpenSearch(state, action) {\r\n      state.isOpenSearch = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadLocationsThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadLocationsThunk.fulfilled]: (state, action) => {\r\n      state.locations = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadLocationsThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n  [loadLocationsThunk.fulfilled]: (state, action) => {\r\n    state.locations = action.payload;\r\n    state.isLoading = false;\r\n  },\r\n  [loadLocationsThunk.rejected]: (state) => {\r\n    state.isLoading = false;\r\n  },\r\n});\r\n\r\nexport default locationsSlice.reducer;\r\nexport const { setIsOpenSearch } = locationsSlice.actions;\r\nexport * from './selectors';\r\n","import './copyrights.scss';\r\n\r\nexport const Copyrights = () => {\r\n    const year = new Date().getFullYear();\r\n    return <p className=\"copyrights sidebar__copyrights\">© {year} - INOSTUDIO</p>\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default function Button({ isLoading, className, icon, children, ...btnProps }) {\r\n  return (\r\n    <button className={cn('ctrl-button', { [className]: className })} {...btnProps} disabled={isLoading}>\r\n      <span className=\"ctrl-button__container\">\r\n        <span className=\"ctrl-button__text\">{children}</span>\r\n        {React.isValidElement(icon) ? React.cloneElement(icon, { className: cn(`ctrl-button__icon`, icon.props.className) }) : null}\r\n      </span>\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.string,\r\n  type: PropTypes.elementType,\r\n  isLoading: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.node,\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n};\r\n","export default __webpack_public_path__ + \"static/media/svg-sprite.aabdbac0.svg\";","import IconsSprite from 'assets/images/svg-sprite.svg';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default function Icon({ name, size = 24, className, fill, ...iconProps }) {\r\n  return (\r\n    <svg className={cn('icon', className, { 'icon--fill': fill })} width={size} height={size} {...iconProps}>\r\n      <use xlinkHref={`${IconsSprite}#${name}`} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  size: PropTypes.number,\r\n  className: PropTypes.string,\r\n  fill: PropTypes.bool,\r\n};\r\n\r\nIcon.defaultProps = {\r\n  size: 24,\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport { ROUTES } from 'shared/constants';\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <Link to={ROUTES.reservation} className=\"logo\">\r\n      <span className=\"logo__decor\">ino</span>\r\n      <span className=\"logo__text\">reserv</span>\r\n    </Link>\r\n  );\r\n}\r\n","export const isAuthSelector = (state) => state.auth.isAuth;\r\nexport const permissionsSelector = (state) => state.auth.claims.permissions;\r\nexport const getUserId = (state) => state.auth.claims.sub;","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\nimport { ROUTES } from 'shared/constants';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAuthSelector } from 'store/auth/selectors';\r\n\r\nconst ProtectedRoute = React.forwardRef((props, ref) => {\r\n  const isAuth = useSelector(isAuthSelector);\r\n  if (!isAuth) {\r\n    return <Redirect ref={ref} to={ROUTES.login} />;\r\n  }\r\n  return <Route ref={ref} {...props} />;\r\n});\r\nProtectedRoute.displayName = 'ProtectedRoute';\r\nexport default ProtectedRoute;\r\n","export const getCards = (store) => store.cards.cards;\r\nexport const getCardsItemsType = (store) => store.cards.itemTypes;\r\nexport const getCurrentCard = (store) => store.cards.currentCard;\r\n","import { ru } from 'date-fns/locale';\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport { differenceInHours, parseISO } from 'date-fns';\r\n\r\nexport function on(obj, ...args) {\r\n  if (obj && obj.addEventListener) {\r\n    obj.addEventListener(...args);\r\n  }\r\n}\r\n\r\nexport function off(obj, ...args) {\r\n  if (obj && obj.removeEventListener) {\r\n    obj.removeEventListener(...args);\r\n  }\r\n}\r\n\r\nexport function hasPermission(permissions, personPermissions) {\r\n  return permissions.every((perm) => personPermissions?.includes(perm));\r\n}\r\n\r\nexport function format(date, customFormat) {\r\n  return dateFnsFormat(date, customFormat, { locale: ru });\r\n}\r\n\r\nexport function disableClick(e) {\r\n  e.stopPropagation();\r\n  e.preventDefault();\r\n}\r\n\r\nexport function checkNullSrc(src) {\r\n  return src?.slice(0, 4) === 'null';\r\n}\r\n\r\nexport function countScheduleDuration(schedules, uniqUsers) {\r\n  return Array.isArray(schedules) && Array.isArray(uniqUsers)\r\n    ? schedules.reduce((acc, cur) => {\r\n        if (uniqUsers.some((user) => user === cur.user.id)) return acc + differenceInHours(parseISO(cur.to), parseISO(cur.from));\r\n        return acc;\r\n      }, 0)\r\n    : 0;\r\n}\r\n\r\nexport const isBrowser = typeof window !== 'undefined';\r\n","import { useEffect, useRef } from 'react';\r\nimport { off, on } from 'shared/utils';\r\n\r\nconst defaultEvents = ['mousedown', 'touchstart'];\r\n\r\nconst useClickAway = ({ ref, cb, events = defaultEvents, exclude }) => {\r\n  const savedCallback = useRef(cb);\r\n  useEffect(() => {\r\n    savedCallback.current = cb;\r\n  }, [cb]);\r\n  useEffect(() => {\r\n    const handler = (event) => {\r\n      const el = ref;\r\n      if (el && !el.current?.contains(event.target) && (exclude?.current ? !exclude.current.contains(event.target) : true)) {\r\n        savedCallback.current(event);\r\n      }\r\n    };\r\n    for (const eventName of events) {\r\n      on(document, eventName, handler);\r\n    }\r\n    return () => {\r\n      for (const eventName of events) {\r\n        off(document, eventName, handler);\r\n      }\r\n    };\r\n  }, [events, ref, exclude]);\r\n};\r\n\r\nexport default useClickAway;\r\n","export function getParamsForLoadCards(parentLocationId, date) {\r\n  return {\r\n    pageRequest: {\r\n      size: 100,\r\n      index: 0,\r\n      params: {\r\n        query: '',\r\n        sortAsc: true,\r\n        sortBy: 0,\r\n        options: {\r\n          parentLocationId,\r\n          date,\r\n        },\r\n      },\r\n    },\r\n  };\r\n}\r\n","import apiEndpoints from 'shared/constants/apiEndpoints';\r\nimport apiAxios from 'services/api/apiAxios';\r\n\r\nexport default {\r\n  getCards: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetPage, params);\r\n    return res.data;\r\n  },\r\n  getCardItemsType: async () => {\r\n    const res = await apiAxios.get(apiEndpoints.apiGetCardItemsType);\r\n    return res.data;\r\n  },\r\n  getCardItems: async (cardId) => {\r\n    const res = await apiAxios.get(`${apiEndpoints.apiGetCardItems}/${cardId}`);\r\n    return { data: res.data };\r\n  },\r\n  deleteCard: async (params) => {\r\n    const res = await apiAxios.delete(apiEndpoints.apiDeleteCard, { data: params });\r\n    return res.data;\r\n  },\r\n\r\n  createCard: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiCreateCard, params);\r\n    return res.data;\r\n  },\r\n  editActiveCard: async (params) => {\r\n    await apiAxios.post(apiEndpoints.apiChangeActiveCard, params);\r\n    return { activeCard: params.dto };\r\n  },\r\n  setToLocalStorage: (curCardName, cardsName, currentCard, cards) => {\r\n    localStorage.setItem(curCardName, JSON.stringify(currentCard));\r\n    localStorage.setItem(cardsName, JSON.stringify(cards));\r\n  },\r\n  createCardItem: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiCreateCardItem, params);\r\n    return res.data;\r\n  },\r\n  getScheduleDay: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetSchedules, params);\r\n    return res.data;\r\n  },\r\n  createCardItemWithCode: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiCreateCardItemWithCode, params);\r\n    return res.data;\r\n  },\r\n  deleteCardItem: async (params) => {\r\n    const res = await apiAxios.delete(apiEndpoints.apiDeleteCardItem, { data: params });\r\n    return res.data;\r\n  },\r\n  checkMonitor: async (params) => {\r\n    const res = await apiAxios.post('https://inventory.linserv.inostudio.net/api/reservation/monitor', { code: params });\r\n    return res.data;\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport cardsServices from 'services/cards/cardServices';\r\n\r\nexport const loadCardsThunk = createAsyncThunk('location/page', async (params) => cardsServices.getCards(params));\r\n\r\nexport const deleteCardThunk = createAsyncThunk('location/deleteCard', async (params) => cardsServices.deleteCard(params));\r\n\r\nexport const createCardThunk = createAsyncThunk('location/createCard', async (params) => cardsServices.createCard(params));\r\n\r\nexport const loadCardItemsTypeThunk = createAsyncThunk('/api/location-item/item-type', async () => cardsServices.getCardItemsType());\r\n\r\nexport const changeActiveCardThunk = createAsyncThunk('/api/Location/status', async (params) => cardsServices.editActiveCard(params));\r\n\r\nexport const createCardItemThunk = createAsyncThunk('/api/location-item', async (params) => cardsServices.createCardItem(params));\r\n\r\nexport const loadScheduleDayThunk = createAsyncThunk('/api/Schedule/page', async (params) => cardsServices.getScheduleDay(params));\r\n\r\nexport const deleteCardItemThunk = createAsyncThunk('location/deleteCardItem', async (params) => cardsServices.deleteCardItem(params));\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  loadCardsThunk,\r\n  createCardThunk,\r\n  loadCardItemsTypeThunk,\r\n  changeActiveCardThunk,\r\n  createCardItemThunk,\r\n  loadScheduleDayThunk,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  cards: { rows: [] },\r\n  loaded: false,\r\n  searchItem: null,\r\n  isLoading: false,\r\n  itemTypes: [],\r\n  currentCard: null,\r\n};\r\n\r\nexport const cardsSlice = createSlice({\r\n  name: 'cards',\r\n  initialState,\r\n  reducers: {\r\n    setCards(state, action) {\r\n      state.cards = action.payload;\r\n    },\r\n    removeCard(state, action) {\r\n      state.cards.rows = state.cards.rows.filter((card) => card.id !== action.payload);\r\n    },\r\n    setCurrentCard(state, action) {\r\n      state.currentCard = action.payload;\r\n    },\r\n    cleanState(state) {\r\n      state.cards = initialState.cards;\r\n      state.loaded = initialState.loaded;\r\n      state.searchItem = initialState.searchItem;\r\n      state.isLoading = initialState.isLoading;\r\n      state.itemTypes = initialState.itemTypes;\r\n      state.currentCard = initialState.currentCard;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadCardsThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadCardItemsTypeThunk.fulfilled]: (state, action) => {\r\n      state.itemTypes = action.payload;\r\n    },\r\n    [loadCardsThunk.fulfilled]: (state, action) => {\r\n      state.cards = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadScheduleDayThunk.fulfilled]: () => {},\r\n    [loadCardsThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n\r\n    [createCardThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [createCardThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [createCardThunk.fulfilled]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [changeActiveCardThunk.fulfilled]: (state, action) => {\r\n      const index = state.cards?.rows?.findIndex((card) => card.id === action.payload.activeCard.id);\r\n      if (index > -1) {\r\n        state.cards.rows[index].isInactive = action.payload.activeCard.isInactive;\r\n      }\r\n    },\r\n    [createCardItemThunk.fulfilled]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default cardsSlice.reducer;\r\nexport const cardsActions = cardsSlice.actions;\r\nexport * from './selectors';\r\n","import { useMemo } from 'react';\r\nimport { parseISO } from 'date-fns/esm';\r\nimport PropTypes from 'prop-types';\r\nimport { format } from 'shared/utils/utils';\r\nimport { UserAvatar } from 'shared/components';\r\nimport cn from 'classnames';\r\n\r\nexport const ScheduleMonthUsers = ({ booking, isMonth = false, bookings, isMyReservation }) => {\r\n  const filteredSchedules = useMemo(() => bookings?.filter((schedule) => schedule.user.id === booking.user.id), [bookings]);\r\n  const isSchedulesWithTechWork = useMemo(() => !filteredSchedules?.some((schedule) => schedule.type === 0), [filteredSchedules]);\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <UserAvatar schedule={booking} isMySchedule={isMyReservation} />\r\n      <span className=\"user__name\">{`${booking.user.firstName} ${booking.user.lastName}`}</span>\r\n\r\n      {isMonth && (\r\n        <div className=\"user__booking\">\r\n          {isMonth &&\r\n            filteredSchedules?.map((filteredShedule) => (\r\n              <div\r\n                className={cn(\r\n                  'user__booking__item',\r\n                  { 'user__booking__item--inactive': isSchedulesWithTechWork },\r\n                  { 'item--border': isMyReservation },\r\n                  { 'item--border--inactive': isSchedulesWithTechWork && isMyReservation }\r\n                )}\r\n              >\r\n                {format(parseISO(filteredShedule.from), 'HH:mm')} - {format(parseISO(filteredShedule.to), 'HH:mm')}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nScheduleMonthUsers.propTypes = {\r\n  booking: PropTypes.object,\r\n  isMonth: PropTypes.bool,\r\n  bookings: PropTypes.array,\r\n  isMyReservation: PropTypes.bool,\r\n};\r\n","import { useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Icon, TooltipContent } from 'shared/components';\r\nimport * as Selectors from 'store/cards/selectors';\r\nimport PropTypes from 'prop-types';\r\nimport { disableClick } from 'shared/utils';\r\n\r\nfunction CardAttributes({ items, monitorInfo, loadMonitorInfo }) {\r\n  const cardItemsTypes = useSelector(Selectors.getCardsItemsType);\r\n  const iconClasses = { keyboard: 'keyboard-icon', monitor: 'monitor-icon' };\r\n  const [isOpenToolTip, setIsOpenToolTip] = useState(false);\r\n\r\n  const hideTooltip = () => {\r\n    setIsOpenToolTip(false);\r\n  };\r\n  const monitorsCount = useMemo(() => {\r\n    if (!items?.length || !cardItemsTypes?.length) return 0;\r\n\r\n    const monitorType = cardItemsTypes.find((type) => type.name === 'Монитор');\r\n\r\n    return items.filter((item) => item.typeId === monitorType?.id).length;\r\n  }, [items, cardItemsTypes]);\r\n\r\n  const icons = {\r\n    '178ccf46-8263-436e-9f3d-001b121dceda': 'monitor',\r\n    'acef9858-8534-42dc-8b5c-36649f73736b': 'keyboard',\r\n    'e35b94d1-25a9-4a4b-800e-4e2feb6f1840': 'sysBlock',\r\n    '2e05f08c-79a4-45a1-859d-597c8ee3840a': 'mouse',\r\n    'c313868b-aa2e-409d-bd0d-fd7933bee650': 'usb',\r\n  };\r\n\r\n  const uniqIcons = useMemo(() => {\r\n    const itemsTypes = items?.map((item) => item.typeId);\r\n    const itemsIcons = itemsTypes?.map((type) => icons[type]);\r\n    return Array.from(new Set(itemsIcons));\r\n  }, [icons, items]);\r\n\r\n  const actionWithMonitor = () => {\r\n    setIsOpenToolTip(true);\r\n    loadMonitorInfo();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-tool__wrapper card-group\" onClick={disableClick}>\r\n      {monitorsCount > 0 && (\r\n        <div className=\"card-group__monitor\" data-tip data-for=\"monitor\" onMouseEnter={actionWithMonitor} onMouseLeave={hideTooltip}>\r\n          <div data-tip data-for=\"monitor\" className=\"monitor-icon\" />\r\n          <Icon className=\"icon card-tool__wrapper-icon monitor\" name=\"monitor\" fill />\r\n        </div>\r\n      )}\r\n      {uniqIcons\r\n        ?.filter((itemIcon) => itemIcon !== 'monitor')\r\n        .map((item) => (\r\n          <Icon className={`icon card-tool__wrapper-icon ${iconClasses[item]}`} name={item} key={item} fill />\r\n        ))}\r\n\r\n      {monitorInfo?.length > 0 && isOpenToolTip && (\r\n        <div className=\"tooltip_container\">\r\n          {monitorInfo.map((monitor) => (\r\n            <TooltipContent monitorInfo={monitor} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      {monitorsCount > 0 && <span className=\"card-tool__wrapper-value\">{monitorsCount}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardAttributes.propTypes = {\r\n  items: PropTypes.array,\r\n  monitorInfo: PropTypes.any,\r\n  loadMonitorInfo: PropTypes.func,\r\n};\r\n\r\nexport default CardAttributes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Btn = React.forwardRef(({className, icon, ...btnProps}, ref) => (\r\n    <button className={className} {...btnProps} ref={ref}>\r\n        {icon}\r\n    </button>\r\n));\r\n\r\nBtn.propTypes = {\r\n    className: PropTypes.string,\r\n    icon: PropTypes.node,\r\n};","import PropTypes from 'prop-types';\r\nimport { Icon } from 'shared/components/';\r\nimport { Btn } from 'shared/components/Btn';\r\nimport { useSelector } from 'react-redux';\r\nimport { disableClick, hasPermission } from 'shared/utils';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { sysAdminPermissions } from 'shared/constants/permissions';\r\nimport cn from 'classnames';\r\n\r\nexport default function CardActions({ onDelete, onEdit, onLock, isInactive, isFullTimeInactive }) {\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const isCanManageTechnicalWorkPeriod = hasPermission(sysAdminPermissions, personPermissions);\r\n\r\n  return (\r\n    <div className=\"card-tool__wrapper card-group no-border bottom_card card_edit\" onClick={disableClick}>\r\n      <div className=\"action-icon\">\r\n        <Btn\r\n          className={cn('ctrl-button--icon tool_container delete-icon', { 'ctrl-button--icon--inactive': isFullTimeInactive })}\r\n          icon={<Icon name=\"abort\" />}\r\n          onClick={() => onDelete(true)}\r\n        />\r\n        <Btn\r\n          className={cn('ctrl-button--icon tool_container edit-icon', { 'ctrl-button--icon--inactive': isFullTimeInactive })}\r\n          icon={<Icon name=\"pen\" />}\r\n          onClick={() => onEdit(true)}\r\n        />\r\n      </div>\r\n\r\n      <Btn\r\n        className={cn(\r\n          'ctrl-button--icon tool_container',\r\n          { 'ctrl-button--icon--inactive': isFullTimeInactive },\r\n          { 'ctrl-button--icon--hide': isCanManageTechnicalWorkPeriod }\r\n        )}\r\n        icon={\r\n          <Icon\r\n            name={isInactive ? 'lock-closed' : 'lock-opened'}\r\n            className={isInactive ? 'lock-closed-icon' : 'lock-opened-icon'}\r\n            size={36}\r\n            onClick={onLock}\r\n          />\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCardActions.propTypes = {\r\n  onEdit: PropTypes.func,\r\n  onDelete: PropTypes.func,\r\n  onLock: PropTypes.func,\r\n  isInactive: PropTypes.bool,\r\n  isFullTimeInactive: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nfunction CardStatus({ isCardFullReserved, isFullTimeInactive, reservationInfo }) {\r\n  const isPartialBusy = reservationInfo.length && !isFullTimeInactive;\r\n  const getStatusText = () => {\r\n    if (isPartialBusy) {\r\n      return isCardFullReserved ? 'Полный резерв' : 'Частичный резерв';\r\n    }\r\n    return isFullTimeInactive ? 'Недоступно' : 'Свободно';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span\r\n        className={cn(\r\n          { card__status: !reservationInfo.length || isFullTimeInactive },\r\n          { 'card__status--busy': isPartialBusy },\r\n          { 'card__status--full-busy': isCardFullReserved },\r\n          { 'card__status--inactive': isFullTimeInactive }\r\n        )}\r\n      >\r\n        {getStatusText()}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nCardStatus.propTypes = {\r\n  isFullTimeInactive: PropTypes.bool,\r\n  isCardFullReserved: PropTypes.bool,\r\n  reservationInfo: PropTypes.any,\r\n};\r\nexport default CardStatus;\r\n","import PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router';\r\nimport CardStatus from 'shared/components/CardListItem/components/CardStatus';\r\n\r\nfunction CardHeader({ card, isFullTimeInactive, room }) {\r\n  const match = useParams(room);\r\n  const { reservationInfo } = card;\r\n  const isCardFullReserved = reservationInfo[0]?.availabilityStatus === 2;\r\n  return (\r\n    <div className=\"card__header card-group\">\r\n      <p className=\"card__title\">\r\n        <span className=\"card__title-room\">{match?.id}</span>/М{`${card.name}`}\r\n      </p>\r\n      <CardStatus isCardFullReserved={isCardFullReserved} isFullTimeInactive={isFullTimeInactive} reservationInfo={reservationInfo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  card: PropTypes.object,\r\n  isFullTimeInactive: PropTypes.bool,\r\n  room: PropTypes.string,\r\n};\r\nexport default CardHeader;\r\n","import { ScheduleMonthUsers } from 'modules/Schedule/components/ScheduleMonthUsers/ScheduleMonthUsers';\r\nimport { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'shared/components';\r\nimport uniqBy from 'lodash.uniqby';\r\nimport { getUserId } from 'store/auth/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { parseISO } from 'date-fns/esm';\r\nimport { format } from 'shared/utils/utils';\r\n\r\nimport './index.scss';\r\n\r\nfunction ToolTipInactive({ schedules }) {\r\n  const shedulesTechWork = useMemo(() => schedules.filter((res) => res.type === 1) || [], [schedules]);\r\n  const shedulesWithoutTechWork = useMemo(() => schedules.filter((res) => res.type !== 1) || [], [schedules]);\r\n  const filterBooking = useMemo(() => uniqBy(shedulesWithoutTechWork, 'user.id'), [shedulesWithoutTechWork]);\r\n\r\n  const userId = useSelector(getUserId);\r\n  return (\r\n    <div className=\"tooltip-inactive__content\">\r\n      <div className=\"tooltip-inactive__title\">\r\n        <span className=\"tooltip-inactive__icon\">\r\n          <Icon name=\"warning\" />\r\n        </span>\r\n        <p>Место недоступно по причине проведения технических работ.</p>\r\n      </div>\r\n      {shedulesTechWork.map((time) => (\r\n        <div className=\"tooltip-inactive__subtitle\" key={time.id}>\r\n          <p>В период:</p>\r\n          <div className=\"user__booking__item\">\r\n            {format(parseISO(time?.from), 'HH:mm')} - {format(parseISO(time?.to), 'HH:mm')}\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {filterBooking.map((time) => (\r\n        <>\r\n          <div className=\"user__booking__line\" />\r\n          <div className=\"user__booking\">\r\n            <div className=\"user__booking--month\">\r\n              <ScheduleMonthUsers\r\n                key={time.id}\r\n                booking={time}\r\n                bookings={shedulesWithoutTechWork}\r\n                isMonth\r\n                isMyReservation={time.user.id === userId}\r\n              />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nToolTipInactive.propTypes = { schedules: PropTypes.array };\r\nexport default ToolTipInactive;\r\n","export const getIsScheduleActive = (store) => store.schedule.isScheduleActive;\r\nexport const getIsFooterVisible = (store) => store.schedule.isFooterVisible;\r\nexport const getCurrentDate = (store) => store.schedule.currentDate;\r\nexport const getListOfAllReservations = (store) => store.schedule.listOfAllReservations?.rows;\r\nexport const getListOfReservations = (store) => store.schedule.listOfReservations?.schedules;\r\nexport const getSelectedDate = (store) => store.schedule.selectedDate;\r\nexport const getSelectedTime = (store) => store.schedule.selectedTime;\r\nexport const getIsScheduleSlotActive = (store) => store.schedule.isScheduleSlotActive;\r\nexport const getIsShowAvatar = (store) => store.schedule.isShowAvatar;\r\nexport const getSelectedSchedule = (store) => store.schedule.selectedSchedule;\r\nexport const getCheckboxes = (store) => store.schedule.checkboxes;\r\nexport const getDeleteCheckboxes = (store) => store.schedule.deleteCheckboxes;\r\nexport const getScheduleMode = (store) => store.schedule.scheduleMode;\r\n","import { useMemo } from 'react';\r\nimport { ScheduleMonthUsers } from '../ScheduleMonthUsers';\r\nimport { countScheduleDuration } from 'shared/utils';\r\nimport { UserAvatar } from 'shared/components';\r\nimport { getUserId } from 'store/auth/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Tippy from '@tippyjs/react';\r\nimport uniqBy from 'lodash.uniqby';\r\n\r\nexport const ScheduleMonthBooked = ({ bookings, hideTooltip }) => {\r\n  const userId = useSelector(getUserId);\r\n\r\n  const showCounter = bookings.length > 4;\r\n  const counterValue = bookings.length - 3;\r\n\r\n  const filterBooking = useMemo(() => uniqBy(bookings, 'user.id'), [bookings]);\r\n  const uniqUsersId = filterBooking.map((booking) => booking.user.id);\r\n  const avatars = useMemo(\r\n    () =>\r\n      (showCounter ? filterBooking.slice(0, 3) : filterBooking).map((booking) => (\r\n        <UserAvatar\r\n          key={booking.id}\r\n          schedule={booking}\r\n          isMySchedule={booking.user.id === userId}\r\n          isFullDayReserved={countScheduleDuration(bookings, uniqUsersId) >= 7}\r\n        />\r\n      )),\r\n    [bookings, filterBooking, showCounter, uniqUsersId, userId]\r\n  );\r\n\r\n  return (\r\n    <Tippy\r\n      interactive\r\n      placement=\"bottom\"\r\n      offset={[0, 4]}\r\n      popperOptions={{\r\n        strategy: 'absolute',\r\n        modifiers: [\r\n          {\r\n            name: 'flip',\r\n            options: {\r\n              fallbackPlacements: ['top', 'left'],\r\n            },\r\n          },\r\n        ],\r\n      }}\r\n      content={\r\n        <div className=\"users schedule-month__users\">\r\n          {filterBooking.map((booking) => (\r\n            <ScheduleMonthUsers\r\n              key={booking.id}\r\n              booking={booking}\r\n              bookings={filterBooking}\r\n              isMonth\r\n              isMyReservation={booking.user.id === userId}\r\n            />\r\n          ))}\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"schedule-month__booked\" onMouseEnter={hideTooltip}>\r\n        {avatars}\r\n        {showCounter && <span className=\"schedule-month__all-booked\">+{counterValue}</span>}\r\n      </div>\r\n    </Tippy>\r\n  );\r\n};\r\n\r\nScheduleMonthBooked.propTypes = {\r\n  bookings: PropTypes.array,\r\n  hideTooltip: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from 'shared/components';\r\nimport cn from 'classnames';\r\n\r\nimport './formModal.scss';\r\n\r\nexport default function FormModal({ children, title, excludeRef, onClose, className, isDeleteForm = false }) {\r\n  return (\r\n    <div className={cn('modal-form__background', className)} ref={excludeRef}>\r\n      <div className={cn('modal-form', { 'modal-form--delete': isDeleteForm })}>\r\n        <div className=\"modal-form__container\">\r\n          <span className=\"modal-form__icon-wrapper\" onClick={onClose}>\r\n            <Icon className=\"modal-form__icon-closed\" size={24} name=\"cross\" />\r\n          </span>\r\n          <div className=\"modal-form__title\">{title}</div>\r\n          <div className=\"form form-authtorisation\"> {children} </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormModal.propTypes = {\r\n  title: PropTypes.node,\r\n  children: PropTypes.node,\r\n  excludeRef: PropTypes.object,\r\n  onClose: PropTypes.func,\r\n  className: PropTypes.string,\r\n  isDeleteForm: PropTypes.bool,\r\n};\r\n","import { useState, useRef, useCallback, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\nimport cardsServices from 'services/cards/cardServices';\r\nimport { ConfirmationModal, ControlCardWrapper, BlockModal } from 'shared/components';\r\nimport { CALENDAR_MODES, ROUTES } from 'shared/constants';\r\nimport { CardHeader, CardAttributes, CardActions, ToolTipInactive } from 'shared/components/CardListItem/components/';\r\nimport { disableClick } from 'shared/utils';\r\nimport { deleteCardThunk, loadCardsThunk } from 'store/cards/actions';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { generatePath, useParams } from 'react-router';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { ScheduleMonthBooked } from 'modules/Schedule/components/ScheduleMonthBooked';\r\nimport { showToastError, showToastSuccess } from 'shared/components/Toast/utils/helpers';\r\nimport { FormModal } from '../FormModal';\r\nimport { differenceInHours } from 'date-fns';\r\nimport cn from 'classnames';\r\n\r\nimport './cardNewstyle.scss';\r\nimport './card-list-item.scss';\r\n\r\nexport default function CardListItem({ card, currentLocation, isCanManageLocations, sizePage, handleCardClick }) {\r\n  const [isOpenConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n  const [isOpenEditModal, setOpenEditModal] = useState(false);\r\n  const [isOpenBlockModal, setOpenBlockModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [monitorInfo, setMonitorInfo] = useState([]);\r\n  const [isOpenInfoAboutInactive, setIsOpenInfoAboutInactive] = useState(false);\r\n  const refModal = useRef(null);\r\n  const excludeRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const date = useSelector(getCurrentDate);\r\n\r\n  const { name } = card;\r\n  const { id: roomNumber } = useParams();\r\n\r\n  const { reservationInfo } = card;\r\n  const isCardFullReserved = reservationInfo[0]?.availabilityStatus === 2;\r\n  const isCardPartReserved = reservationInfo[0]?.availabilityStatus === 1;\r\n  const isCardInactiveAndReserv = useMemo(() => reservationInfo[0]?.reservations?.some((reserv) => reserv.type === 0), [reservationInfo]);\r\n\r\n  useClickAway({\r\n    ref: refModal,\r\n    cb: () => setOpenConfirmationModal(false),\r\n    exclude: excludeRef,\r\n  });\r\n  useClickAway({\r\n    ref: refModal,\r\n    cb: () => setOpenEditModal(false),\r\n    exclude: excludeRef,\r\n  });\r\n\r\n  const handleCloseConfirmationModal = () => setOpenConfirmationModal(false);\r\n  const handleCloseEditModal = () => setOpenEditModal(false);\r\n\r\n  const schedules = card.reservationInfo[0]?.reservations || [];\r\n\r\n  const actionWithCard = () => {\r\n    if (schedules.some((sched) => sched.type === 1)) setIsOpenInfoAboutInactive(true);\r\n  };\r\n\r\n  const hideTooltip = () => setIsOpenInfoAboutInactive(false);\r\n\r\n  const deleteAction = () => {\r\n    setIsLoading(true);\r\n    dispatch(deleteCardThunk({ ids: [card.id] }))\r\n      .unwrap()\r\n      .then(() => {\r\n        dispatch(loadCardsThunk(getParamsForLoadCards(currentLocation?.id)));\r\n        showToastSuccess('Рабочее место удалено', `Рабочее место М${card.name} в кабинете  ${currentLocation?.name} удалено.`);\r\n      })\r\n      .catch(() => {\r\n        showToastError('Ошибка удаления', 'Попробуйте ещё раз');\r\n      });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const loadMonitorInfo = useCallback(() => {\r\n    card.items?.forEach((item) => {\r\n      setMonitorInfo();\r\n      if (item.inventoryCode)\r\n        cardsServices.checkMonitor(item.inventoryCode).then((res) => {\r\n          if (res.status === 'ok') {\r\n            setMonitorInfo((prev) => [...(prev || []), res.data]);\r\n          }\r\n        });\r\n    });\r\n  }, [card.items, setMonitorInfo]);\r\n\r\n  const onLock = async () => {\r\n    setOpenBlockModal(true);\r\n  };\r\n  const isInactiveCard = useMemo(() => card.reservationInfo[0]?.reservations.some((res) => res.type === 1), [card]);\r\n  const isFullTimeInactive =\r\n    (card.reservationInfo[0]?.reservations.some((res) => differenceInHours(new Date(res.to), new Date(res.from)) > 7) && isInactiveCard) ||\r\n    false;\r\n  const closeBlockModal = () => setOpenBlockModal(false);\r\n\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to={generatePath(ROUTES.calendar, { id: roomNumber, number: name, mode: CALENDAR_MODES.week })}\r\n        className={cn(\r\n          'wrapper_card workspace__card ',\r\n          { workspace__card_hover: isCanManageLocations },\r\n          { 'workspace__card--inactive': isFullTimeInactive },\r\n          {\r\n            'workspace__card--part-time':\r\n              !isCardFullReserved && (isCardPartReserved || isCardInactiveAndReserv || (isInactiveCard && !isFullTimeInactive)),\r\n          },\r\n          { 'workspace__card--full-time': isCardFullReserved }\r\n        )}\r\n        onClick={isFullTimeInactive ? disableClick : handleCardClick}\r\n      >\r\n        <div className=\"card__content\">\r\n          <CardHeader card={card} date={date} schedules={schedules} isFullTimeInactive={isFullTimeInactive} />\r\n          <div className=\"card-owner\" onMouseEnter={actionWithCard} onMouseLeave={hideTooltip}>\r\n            <ScheduleMonthBooked bookings={schedules} hideTooltip={hideTooltip} />\r\n          </div>\r\n          <CardAttributes items={card.items} monitorInfo={monitorInfo} loadMonitorInfo={loadMonitorInfo} />\r\n        </div>\r\n        {isCanManageLocations && (\r\n          <CardActions\r\n            isFullTimeInactive={isFullTimeInactive}\r\n            isInactive={isInactiveCard}\r\n            onDelete={setOpenConfirmationModal}\r\n            onEdit={setOpenEditModal}\r\n            onLock={onLock}\r\n          />\r\n        )}\r\n\r\n        {isOpenInfoAboutInactive && isInactiveCard && (\r\n          <div className=\"tooltip-inactive__container\">\r\n            <ToolTipInactive schedules={schedules} />\r\n          </div>\r\n        )}\r\n      </NavLink>\r\n      {isOpenBlockModal && (\r\n        <FormModal\r\n          title={<span>Блокировка рабочего места</span>}\r\n          ref={refModal}\r\n          excludeRef={excludeRef}\r\n          onClose={closeBlockModal}\r\n          className=\"block-card\"\r\n        >\r\n          <BlockModal\r\n            title={`${isInactiveCard ? 'Разблокировать рабочее место ' : 'Выберите период блокировки рабочего места '}${card.name}${\r\n              isInactiveCard ? '?' : '.'\r\n            }`}\r\n            onClose={closeBlockModal}\r\n            card={card?.reservationInfo[0]?.reservations}\r\n            isInactive={isInactiveCard}\r\n            cardId={card?.id}\r\n          />\r\n        </FormModal>\r\n      )}\r\n      {isOpenConfirmationModal && (\r\n        <FormModal\r\n          title={<span>Удаление рабочего места </span>}\r\n          ref={refModal}\r\n          excludeRef={excludeRef}\r\n          onClose={handleCloseConfirmationModal}\r\n          isDeleteForm\r\n        >\r\n          <div className=\"delete-card\">\r\n            <ConfirmationModal\r\n              onClose={handleCloseConfirmationModal}\r\n              action={deleteAction}\r\n              isLoading={isLoading}\r\n              title={`Вы действительно хотите удалить рабочее место ${card.name} в кабинете ${currentLocation?.name}?`}\r\n            />\r\n          </div>\r\n        </FormModal>\r\n      )}\r\n      {isOpenEditModal && (\r\n        <FormModal title={<span>Рабочее место </span>} ref={refModal} excludeRef={excludeRef} onClose={handleCloseEditModal}>\r\n          <ControlCardWrapper\r\n            onClose={handleCloseEditModal}\r\n            card={card}\r\n            sizePage={sizePage}\r\n            location={currentLocation}\r\n            monitorInfo={monitorInfo}\r\n          />\r\n        </FormModal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nCardListItem.propTypes = {\r\n  card: PropTypes.object,\r\n  currentLocation: PropTypes.object,\r\n  isCanManageLocations: PropTypes.bool,\r\n  sizePage: PropTypes.number,\r\n  handleCardClick: PropTypes.func,\r\n};\r\n","import { useState, useRef, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as Selectors from 'store/cards/selectors';\r\nimport { Icon, ControlCardWrapper } from 'shared/components';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { adminPermissions, sysAdminPermissions } from 'shared/constants/permissions';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport { cardsActions } from 'store/cards';\r\nimport CardListItem from '../CardListItem/CardListItem';\r\n\r\nimport './index.scss';\r\nimport './addButton.scss';\r\n\r\nimport { FormModal } from '../FormModal';\r\n\r\nexport default function CardList({ currentLocation, sizePage }) {\r\n  const [isOpenModal, setOpenModal] = useState(false);\r\n  const refModal = useRef(null);\r\n  const excludeRef = useRef(null);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const isCanManageLocations = hasPermission(adminPermissions, personPermissions) || hasPermission(sysAdminPermissions, personPermissions);\r\n  const dispatch = useDispatch();\r\n\r\n  useClickAway({\r\n    ref: refModal,\r\n    cb: () => setOpenModal(false),\r\n    exclude: excludeRef,\r\n  });\r\n\r\n  const cards = useSelector(Selectors.getCards);\r\n  const handleCloseModal = () => setOpenModal(false);\r\n  const visibleCards = useMemo(\r\n    () => cards.rows?.filter((card) => isCanManageLocations || !card.isInactive),\r\n    [cards.rows, isCanManageLocations]\r\n  );\r\n\r\n  return (\r\n    <div className=\"workspace__group\">\r\n      {isCanManageLocations && (\r\n        <button className=\"ctrl-button add-button\" onClick={() => setOpenModal(true)}>\r\n          <span className=\"ctrl-button__container\">\r\n            <Icon className=\"add\" name=\"add\" />\r\n          </span>\r\n        </button>\r\n      )}\r\n      {isOpenModal && isCanManageLocations && (\r\n        <FormModal title={<span>Рабочее место</span>} excludeRef={excludeRef} onClose={handleCloseModal} action=\"create\">\r\n          <ControlCardWrapper\r\n            location={currentLocation}\r\n            onClose={handleCloseModal}\r\n            sizePage={sizePage}\r\n            getParamsForLoadCards={getParamsForLoadCards}\r\n          />\r\n        </FormModal>\r\n      )}\r\n\r\n      {visibleCards?.map((card) => (\r\n        <CardListItem\r\n          key={card.id}\r\n          card={card}\r\n          currentLocation={currentLocation}\r\n          isCanManageLocations={isCanManageLocations}\r\n          sizePage={sizePage}\r\n          getParamsForLoadCards={getParamsForLoadCards}\r\n          handleCardClick={() => dispatch(cardsActions.setCurrentCard(card))}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n  currentLocation: PropTypes.object,\r\n  sizePage: PropTypes.number,\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function NavSubItem({ location, onClick }) {\r\n  return (\r\n    <li className=\"nav__menu-item\">\r\n      <NavLink to={`/locations/${location.name}`} className=\"nav__menu-link\" activeClassName=\"nav__menu-link--active\" onClick={onClick}>\r\n        {location.name}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nNavSubItem.propTypes = {\r\n  location: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n","import { useRef, useState } from 'react';\r\nimport { Btn } from '../Btn';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\nimport { Icon } from 'shared/components';\r\nimport { ROUTES } from 'shared/constants';\r\nimport { checkNullSrc } from 'shared/utils';\r\nimport { logoutUser } from 'store/auth/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default function UserBar({ className, isOpenSearch, isCanViewMyReservations, setProfileOpen, profile }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const userBarRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const isNullImage = checkNullSrc(profile?.pictureUrl);\r\n  const isImageSelected = profile?.pictureUrl === null;\r\n\r\n  useClickAway({\r\n    ref: userBarRef,\r\n    cb: () => setIsModalOpen(false),\r\n  });\r\n\r\n  const logout = async () => {\r\n    await dispatch(logoutUser());\r\n    history.push(ROUTES.login);\r\n  };\r\n\r\n  const profileOpenHandler = () => {\r\n    setProfileOpen(true);\r\n    setIsModalOpen(false);\r\n  };\r\n  const versionHistoryOpenHandler = () => {\r\n    setIsModalOpen(false);\r\n    history.push(ROUTES.versionHistory);\r\n  };\r\n\r\n  return (\r\n    <div className={cn('user-bar', className, { 'user-bar--none': isOpenSearch })} ref={userBarRef}>\r\n      {isCanViewMyReservations && (\r\n        <Link to={ROUTES.reservation} className=\"booking-btn user-bar__booking booking-btn--desktop\">\r\n          Мои бронирования\r\n          <Icon className=\"booking-btn__icon\" name=\"my-booking\" size={28} />\r\n        </Link>\r\n      )}\r\n\r\n      <div className=\"user-bar__group\">\r\n        {!isImageSelected && !isNullImage ? (\r\n          <img src={profile?.pictureUrl} className=\"user-profile__image-header\" alt=\"\" />\r\n        ) : (\r\n          <div className=\"user-bar__avatar user-bar__avatar--pers\">{`${profile?.firstName}`[0]}</div>\r\n        )}\r\n\r\n        <div className=\"user-bar__info\">\r\n          <p className=\"user-bar__name\">{`${profile?.firstName} ${profile?.lastName}`}</p>\r\n          <Link to=\"/\" className=\"user-bar__email\" href={profile?.email}>\r\n            {profile?.email}\r\n          </Link>\r\n        </div>\r\n        <Btn\r\n          className=\"user-bar__action\"\r\n          icon={<Icon className=\"user-bar__action-icon\" name=\"arrow-down\" size={16} />}\r\n          onClick={() => setIsModalOpen((prev) => !prev)}\r\n        />\r\n      </div>\r\n      <div className={cn('user-bar__dropdown', { 'user-bar__dropdown--is-open': isModalOpen })}>\r\n        <span className=\"user-bar__dropdown-box\" onClick={versionHistoryOpenHandler}>\r\n          <Icon name=\"version-history\" className=\"user-bar__dropdown-icon\" />\r\n          История версий\r\n        </span>\r\n        <span className=\"user-bar__dropdown-box\" onClick={profileOpenHandler}>\r\n          <Icon name=\"userProfile\" className=\"user-bar__dropdown-icon\" />\r\n          Настройки профиля\r\n        </span>\r\n        <span className=\"user-bar__dropdown-box\" onClick={logout}>\r\n          <Icon name=\"exit\" className=\"user-bar__dropdown-icon\" />\r\n          Выйти из системы\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserBar.propTypes = {\r\n  className: PropTypes.string,\r\n  isOpenSearch: PropTypes.bool,\r\n  isCanViewMyReservations: PropTypes.bool,\r\n  setProfileOpen: PropTypes.func,\r\n  profile: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from 'shared/components/Icon';\r\nimport React from 'react';\r\nimport cn from 'classnames';\r\n\r\nconst Burger = React.forwardRef(({ isOpen, className, ...btnProps }, ref) => (\r\n  <div className={cn('burger', className)} role=\"button\" tabIndex={0} {...btnProps} ref={ref}>\r\n    <span className=\"burger__box\">\r\n      <Icon name={`${isOpen ? 'burger-close' : 'burger'}`} className=\"burger__item\" />\r\n    </span>\r\n </div>\r\n));\r\n\r\nexport default Burger;\r\n\r\nBurger.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'shared/components';\r\n\r\nconst CurrentDate = React.forwardRef(({ value, onClick }, ref) => (\r\n  <div className=\"calendar__date\" onClick={onClick} ref={ref}>\r\n    <Icon name=\"calendar\" className=\"icon calendar_icon\" />\r\n    <div className=\"react-datepicker-wrapper\">\r\n      <div className=\"react-datepicker__input-container\">\r\n        <p className=\"react-datepicker-ignore-onclickoutside\"> {value} </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n));\r\n\r\nexport default CurrentDate;\r\n\r\nCurrentDate.propTypes = {\r\n  value: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport default function useDebounce(func, delay, cleanUp = false) {\r\n  const timeoutRef = useRef();\r\n\r\n  function clearTimer() {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = undefined;\r\n    }\r\n  }\r\n\r\n  useEffect(() => (cleanUp ? clearTimer : undefined), [cleanUp]);\r\n\r\n  return (...args) => {\r\n    clearTimer();\r\n    timeoutRef.current = setTimeout(() => func(...args), delay);\r\n  };\r\n}","import { useRouteMatch } from 'react-router';\r\nimport { ROUTES } from 'shared/constants';\r\n\r\nexport default function useLocationId() {\r\n  return useRouteMatch(ROUTES.room)?.params?.id;\r\n}\r\n","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getLocations } from 'store/location';\r\n\r\nexport default function useCardFilters() {\r\n  const [checkedRooms, setCheckedRooms] = useState([]);\r\n  const [checkedPlaces, setCheckedPlaces] = useState([]);\r\n  const locations = useSelector(getLocations);\r\n\r\n  return { checkedRooms, setCheckedRooms, checkedPlaces, setCheckedPlaces, locations };\r\n}\r\n","export default {\r\n  getParamsForPageRequest(sizePage, opts, str, index = 0) {\r\n    return {\r\n      pageRequest: {\r\n        size: sizePage,\r\n        index,\r\n        params: {\r\n          query: str,\r\n          sortAsc: true,\r\n          sortBy: 1,\r\n          options: opts,\r\n        },\r\n      },\r\n    };\r\n  },\r\n};\r\n","import apiEndpoints from 'shared/constants/apiEndpoints';\r\nimport apiAxios from 'services/api/apiAxios';\r\n\r\nexport default {\r\n  getReservations: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetAllReservations, params);\r\n    return res.data;\r\n  },\r\n  getMyReservations: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiReservations, params);\r\n    return res.data;\r\n  },\r\n  getLoadTools: async (tableId) => {\r\n    const res = await apiAxios.get(`${apiEndpoints.apiGetCardItems}/${tableId}`);\r\n    return { data: res.data, tableId };\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport reservationsServices from 'services/reservations/reservationsServices';\r\n\r\nexport const loadReservationsThunk = createAsyncThunk('loadReservations/getReservations', async (params) =>\r\n  reservationsServices.getMyReservations(params)\r\n);\r\n","import './sidebar.scss';\r\nimport { Logo, NavMenu, Copyrights } from 'shared/components';\r\nimport { useClickAway } from 'shared/hooks';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { useRef } from 'react';\r\nimport './index.scss';\r\n\r\nexport default function Sidebar({ isOpen, setIsOpen, exclude }) {\r\n  const ref = useRef(null);\r\n\r\n  useClickAway({\r\n    ref,\r\n    cb: () => setIsOpen(false),\r\n    exclude,\r\n  });\r\n\r\n  return (\r\n    <aside className={cn('sidebar', { 'sidebar--is-open': isOpen })} ref={ref}>\r\n      <div className=\"sidebar__header\">\r\n        <Logo />\r\n      </div>\r\n      <NavMenu openSidebar={setIsOpen} />\r\n      <Copyrights />\r\n    </aside>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  setIsOpen: PropTypes.func,\r\n  exclude: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from 'shared/components';\r\nimport './index.scss'\r\n\r\nexport default function ConfirmationModal({ onClose, action, isLoading, title }) {\r\n  return (\r\n    <div className=\"modal__wrapper\">\r\n      <p>{title}</p>\r\n      <div className=\"control_buttons buttons__confirm-modal\">\r\n        <Button onClick={onClose} className=\" form__button form-cancel__button \" disabled={isLoading}>\r\n          Отмена\r\n        </Button>\r\n        <Button className=\" form__button form-edit-card__button\" onClick={action} type=\"submit\" disabled={isLoading}>\r\n          Удалить\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfirmationModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  title: PropTypes.string,\r\n  action: PropTypes.func,\r\n  isLoading: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './workspace-schema.scss';\r\nimport './workspaceFixStyles.scss';\r\n\r\nconst Modal = React.forwardRef(({ isOpen, title, children }, ref) => (\r\n  <div className={cn('modal', { 'is-active': isOpen })} ref={ref}>\r\n    <div className=\"modal__container\">\r\n      <div className=\"modal__group\">\r\n        <span className=\"modal__title\">{title}</span>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n));\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.object,\r\n  isOpen: PropTypes.bool,\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function CheckboxBtn({ value, label, onChange, checked }) {\r\n  return (\r\n    <div className=\"checkbox-element\" onClick={() => onChange(!checked)}>\r\n      <label className=\"checkbox_label\" htmlFor={`checkbox${value}`}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={value}\r\n          className=\"custom-checkbox\"\r\n          checked={checked}\r\n          id={`checkbox${value}`}\r\n          onClick={(e) => e.stopPropagation()}\r\n        />\r\n        <div className=\"checkbox_checkbox\" />\r\n      </label>\r\n      <span className=\"checkbox-element__span\">\r\n        <span className=\"checkbox-element__label\">{label}</span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nCheckboxBtn.propTypes = {\r\n  value: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  label: PropTypes.string,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { Icon, NavItem } from 'shared/components';\r\nimport { loadLocationsThunk } from 'store/location/actions';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { useEffect } from 'react';\r\nimport { adminPermissions, recruiterPermissions, statisticianPermissions } from 'shared/constants/permissions';\r\nimport { getLocations } from 'store/location';\r\nimport { ROUTES } from 'shared/constants';\r\nimport PropTypes from 'prop-types';\r\nimport './index.scss';\r\nimport { NavListItem } from '../NavSubtItem';\r\n\r\nexport default function NavMenu({ openSidebar }) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadLocationsThunk());\r\n  }, []);\r\n\r\n  const locations = useSelector(getLocations);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n\r\n  const isViewUserList =\r\n    hasPermission(recruiterPermissions, personPermissions) || hasPermission(statisticianPermissions, personPermissions);\r\n  const isViewSettings = hasPermission(adminPermissions, personPermissions);\r\n  const isViewStatistics = hasPermission(statisticianPermissions, personPermissions);\r\n\r\n  const handleCloseSidebar = () => openSidebar(false);\r\n\r\n  return (\r\n    <div className=\"sidebar__content\">\r\n      <p className=\"sidebar__title\">\r\n        <Icon className=\"sidebar__title-icon\" name=\"pin\" fill />\r\n        <span className=\"nav__link-text\">Рабочие места</span>\r\n      </p>\r\n      <ul className=\"nav__submenu\">\r\n        {locations.map((loc) => (\r\n          <NavListItem key={loc.id} location={loc} onClick={handleCloseSidebar} />\r\n        ))}\r\n      </ul>\r\n      {isViewUserList && (\r\n        <NavItem icon={<Icon name=\"users\" fill />} link={ROUTES.usersList} onClick={handleCloseSidebar}>\r\n          Пользователи\r\n        </NavItem>\r\n      )}\r\n      {isViewStatistics && (\r\n        <NavItem\r\n          className=\"compensation-sidebar\"\r\n          icon={<Icon name=\"statistics\" fill />}\r\n          link={ROUTES.compensations}\r\n          onClick={handleCloseSidebar}\r\n        >\r\n          Компенсации\r\n        </NavItem>\r\n      )}\r\n\r\n      {isViewSettings && (\r\n        <NavItem icon={<Icon name=\"settings\" fill />} link={ROUTES.settings} onClick={handleCloseSidebar}>\r\n          Настройки\r\n        </NavItem>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nNavMenu.propTypes = {\r\n  openSidebar: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default function FormSearch({ children, isOpen }) {\r\n  return (\r\n    <form className={cn('form-search', 'header__form-search', { 'form-search--is-active': isOpen })}>\r\n      <div className=\"form-search__box\">{children}</div>\r\n    </form>\r\n  );\r\n}\r\n\r\nFormSearch.propTypes = {\r\n  children: PropTypes.node,\r\n  isOpen: PropTypes.bool,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport './index.scss';\r\n\r\nexport default function NavItem({ icon, children, link, className, onClick }) {\r\n  return (\r\n    <li className=\"nav__item\">\r\n      <NavLink to={link} activeClassName=\"nav__link--active\" className={cn('nav__link', className)} onClick={onClick}>\r\n        {React.isValidElement(icon) ? React.cloneElement(icon, { className: cn('nav__link-icon', icon.props.className) }) : null}\r\n        {children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nNavItem.propTypes = {\r\n  icon: PropTypes.node,\r\n  children: PropTypes.string,\r\n  link: PropTypes.string,\r\n  className: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n","import { Icon } from '../Icon';\r\nimport { CurrentDate } from '../CurrentDate';\r\nimport { Btn } from '../Btn';\r\nimport DatePicker from 'react-datepicker';\r\nimport { CALENDAR_MODES, SESSION_STORAGE_KEYS } from 'shared/constants';\r\nimport { setCurrentDate } from 'store/schedule';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { add, formatISO, parseJSON } from 'date-fns';\r\nimport { useParams } from 'react-router';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst IS_INCREASE_DATE = true;\r\n\r\nexport default function Calendar() {\r\n  const [sessionDate, setSessionDate] = useState(null);\r\n\r\n  const { startDate } = useSelector((state) => ({\r\n    startDate: getCurrentDate(state),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { mode: scheduleMode } = useParams();\r\n\r\n  const changeScheduleMode = (isIncrease = false) => {\r\n    const duration = isIncrease ? 1 : -1;\r\n    const isIncreaseDay = CALENDAR_MODES.day === scheduleMode || CALENDAR_MODES.details === scheduleMode;\r\n\r\n    const changeDate = add(sessionDate, {\r\n      days: isIncreaseDay ? duration : 0,\r\n      weeks: CALENDAR_MODES.week === scheduleMode ? duration : 0,\r\n      months: CALENDAR_MODES.month === scheduleMode ? duration : 0,\r\n      years: CALENDAR_MODES.year === scheduleMode ? duration : 0,\r\n    });\r\n\r\n    sessionStorage.setItem(SESSION_STORAGE_KEYS.sessionDate, formatISO(changeDate));\r\n    dispatch(setCurrentDate(changeDate));\r\n    setSessionDate(changeDate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const date = sessionStorage.getItem(SESSION_STORAGE_KEYS.sessionDate);\r\n\r\n    const isDateEmpty = date === null;\r\n\r\n    if (isDateEmpty) {\r\n      sessionStorage.setItem(SESSION_STORAGE_KEYS.sessionDate, formatISO(new Date()));\r\n      setSessionDate(parseJSON(sessionStorage.getItem(SESSION_STORAGE_KEYS.sessionDate)));\r\n    } else {\r\n      setSessionDate(parseJSON(date));\r\n      dispatch(setCurrentDate(parseJSON(date)));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSessionDate(startDate);\r\n  }, [startDate]);\r\n\r\n  return (\r\n    <div className=\"calendar schedule-dashboard__calendar\">\r\n      <div className=\"calendar__group\">\r\n        <Btn\r\n          className=\"calendar__button-prev\"\r\n          icon={<Icon className=\"calendar__button-prev-icon\" name=\"arrow-prev\" size={16} />}\r\n          onClick={() => changeScheduleMode()}\r\n        />\r\n\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date) => dispatch(setCurrentDate(date))}\r\n          locale=\"ru\"\r\n          showYearDropdown\r\n          yearDropdownItemNumber={15}\r\n          dateFormat=\"d MMMM\"\r\n          dateFormatCalendar=\"LLLL\"\r\n          scrollableYearDropdown\r\n          customInput={<CurrentDate />}\r\n        />\r\n\r\n        <Btn\r\n          className=\"calendar__button-next\"\r\n          icon={<Icon className=\"calendar__button-next-icon\" name=\"arrow-next\" size={16} />}\r\n          onClick={() => changeScheduleMode(IS_INCREASE_DATE)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { toast } from 'react-toastify';\r\nimport { Icon } from 'shared/components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './toast.scss';\r\n\r\nconst showToast = ({ title, description, iconName, type, toastPosition = toast.POSITION.BOTTOM_RIGHT }) => {\r\n  toast[type](<Toast title={title} description={description} />, {\r\n    icon: () => <Icon name={iconName} size={20} />,\r\n    position: toastPosition,\r\n  });\r\n};\r\nfunction Toast({ title, description }) {\r\n  return (\r\n    <div>\r\n      <p> {title} </p>\r\n      <p> {description} </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nToast.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n};\r\n\r\nexport default showToast;\r\n","export const days = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\nexport const months = ['Янв', 'Февр', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сент', 'Окт', 'Нояб', 'Дек'];\r\n","import apiEndpoints from 'shared/constants/apiEndpoints';\r\nimport apiAxios from 'services/api/apiAxios';\r\n\r\nexport default {\r\n  getScheduleYear: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetSchedules, params);\r\n    return res.data;\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport scheduleYearServices from 'services/scheduleYear/scheduleYearServices';\r\n\r\nexport const loadScheduleYearThunk = createAsyncThunk('yearReservation/getYearReservation', async (params) =>\r\n  scheduleYearServices.getScheduleYear(params)\r\n);\r\n","export const getScheduleYear = (store) => store.scheduleYear.isListOfAllBookings;\r\nexport const getListOfErrorBookings = (store) => store.scheduleYear.isListOfErrorBookings;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadScheduleYearThunk } from './actions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isListOfAllBookings: null,\r\n  isListOfErrorBookings: false,\r\n};\r\n\r\nexport const scheduleYearSlice = createSlice({\r\n  name: 'scheduleYear',\r\n  initialState,\r\n  reducers: {\r\n    setListOfErrorBookings(state, action) {\r\n      state.isListOfErrorBookings = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadScheduleYearThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadScheduleYearThunk.fulfilled]: (state, action) => {\r\n      state.isListOfAllBookings = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadScheduleYearThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default scheduleYearSlice.reducer;\r\nexport const scheduleYearActions = scheduleYearSlice.actions;\r\nexport * from './selectors';\r\n","import { toast } from 'react-toastify';\r\nimport { Button, Icon } from 'shared/components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { days, months } from 'shared/constants/namesOfMonthsAndDays';\r\nimport { scheduleYearActions } from 'store/scheduleYear';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { CALENDAR_MODES, ROUTES } from 'shared/constants';\r\nimport { generatePath } from 'react-router';\r\n\r\nimport cn from 'classnames';\r\n\r\nimport './index.scss';\r\n\r\nconst showToastErrorList = ({ length, incorrectSchedules, locationNumber, roomId, toastPosition = toast.POSITION.BOTTOM_RIGHT }) => {\r\n  toast.error(\r\n    <Toast\r\n      title={`Место не забронировано (${length})`}\r\n      incorrectSchedules={incorrectSchedules}\r\n      locationNumber={locationNumber}\r\n      roomId={roomId}\r\n    />,\r\n    {\r\n      icon: '',\r\n      position: toastPosition,\r\n      autoClose: false,\r\n    }\r\n  );\r\n};\r\n\r\nconst dayStatusCode = {\r\n  alreadyBooked: 1,\r\n  reBooking: 2,\r\n  unavailableBooking: 4,\r\n};\r\n\r\nconst getStatus = (incorrectSchedules) => {\r\n  const alreadyBookedSchedules = incorrectSchedules?.filter(\r\n    (alreadyBookedSchedule) => alreadyBookedSchedule.statusCode === dayStatusCode.alreadyBooked\r\n  );\r\n\r\n  const reBookingSchedules = incorrectSchedules?.filter((reBookingSchedule) => reBookingSchedule.statusCode === dayStatusCode.reBooking);\r\n\r\n  const unavailableSchedules = incorrectSchedules?.filter(\r\n    (unavailableSchedule) => unavailableSchedule.statusCode === dayStatusCode.unavailableBooking\r\n  );\r\n\r\n  return (\r\n    <div className=\"toast__content content\">\r\n      {alreadyBookedSchedules.map((day) => {\r\n        const date = new Date(day.from);\r\n        return (\r\n          <div className=\"content__item\">\r\n            <div className=\"content__item__icon\" />\r\n            <p className=\"content__item__subtitle\">{`Место забронировал другой партнёр (${days[date.getDay()]} ${date.getDate()} ${\r\n              months[date.getMonth()]\r\n            })`}</p>\r\n          </div>\r\n        );\r\n      })}\r\n      {!!alreadyBookedSchedules.length && !!reBookingSchedules.length && <div className=\"toast__spacer\" />}\r\n      {reBookingSchedules.map((day) => {\r\n        const date = new Date(day.from);\r\n        return (\r\n          <>\r\n            <div className=\"content__item\">\r\n              <div className={cn('content__item__icon', { 'content__item__icon--middle': !!alreadyBookedSchedules.length })} />\r\n              <p className=\"content__item__subtitle\">{`Повторное бронирование (${days[date.getDay()]} ${date.getDate()} ${\r\n                months[date.getMonth()]\r\n              })`}</p>\r\n            </div>\r\n            <p className=\"content__item__desctiption\">{`Вы уже забронировали место ${day.table?.name} в ${day.room?.name} кабинете`}</p>\r\n          </>\r\n        );\r\n      })}\r\n      {(!!reBookingSchedules.length || !!alreadyBookedSchedules.length) && !!unavailableSchedules.length && (\r\n        <div className=\"toast__spacer\" />\r\n      )}\r\n      {unavailableSchedules.map((day) => {\r\n        const date = new Date(day.from);\r\n        return (\r\n          <>\r\n            <div className=\"content__item\">\r\n              <div\r\n                className={cn(\r\n                  'content__item__icon',\r\n                  { 'content__item__icon--bottom': !!alreadyBookedSchedules.length && !!reBookingSchedules.length },\r\n                  {\r\n                    'content__item__icon--middle':\r\n                      (!alreadyBookedSchedules.length && !!reBookingSchedules.length) ||\r\n                      (!reBookingSchedules.length && !!alreadyBookedSchedules.length),\r\n                  }\r\n                )}\r\n              />\r\n              <p className=\"content__item__subtitle\">\r\n                {`Техническое обслуживание (${days[date.getDay()]} ${date.getDate()} ${months[date.getMonth()]})`}\r\n              </p>\r\n            </div>\r\n            <p className=\"content__item__desctiption\">\r\n              В период с 19 Авг по 21 Авг место М5 <br /> забронировано для технического обслуживания.\r\n              <br />\r\n              Пожалуйста, выберите другой период <br /> бронирования.\r\n            </p>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Toast({ title, incorrectSchedules, locationNumber, roomId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"toast__wrapper\">\r\n      <div className=\"toast__header header\">\r\n        <Icon name=\"error\" size={20} />\r\n        <p className=\"header__title\"> {title}</p>\r\n      </div>\r\n      {incorrectSchedules.length <= 7 ? (\r\n        getStatus(incorrectSchedules)\r\n      ) : (\r\n        <>\r\n          <p className=\"content__item\">\r\n            На выбранный период уже существуют бронирования, <br /> совершённые вами или другими партнёрами.\r\n          </p>\r\n          <NavLink to={generatePath(ROUTES.calendar, { id: roomId, number: locationNumber, mode: CALENDAR_MODES.year })} exact>\r\n            <Button onClick={() => dispatch(scheduleYearActions.setListOfErrorBookings(true))} className=\"form__button\">\r\n              Просмотреть календарь\r\n            </Button>\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nToast.propTypes = {\r\n  title: PropTypes.string,\r\n  incorrectSchedules: PropTypes.array,\r\n  locationNumber: PropTypes.any,\r\n  roomId: PropTypes.any,\r\n};\r\n\r\nexport default showToastErrorList;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'shared/components';\r\n\r\nimport './index.scss';\r\n\r\nexport default function Tag({ item, deleteTag, setActiveTag, i, disabled }) {\r\n  useEffect(() => {\r\n    if (item?.name === 'Монитор') {\r\n      setActiveTag({ name: item?.name, index: i, typeId: item.typeId });\r\n    }\r\n  }, [item?.name]);\r\n\r\n  return (\r\n    <div className={`tag__wrapper ${item?.name === 'Монитор' && 'tag__wrapper--active'}`}>\r\n      <span>{item?.name}</span>\r\n\r\n      <Icon\r\n        name={item?.name === 'Монитор' ? 'delete-active-tag' : 'delete-tag'}\r\n        className=\"delete-tag_icon\"\r\n        size={16}\r\n        onClick={() => !disabled && deleteTag(item)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nTag.propTypes = {\r\n  deleteTag: PropTypes.func,\r\n  setActiveTag: PropTypes.func,\r\n  item: PropTypes.object,\r\n  i: PropTypes.number,\r\n  disabled: PropTypes.bool,\r\n};\r\n","export const userTypes = {\r\n  local: {\r\n    name: 'В офисе',\r\n    id: 0,\r\n  },\r\n  remote: {\r\n    name: 'Удаленщик',\r\n    id: 1,\r\n  },\r\n  localRemote: {\r\n    name: 'Местный удаленщик',\r\n    id: 2,\r\n  },\r\n};\r\n\r\nexport const userEquipments = {\r\n  own: { name: 'Личное', id: 0 },\r\n  company: { name: 'Корпоративное', id: 1 },\r\n};\r\n","import apiAxios from '../api/apiAxios';\r\nimport apiEndpoints from 'shared/constants/apiEndpoints';\r\n\r\nexport default {\r\n  getUsers: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetUserList, params);\r\n    return res.data.rows || [];\r\n  },\r\n  getUsersForAdmin: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetUserListForAdmin, params);\r\n    return res.data.rows || [];\r\n  },\r\n  updateUserType: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiUpdateUserList, params);\r\n    return res.data;\r\n  },\r\n  updateUserEquipment: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiUpdateUserList, params);\r\n    return res.data;\r\n  },\r\n  updateUserStatus: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiUpdateUserList, params);\r\n    return res.data;\r\n  },\r\n  getRole: () => apiAxios.get(apiEndpoints.apiGetUsersRoles),\r\n  updateUserRole: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiUpdateUserRole, params);\r\n    return res.data;\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport userService from 'services/users/userService';\r\n\r\nexport const loadUsersThunk = createAsyncThunk('/api/User/page', async (params) => userService.getUsers(params));\r\nexport const loadUsersForAdminThunk = createAsyncThunk('/api/User/page', async (params) => userService.getUsersForAdmin(params));\r\nexport const updateUserTypeThunk = createAsyncThunk('/api/User/type', async (params) => userService.updateUserType(params));\r\nexport const updateUserEquipmentThunk = createAsyncThunk('/api/User/equipment', async (params) => userService.updateUserEquipment(params));\r\nexport const updateUserStatusThunk = createAsyncThunk('/api/User/status', async (params) => userService.updateUserStatus(params));\r\nexport const updateUserRoleThunk = createAsyncThunk('/api/role', async (params) => userService.updateUserRole(params));\r\n","export const getUsersRoles = (store) => store.roles;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n\r\nexport default function InputFormField({children, className, label, error, name, register, id = name}) {\r\n    return (\r\n        <div className={cn(`form-item ${className}`, { 'is-invalid' : error })}>\r\n            <label className=\"form-item__label\" htmlFor={id}>{label}</label>\r\n            {React.isValidElement(children) && register ? React.cloneElement(children, {...register(name)}) : children}\r\n            <div className=\"form__error\">{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nInputFormField.propTypes = {\r\n    children: PropTypes.object,\r\n    className: PropTypes.string,\r\n    label: PropTypes.string,\r\n    error: PropTypes.string,\r\n    name: PropTypes.string,\r\n    register: PropTypes.func,\r\n    id: PropTypes.string\r\n}","import { InputFormField } from 'modules/Login/components/InputFormField';\r\nimport { Filter, Icon, CheckboxBtn } from 'shared/components';\r\n\r\nimport cn from 'classnames';\r\n/* eslint react/prop-types: 0 */\r\nexport default function FilterSelector({\r\n  refSelector,\r\n  filteredType,\r\n  setOpenOptions,\r\n  isHaveCheckedType,\r\n  actionInput,\r\n  isOpenOptions,\r\n  excludeRef,\r\n  tableType,\r\n  handleOptionClick,\r\n  title,\r\n  placeholder,\r\n}) {\r\n  return (\r\n    <Filter title={title} ref={refSelector}>\r\n      <InputFormField className=\"form__item\">\r\n        <input\r\n          form=\"card-form\"\r\n          className={cn('input select__input', { 'select__input--selected': isHaveCheckedType })}\r\n          type=\"text\"\r\n          placeholder={isHaveCheckedType ? filteredType.filter((i) => i.checked).map((k) => ` ${k.name}`) : placeholder}\r\n          autoComplete=\"on\"\r\n          readOnly\r\n          onClick={() => setOpenOptions(true)}\r\n        />\r\n\r\n        <Icon name={isHaveCheckedType ? 'select-delete' : 'arrow-select'} className=\"icon__select\" onClick={actionInput} />\r\n      </InputFormField>\r\n      {isOpenOptions && (\r\n        <div className=\"checkbox-wrapper\" ref={excludeRef}>\r\n          {tableType?.map((option) => (\r\n            <div key={option?.id}>\r\n              <CheckboxBtn\r\n                form=\"card-form\"\r\n                name=\"attributes\"\r\n                label={option.name}\r\n                checked={option.checked}\r\n                value={option.id}\r\n                onChange={(checked) => handleOptionClick(checked, option)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Filter>\r\n  );\r\n}\r\n","import { useState, useRef, useMemo, useEffect } from 'react';\r\nimport { Button, Filter, Icon, FormSearch } from 'shared/components';\r\nimport { userTypes } from 'shared/constants/user';\r\nimport { loadUsersForAdminThunk, loadUsersThunk } from 'store/users/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { useDebounce } from 'shared/hooks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { adminPermissions } from 'shared/constants/permissions';\r\nimport { Btn } from 'shared/components/Btn';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\nimport { getUsersRoles } from 'store/roles/selectors';\r\nimport { FilterSelector } from 'shared/components/UserFilter/FilterSelector';\r\nimport cn from 'classnames';\r\nimport './index.scss';\r\n\r\nexport default function UserFilter({ setIsFilteredUserList, fieldForSort }) {\r\n  const dispatch = useDispatch();\r\n  const userTypeOptions = Object.values(userTypes);\r\n\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [isOpenTypeSelector, setIsOpenTypeSelector] = useState(false);\r\n  const [isOpenRoleSelector, setIsOpenRoleSelector] = useState(false);\r\n  const { roles } = useSelector(getUsersRoles);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const [filteredUserType, setFilteredUserType] = useState([...userTypeOptions]);\r\n  const [filteredRoles, setFilteredRoles] = useState(roles.data?.map((i) => ({ id: i.id, name: i.name })));\r\n  const isCanManageRole = hasPermission(adminPermissions, personPermissions);\r\n  const [formSearchFocused, setFormSearchFocused] = useState(false);\r\n  const onFocus = () => setFormSearchFocused(true);\r\n  const onBlur = () => setFormSearchFocused(false);\r\n  const refSelectorUserType = useRef(null);\r\n  const excludeRefSelectorUserType = useRef(null);\r\n  const refSelectorRole = useRef(null);\r\n  const excludeRefSelectorRole = useRef(null);\r\n\r\n  useClickAway({\r\n    ref: refSelectorUserType,\r\n    cb: () => setIsOpenTypeSelector(false),\r\n    exclude: excludeRefSelectorUserType,\r\n  });\r\n  useClickAway({\r\n    ref: refSelectorRole,\r\n    cb: () => setIsOpenRoleSelector(false),\r\n    exclude: excludeRefSelectorRole,\r\n  });\r\n  const isHaveCheckedUserType = useMemo(() => filteredUserType.some((i) => i.checked), [filteredUserType]);\r\n  const isHaveCheckedRole = useMemo(() => filteredRoles?.some((i) => i.checked), [filteredRoles]);\r\n  const isFiltersApplied = useMemo(\r\n    () => isHaveCheckedUserType || isHaveCheckedRole || searchValue,\r\n    [isHaveCheckedUserType, isHaveCheckedRole, searchValue]\r\n  );\r\n  useEffect(() => {\r\n    if (isFiltersApplied) setIsFilteredUserList(true);\r\n    else setIsFilteredUserList(false);\r\n  }, [isFiltersApplied]);\r\n\r\n  const handleOptionClick = (checked, option) => {\r\n    const tempTableUserType = [...filteredUserType];\r\n    const optionIndex = filteredUserType.findIndex((o) => o.id === option.id);\r\n    if (optionIndex > -1) tempTableUserType[optionIndex].checked = checked;\r\n    if (isCanManageRole) {\r\n      const tempTableRole = [...filteredRoles];\r\n      const optionIndexRole = filteredRoles.findIndex((o) => o.id === option.id);\r\n      if (optionIndexRole > -1) tempTableRole[optionIndexRole].checked = checked;\r\n      setFilteredRoles([...tempTableRole]);\r\n    }\r\n\r\n    setFilteredUserType([...tempTableUserType]);\r\n    if (fieldForSort) {\r\n      const data = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: searchValue,\r\n            sortAsc: true,\r\n            sortBy: fieldForSort,\r\n            options: {\r\n              userTypes: tempTableUserType.filter((i) => i.checked).map((k) => k.id),\r\n              roleIds: filteredRoles?.filter((i) => i.checked).map((k) => k.id) || [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(data));\r\n      else dispatch(loadUsersThunk(data));\r\n    } else {\r\n      const data = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: searchValue,\r\n            sortAsc: true,\r\n            options: {\r\n              userTypes: tempTableUserType.filter((i) => i.checked).map((k) => k.id),\r\n              roleIds: filteredRoles?.filter((i) => i.checked).map((k) => k.id) || [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(data));\r\n      else dispatch(loadUsersThunk(data));\r\n    }\r\n  };\r\n\r\n  const debounceInput = useDebounce(async (newValue) => {\r\n    if (fieldForSort) {\r\n      const body = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: newValue,\r\n            sortAsc: true,\r\n            sortBy: fieldForSort,\r\n            options: {\r\n              userTypes: filteredUserType.filter((i) => i.checked).map((k) => k.id),\r\n              roleIds: filteredRoles?.filter((i) => i.checked).map((k) => k.id) || [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(body));\r\n      else dispatch(loadUsersThunk(body));\r\n    } else {\r\n      const body = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: newValue,\r\n            sortAsc: true,\r\n            options: {\r\n              userTypes: filteredUserType.filter((i) => i.checked).map((k) => k.id),\r\n              roleIds: filteredRoles?.filter((i) => i.checked).map((k) => k.id) || [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(body));\r\n      else dispatch(loadUsersThunk(body));\r\n    }\r\n  }, 500);\r\n\r\n  const clearSearch = (event) => {\r\n    event.preventDefault();\r\n    setSearchValue('');\r\n    debounceInput('');\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n    debounceInput(event.target.value);\r\n  };\r\n  const actionInputUserType = () => {\r\n    setIsOpenTypeSelector(false);\r\n    const tempTableUserType = [...filteredUserType];\r\n    const toggle = tempTableUserType?.map((n) => (n.checked === true ? { ...n, checked: false } : n));\r\n    toggle.map((i) => handleOptionClick(false, i));\r\n    setFilteredUserType([...toggle]);\r\n  };\r\n  const actionInputRoles = () => {\r\n    setIsOpenRoleSelector(false);\r\n    const tempTableRoles = [...filteredRoles];\r\n    const toggle = tempTableRoles?.map((n) => (n.checked === true ? { ...n, checked: false } : n));\r\n    toggle.map((i) => handleOptionClick(false, i));\r\n    setFilteredRoles([...toggle]);\r\n  };\r\n\r\n  const cleanFilters = () => {\r\n    setSearchValue('');\r\n    debounceInput('');\r\n    filteredUserType?.map((i) => handleOptionClick(false, i));\r\n    filteredRoles?.map((i) => handleOptionClick(false, i));\r\n  };\r\n  return (\r\n    <div className=\"filters_wrapper\">\r\n      <div className=\"filters_header\">\r\n        <h1 className=\"user-filter_title\">Список пользователей</h1>\r\n        <div className=\"filters__button--wrapper\">\r\n          {isFiltersApplied && (\r\n            <div className=\"abort-filters__button\" onClick={cleanFilters}>\r\n              Отменить фильтры\r\n            </div>\r\n          )}\r\n          <Button className={`filter${!isFiltersApplied ? 's' : ''}__button`}>\r\n            Фильтры {isFiltersApplied && <div className=\"mark\" />}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"filter_content\">\r\n        <Filter title=\"Пользователь\">\r\n          <FormSearch>\r\n            <div className=\"form-search__wrapper\">\r\n              <input\r\n                className={`input  ${searchValue ? 'filter-search__input' : 'form-search__input'}`}\r\n                type=\"text\"\r\n                autoComplete=\"on\"\r\n                placeholder=\"Введите логин или имя\"\r\n                value={searchValue}\r\n                onChange={handleChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n              />\r\n              <Icon name=\"search\" className={`filter-search__icon-search${searchValue && '--none'}`} size={24} />\r\n              {searchValue && (\r\n                <Btn\r\n                  className=\"form-search__remove-text\"\r\n                  icon={\r\n                    <Icon\r\n                      className={cn('form-search__remove-icon', { 'form-search__remove-icon--blue': formSearchFocused })}\r\n                      name=\"close\"\r\n                      size={14}\r\n                    />\r\n                  }\r\n                  onClick={clearSearch}\r\n                />\r\n              )}\r\n            </div>\r\n          </FormSearch>\r\n        </Filter>\r\n        <FilterSelector\r\n          refSelector={refSelectorUserType}\r\n          filteredType={filteredUserType}\r\n          setOpenOptions={setIsOpenTypeSelector}\r\n          isHaveCheckedType={isHaveCheckedUserType}\r\n          actionInput={actionInputUserType}\r\n          isOpenOptions={isOpenTypeSelector}\r\n          excludeRef={excludeRefSelectorUserType}\r\n          tableType={filteredUserType}\r\n          handleOptionClick={handleOptionClick}\r\n          title=\"Тип пользователя\"\r\n          placeholder=\"Выбор типа пользователя\"\r\n        />\r\n        {isCanManageRole && (\r\n          <FilterSelector\r\n            refSelector={refSelectorRole}\r\n            filteredType={filteredRoles}\r\n            setOpenOptions={setIsOpenRoleSelector}\r\n            isHaveCheckedType={isHaveCheckedRole}\r\n            actionInput={actionInputRoles}\r\n            isOpenOptions={isOpenRoleSelector}\r\n            excludeRef={excludeRefSelectorRole}\r\n            tableType={filteredRoles}\r\n            handleOptionClick={handleOptionClick}\r\n            title=\"Роль пользователя\"\r\n            placeholder=\"Выбор роли пользователя\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nUserFilter.propTypes = {\r\n  setIsFilteredUserList: PropTypes.func,\r\n  fieldForSort: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport './index.scss'\r\n\r\nexport default function Filter({ title, children }) {\r\n  return (\r\n    <div className=\"filter_wrapper\">\r\n      <h1 className=\"filter_title\">{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","export const getUserList = (store) => store.users;\r\nexport const getIsFilterActive = (store) => store.users.isFilterActive;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { isBrowser, off, on } from 'shared/utils';\r\n\r\nconst useWindowSize = (initialWidth = Infinity, initialHeight = Infinity) => {\r\n  const [state, setState] = useState({\r\n    width: isBrowser ? window.innerWidth : initialWidth,\r\n    height: isBrowser ? window.innerHeight : initialHeight,\r\n  });\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (isBrowser) {\r\n      const handler = () => {\r\n        setState({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      };\r\n\r\n      on(window, 'resize', handler);\r\n\r\n      return () => {\r\n        off(window, 'resize', handler);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { updateUserRoleThunk, updateUserEquipmentThunk, updateUserTypeThunk } from 'store/users/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function DropDown({ setIsEditMode, refDropDown, list, user, attribute }) {\r\n  const dispatch = useDispatch();\r\n  const toggleEditMode = () => setIsEditMode((prev) => !prev);\r\n\r\n  const updateUserInfo = (item) => {\r\n    let body = {\r\n      dto: {\r\n        id: user.id,\r\n      },\r\n    };\r\n    if (attribute === 'userType') {\r\n      body = {\r\n        dto: {\r\n          ...body.dto,\r\n          userType: item.id,\r\n        },\r\n      };\r\n      dispatch(updateUserTypeThunk(body));\r\n    }\r\n\r\n    if (attribute === 'equipmentType') {\r\n      body = {\r\n        dto: {\r\n          ...body.dto,\r\n          equipmentType: item.id,\r\n        },\r\n      };\r\n      dispatch(updateUserEquipmentThunk(body));\r\n    }\r\n\r\n    if (attribute === 'roleId') {\r\n      body = {\r\n        dto: {\r\n          ...body.dto,\r\n          roleId: item.id,\r\n        },\r\n      };\r\n      dispatch(updateUserRoleThunk(body));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={toggleEditMode} className=\"dropdown\" ref={refDropDown}>\r\n      {list.map((item) => {\r\n        const itemTable = item.id === user[attribute] ? 'current-dropdown-element' : '';\r\n        return (\r\n          <span key={item.name} className={`dropdown-element ${itemTable}`} onClick={() => updateUserInfo(item)}>\r\n            {item.name}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nDropDown.propTypes = {\r\n  user: PropTypes.object,\r\n  setIsEditMode: PropTypes.func,\r\n  refDropDown: PropTypes.node,\r\n  list: PropTypes.array,\r\n  attribute: PropTypes.string,\r\n};\r\n","import { useClickAway } from 'shared/hooks';\r\nimport { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DropDown } from 'shared/components/UserList/components';\r\nimport { Icon } from 'shared/components';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function TableUserAttribute({ user, attributeList, field }) {\r\n  const refCurrentOption = useRef(null);\r\n  const refDropDown = useRef(null);\r\n  const [isEditMode, toggleEditMode] = useState(false);\r\n  const isLoading = useSelector((state) => state.users.isLoading);\r\n\r\n  const styleDisable = {\r\n    cursor: isLoading ? 'not-allowed' : 'pointer',\r\n  };\r\n\r\n  useClickAway({\r\n    ref: refCurrentOption,\r\n    cb: () => toggleEditMode(false),\r\n    exclude: refDropDown,\r\n  });\r\n\r\n  const attribute = attributeList?.find((item) => item.id === user[field])?.name;\r\n\r\n  const handleOpenDropdown = () => {\r\n    if (isLoading) return;\r\n\r\n    toggleEditMode((prev) => !prev);\r\n  };\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <>\r\n        <div className=\"current-options current-options-dropdown\" ref={refCurrentOption}>\r\n          {attribute} <Icon className=\"btn-dropdown__icon \" name=\"arrow-dropdown\" size={16} />\r\n        </div>\r\n        <DropDown setIsEditMode={toggleEditMode} refDropDown={refDropDown} list={attributeList} user={user} attribute={field} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleOpenDropdown}>\r\n      <div style={styleDisable} className=\"current-options\">\r\n        {attribute} <Icon className=\"btn-dropdown__icon \" name=\"arrow-dropdown\" size={16} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nTableUserAttribute.propTypes = {\r\n  user: PropTypes.object,\r\n  attributeList: PropTypes.array,\r\n  field: PropTypes.string,\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  loadUsersThunk,\r\n  loadUsersForAdminThunk,\r\n  updateUserTypeThunk,\r\n  updateUserStatusThunk,\r\n  updateUserEquipmentThunk,\r\n  updateUserRoleThunk,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport const usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers(state, action) {\r\n      state.users = action.payload;\r\n    },\r\n    setFilterUsersActive(state, action) {\r\n      state.isFilterActive = action.payload;\r\n    },\r\n    updateUserType(state, action) {\r\n      const userIndex = state.users.findIndex((user) => user.id === action.payload.id);\r\n\r\n      if (userIndex > -1) {\r\n        state.users[userIndex].userType = action.payload.userType;\r\n      }\r\n    },\r\n    updateUserStatus(state, action) {\r\n      const userIndex = state.users.findIndex((user) => user.id === action.payload.id);\r\n\r\n      if (userIndex > -1) {\r\n        state.users[userIndex].isInactive = action.payload.isInactive;\r\n      }\r\n    },\r\n    updateUserEquipment(state, action) {\r\n      const userIndex = state.users.findIndex((user) => user.id === action.payload.id);\r\n\r\n      if (userIndex > -1) {\r\n        state.users[userIndex].equipmentType = action.payload.equipmentType;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadUsersThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadUsersThunk.fulfilled]: (state, action) => {\r\n      state.users = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadUsersThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [loadUsersForAdminThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadUsersForAdminThunk.fulfilled]: (state, action) => {\r\n      state.users = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadUsersForAdminThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [updateUserTypeThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [updateUserTypeThunk.fulfilled]: (state, action) => {\r\n      const index = state.users.findIndex((user) => user.id === action.payload.id);\r\n      if (index > -1) {\r\n        state.users[index].userType = action.payload.userType;\r\n      }\r\n      state.isLoading = false;\r\n    },\r\n    [updateUserStatusThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [updateUserStatusThunk.fulfilled]: (state, action) => {\r\n      const index = state.users.findIndex((user) => user.id === action.payload.id);\r\n      if (index > -1) {\r\n        state.users[index].isInactive = action.payload.isInactive;\r\n      }\r\n      state.isLoading = false;\r\n    },\r\n    [updateUserEquipmentThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [updateUserEquipmentThunk.fulfilled]: (state, action) => {\r\n      const index = state.users.findIndex((user) => user.id === action.payload.id);\r\n      if (index > -1) {\r\n        state.users[index].equipmentType = action.payload.equipmentType;\r\n      }\r\n      state.isLoading = false;\r\n    },\r\n    [updateUserRoleThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [updateUserRoleThunk.fulfilled]: (state, action) => {\r\n      const index = state.users.findIndex((user) => user.id === action.payload.id);\r\n      if (index > -1) {\r\n        state.users[index].roleId = action.payload.roleId;\r\n      }\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default usersSlice.reducer;\r\nexport const usersActions = usersSlice.actions;\r\nexport * from './selectors';\r\n","import { Button, Icon } from 'shared/components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUserStatusThunk } from 'store/users/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { usersActions } from 'store/users';\r\n\r\nimport './index.scss';\r\n\r\nexport default function ButtonBlock({ user }) {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.users.isLoading);\r\n\r\n  const styleDisable = {\r\n    cursor: isLoading ? 'not-allowed' : 'pointer',\r\n  };\r\n  const updateStatus = () => {\r\n    if (!user.isInactive) {\r\n      const body = {\r\n        dto: {\r\n          id: user.id,\r\n          userType: user.userType,\r\n          equipmentType: user.equipmentType,\r\n          isInactive: !user.isInactive,\r\n        },\r\n      };\r\n      dispatch(updateUserStatusThunk(body));\r\n    } else {\r\n      dispatch(usersActions.updateUserStatus({ ...user, isInactive: false }));\r\n    }\r\n  };\r\n\r\n  const handleButtonBlockStatus = () => {\r\n    if (isLoading) return;\r\n\r\n    updateStatus();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className={user.isInactive ? 'table-button-block' : 'table-button-active'}\r\n        onClick={handleButtonBlockStatus}\r\n        style={styleDisable}\r\n      >\r\n        {user.isInactive ? 'Разблокировать' : 'Заблокировать'}\r\n      </Button>\r\n      <Icon\r\n        name={user.isInactive ? 'lock-closed' : 'lock-opened'}\r\n        className={user.isInactive ? 'lock-closed-icon' : 'lock-opened-icon'}\r\n        size={36}\r\n        onClick={handleButtonBlockStatus}\r\n        style={styleDisable}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nButtonBlock.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport { useMemo, useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\nimport { getUserList, getIsFilterActive } from 'store/users/selectors';\r\nimport { getUsersRoles } from 'store/roles/selectors';\r\nimport { loadUsersForAdminThunk, loadUsersThunk } from 'store/users/actions';\r\nimport { useWindowSize } from 'shared/hooks/useWindowsSize';\r\nimport { Icon } from 'shared/components';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\nimport { TableUserAttribute, ButtonBlock } from 'shared/components/UserList/components';\r\nimport { userTypes, userEquipments } from 'shared/constants/user';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { adminPermissions } from 'shared/constants/permissions';\r\nimport './index.scss';\r\n\r\nfunction UserName({ user }) {\r\n  const [isOpenInfoAboutUser, setIsOpenInfoAboutUser] = useState(false);\r\n  return (\r\n    <div onMouseEnter={() => setIsOpenInfoAboutUser(true)} onMouseLeave={() => setIsOpenInfoAboutUser(false)}>\r\n      {user?.firstName} {user?.lastName}\r\n      {isOpenInfoAboutUser && <div className=\"user-info__tooltip\"> {user.email} </div>}\r\n    </div>\r\n  );\r\n}\r\nconst userEquipmentOptions = Object.values(userEquipments);\r\n\r\nconst userTypeOptions = Object.values(userTypes);\r\nconst getUsersTableData = (users, roles) =>\r\n  users.map((user) => ({\r\n    col1: <UserName user={user} />,\r\n    col2: <TableUserAttribute user={user} attributeList={userTypeOptions} field=\"userType\" />,\r\n    col3: <TableUserAttribute user={user} attributeList={userEquipmentOptions} field=\"equipmentType\" />,\r\n    col4: <TableUserAttribute user={user} attributeList={roles} field=\"roleId\" />,\r\n    col5: <ButtonBlock user={user} />,\r\n  }));\r\n\r\nexport default function UserList({ isFilteredUserList, fieldForSort, setFieldForSort }) {\r\n  const isFilterActive = useSelector(getIsFilterActive);\r\n  const { users } = useSelector(getUserList);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const isCanManageRole = hasPermission(adminPermissions, personPermissions);\r\n  const { roles } = useSelector(getUsersRoles);\r\n  const data = useMemo(() => getUsersTableData(users, roles.data), [users]);\r\n\r\n  const dispatch = useDispatch();\r\n  const mobileView = 427;\r\n  const { width: windowWidth } = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    if (!isFilteredUserList || windowWidth > mobileView) {\r\n      const body = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: '',\r\n            sortAsc: true,\r\n            sortBy: fieldForSort,\r\n            options: {},\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(body));\r\n      else dispatch(loadUsersThunk(body));\r\n    }\r\n  }, [dispatch, fieldForSort, isFilterActive]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Сотрудник',\r\n        accessor: 'col1',\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n      },\r\n      {\r\n        Header: 'Тип пользователя',\r\n        accessor: 'col2',\r\n        disableSortBy: true,\r\n      },\r\n      {\r\n        Header: 'Оборудование',\r\n        accessor: 'col3',\r\n        disableSortBy: false,\r\n        canSort: true,\r\n      },\r\n      {\r\n        Header: 'Роль',\r\n        accessor: 'col4',\r\n        disableFilters: true,\r\n        disableSortBy: true,\r\n      },\r\n      {\r\n        Header: 'Статус',\r\n        accessor: 'col5',\r\n        disableFilters: true,\r\n        disableSortBy: false,\r\n        canSort: true,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  let hiddenColumn = ['col4'];\r\n  if (isCanManageRole) hiddenColumn = [''];\r\n\r\n  const initialState = {\r\n    sortBy: [\r\n      {\r\n        id: 'col4',\r\n        desc: true,\r\n      },\r\n      {\r\n        id: 'col5',\r\n        desc: true,\r\n      },\r\n    ],\r\n    pageSize: 5,\r\n    pageIndex: 0,\r\n    hiddenColumns: hiddenColumn,\r\n  };\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageSize, pageIndex },\r\n  } = useTable(\r\n    { columns, data, initialState, disableSortRemove: true, disableMultiRemove: false, manualSortBy: false },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const refDropDown = useRef(null);\r\n  const ref = useRef(null);\r\n  const [isPageSelectMode, setIsPageSelectMode] = useState(false);\r\n\r\n  useClickAway({\r\n    ref: refDropDown,\r\n    cb: () => setIsPageSelectMode(false),\r\n    exclude: ref,\r\n  });\r\n\r\n  const getPaginationInfo = () => {\r\n    const countOfDisplayedRows = (pageIndex + 1) * pageSize;\r\n    const firstRecordNum = pageIndex * pageSize + 1;\r\n    const lastRecordNum = users.length > countOfDisplayedRows ? countOfDisplayedRows : users.length;\r\n    const totalRecords = users.length;\r\n    return `${firstRecordNum} - ${lastRecordNum} из ${totalRecords}`;\r\n  };\r\n  const equipmentForSort = useRef(1);\r\n  const statusForSort = useRef(2);\r\n\r\n  useEffect(() => {\r\n    if (equipmentForSort.current === 2) setFieldForSort(1);\r\n  }, [dispatch, equipmentForSort.current]);\r\n  useEffect(() => {\r\n    if (statusForSort.current === 2) setFieldForSort(1);\r\n  }, [dispatch, statusForSort.current]);\r\n  const actionColumn = (column) => {\r\n    if (column.Header === 'Оборудование') {\r\n      setFieldForSort(0);\r\n      if (equipmentForSort.current === 1) {\r\n        equipmentForSort.current = 0;\r\n      } else if (equipmentForSort.current === 0) {\r\n        equipmentForSort.current = 2;\r\n      } else equipmentForSort.current = 1;\r\n    } else {\r\n      setFieldForSort(1);\r\n      if (statusForSort.current === 1) {\r\n        statusForSort.current = 0;\r\n      } else if (statusForSort.current === 0) {\r\n        statusForSort.current = 2;\r\n      } else statusForSort.current = 1;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"user-table_wrapper\">\r\n      <table {...getTableProps()} className=\"table\">\r\n        <thead className=\"header-table_wrapper\">\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())} className=\"header-table-item\">\r\n                  <div\r\n                    className=\"header-table-text\"\r\n                    onClick={() => {\r\n                      actionColumn(column);\r\n                    }}\r\n                  >\r\n                    {column.render('Header')}\r\n                    {!column.disableSortBy && (\r\n                      <span className=\"table-sort\">\r\n                        {column.Header === 'Оборудование' ? (\r\n                          <>\r\n                            <>\r\n                              <Icon\r\n                                className={`btn-pagination__icon${\r\n                                  equipmentForSort.current === 1 || equipmentForSort.current === 2 ? '--disactive' : '--active'\r\n                                } icon--down`}\r\n                                name=\"arrow-down-filter\"\r\n                              />\r\n                              <Icon\r\n                                className={`btn-pagination__icon${equipmentForSort.current === 1 ? '--active' : '--disactive'} icon--up`}\r\n                                name=\"arrow-up-filter\"\r\n                              />\r\n                            </>\r\n                          </>\r\n                        ) : (\r\n                          column.Header === 'Статус' && (\r\n                            <>\r\n                              <Icon\r\n                                className={`btn-pagination__icon${\r\n                                  statusForSort.current === 1 || statusForSort.current === 2 ? '--disactive' : '--active'\r\n                                } icon--down`}\r\n                                name=\"arrow-down-filter\"\r\n                              />\r\n                              <Icon\r\n                                className={`btn-pagination__icon${statusForSort.current === 1 ? '--active' : '--disactive'} icon--up`}\r\n                                name=\"arrow-up-filter\"\r\n                              />\r\n                            </>\r\n                          )\r\n                        )}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()} className=\"content-table_wrapper\">\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} className=\"content-table-row\">\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()} className=\"content-table-item\">\r\n                    {cell.render('Cell')}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <span ref={refDropDown}>\r\n          <div ref={ref} className=\"pagination__page\" onClick={() => setIsPageSelectMode(true)}>\r\n            Строки на странице: {pageSize} <Icon className=\"btn-dropdown__icon\" name=\"arrow-dropdown\" size={16} />\r\n          </div>\r\n\r\n          {isPageSelectMode && (\r\n            <div onClick={() => setIsPageSelectMode(false)} className=\"dropdown\">\r\n              {[5, 10, 25].map((item, index) => (\r\n                <span\r\n                  key={index}\r\n                  className={`${item === pageSize && 'current-dropdown-element'} dropdown-element`}\r\n                  onClick={() => {\r\n                    setPageSize(item);\r\n                    setIsPageSelectMode(false);\r\n                  }}\r\n                >\r\n                  {item}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </span>\r\n        <span className=\"pagination__info\">{getPaginationInfo()}</span>\r\n        <div className=\"btn-pagination__wrapper\">\r\n          <span onClick={previousPage}>\r\n            <Icon className=\"btn-pagination__icon\" name=\"arrow-prev\" />\r\n          </span>\r\n          <span onClick={nextPage}>\r\n            <Icon className=\"btn-pagination__icon\" name=\"arrow-next\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserList.propTypes = {\r\n  isFilteredUserList: PropTypes.bool,\r\n  fieldForSort: PropTypes.number,\r\n  setFieldForSort: PropTypes.func,\r\n};\r\n\r\nUserName.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n","import { useEffect, useState, useRef, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport cardsServices from 'services/cards/cardServices';\r\nimport { Button, Icon } from 'shared/components';\r\nimport { InputFormField } from 'modules/Login/components/InputFormField';\r\nimport { useForm } from 'react-hook-form';\r\nimport className from 'classnames';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { sysAdminPermissions } from 'shared/constants/permissions';\r\nimport './index.scss';\r\n\r\nexport default function MonitorInventoryCode({\r\n  card,\r\n  monitorTypeId,\r\n  activeTagMonitor,\r\n  setActiveTagMonitor,\r\n  handleClickTag,\r\n  tags,\r\n  isHaveMonitor,\r\n  setIsHaveMonitor,\r\n  isRequired,\r\n  setIsCodeRequestLoading,\r\n  monitorTags,\r\n  setMonitorTags,\r\n  monitorsInfo,\r\n  setMonitorsInfo,\r\n  isCheckMonitorCode,\r\n}) {\r\n  const { register, handleSubmit, setValue } = useForm();\r\n  const [newMonitorInfo, setNewMonitorInfo] = useState([]);\r\n  const IsVerifyCode = useRef(null);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const isCanManageLocationItemsWithCodes = hasPermission(sysAdminPermissions, personPermissions);\r\n\r\n  useEffect(() => {\r\n    const newMonitor = card?.items?.filter((item) => item.typeId === monitorTypeId);\r\n\r\n    newMonitor?.forEach((monitor, index) => {\r\n      if (monitor?.inventoryCode) {\r\n        cardsServices.checkMonitor(monitor.inventoryCode).then((res) => {\r\n          setMonitorsInfo((prev) => [\r\n            ...prev,\r\n            {\r\n              id: monitor.id,\r\n              name: index + 1,\r\n              inventoryCode: monitor.inventoryCode,\r\n              diagonal: res.data?.additional_fields?.diagonal,\r\n              model: res.data?.additional_fields?.model,\r\n              manufacturer: res.data?.additional_fields?.manufacturer,\r\n            },\r\n          ]);\r\n          setMonitorTags((prev) => [\r\n            ...prev,\r\n            {\r\n              name: index + 1,\r\n              inventoryCode: monitor.inventoryCode,\r\n              id: monitor.id,\r\n              diagonal: res.data?.additional_fields?.diagonal,\r\n              model: res.data?.additional_fields?.model,\r\n              manufacturer: res.data?.additional_fields?.manufacturer,\r\n            },\r\n          ]);\r\n        });\r\n      } else {\r\n        setMonitorsInfo((prev) => [\r\n          ...prev,\r\n          {\r\n            id: monitor.id,\r\n            name: index + 1,\r\n            inventoryCode: '',\r\n          },\r\n        ]);\r\n        setMonitorTags((prev) => [...prev, { name: index + 1, inventoryCode: '', id: monitor.id }]);\r\n      }\r\n    });\r\n    if (!newMonitor?.length) setMonitorTags([{ name: 1, inventoryCode: '' }]);\r\n  }, [card?.id, card?.items?.length]);\r\n\r\n  useEffect(() => {\r\n    if (monitorTags?.length) {\r\n      monitorTags.forEach((monitor, i) => {\r\n        setValue(`${i + 1}`, monitor.inventoryCode);\r\n      });\r\n    }\r\n  }, [monitorTags]);\r\n\r\n  const handleSelectChange = (name, type, verifyCode, inventoryCode) => {\r\n    const newOptions = [...monitorTags];\r\n\r\n    const optionIndex = newOptions?.findIndex((option) => option.name === name);\r\n    if (optionIndex > -1) {\r\n      if (verifyCode === 'ok') {\r\n        newOptions[optionIndex] = {\r\n          verify: 'ok',\r\n          name,\r\n          inventoryCode,\r\n          typeId: type,\r\n          ...monitorsInfo[optionIndex],\r\n        };\r\n      } else {\r\n        newOptions[optionIndex] = {\r\n          verify: '404',\r\n          name,\r\n          inventoryCode,\r\n          typeId: type,\r\n        };\r\n      }\r\n    }\r\n    setMonitorTags(newOptions);\r\n  };\r\n  const onSubmit = (data) => {\r\n    setIsCodeRequestLoading(true);\r\n    if (data[activeTagMonitor.name]) {\r\n      cardsServices\r\n        .checkMonitor(data[activeTagMonitor.name])\r\n        .then((res) => {\r\n          setNewMonitorInfo([res.data]);\r\n\r\n          const newM = [...monitorsInfo];\r\n          if (newM.length) {\r\n            const index = newM?.findIndex((mon) => mon.name === activeTagMonitor.name);\r\n            if (index >= 0) newM[index].inventoryCode = res.data?.code;\r\n            setMonitorsInfo(newM);\r\n          }\r\n\r\n          if (res.status === 'ok') {\r\n            IsVerifyCode.current = 'ok';\r\n          } else if (res.status === 'error') {\r\n            IsVerifyCode.current = '404';\r\n          }\r\n          handleSelectChange(activeTagMonitor.name, activeTagMonitor.typeId, IsVerifyCode.current, data[activeTagMonitor.name]);\r\n        })\r\n        .finally(() => setIsCodeRequestLoading(false));\r\n    } else {\r\n      const newMonitorTags = [...monitorTags];\r\n      newMonitorTags[activeTagMonitor.name - 1] = {\r\n        name: activeTagMonitor.name,\r\n        inventoryCode: '',\r\n        typeId: activeTagMonitor.typeId,\r\n      };\r\n      setMonitorTags(newMonitorTags);\r\n    }\r\n  };\r\n\r\n  const deleteTag = (name) => {\r\n    const newOptions = [...monitorTags];\r\n    const optionIndex = newOptions?.findIndex((option) => option.name === name);\r\n\r\n    if (optionIndex > -1) {\r\n      newOptions.splice(optionIndex, 1);\r\n    }\r\n    const updatedOptions = newOptions.map((item, index) => ({ ...item, name: index + 1 }));\r\n\r\n    setMonitorTags(updatedOptions);\r\n    setActiveTagMonitor({ name: monitorTags[0]?.name, inventoryCode: monitorTags[0]?.inventoryCode });\r\n    if (monitorTags?.length <= 1) {\r\n      handleClickTag(tags.filter((tag) => tag.name === 'Монитор')[0]);\r\n      setIsHaveMonitor(false);\r\n    }\r\n  };\r\n  const sortedMonitorTags = useMemo(\r\n    () => monitorTags?.sort((element, nextElement) => element.name - nextElement.name) || [],\r\n    [monitorTags]\r\n  );\r\n\r\n  const sortedMonitorInfo = useMemo(\r\n    () => monitorsInfo?.sort((element, nextElement) => element.name - nextElement.name) || [],\r\n    [monitorsInfo]\r\n  );\r\n\r\n  const activeMonitorTag = useMemo(\r\n    () => monitorTags?.find((tag) => tag.name === activeTagMonitor.name) || [],\r\n    [activeTagMonitor.name, monitorTags]\r\n  );\r\n  const editMonitorTags = (e, index) => {\r\n    const newTags = [...monitorTags];\r\n    const activeMonitorIndex = monitorTags?.findIndex((tag) => tag.name === activeTagMonitor.name);\r\n    if (index > -1) {\r\n      newTags[activeMonitorIndex].inventoryCode = e.target.value;\r\n    }\r\n    setMonitorTags(newTags);\r\n  };\r\n\r\n  return (\r\n    <div className=\"active-content__wrapper\">\r\n      <div className=\"hr\" />\r\n      <p className=\"title_content title_content_form\">Характеристики</p>\r\n      {isHaveMonitor && (\r\n        <div className=\"tag\">\r\n          {sortedMonitorTags?.map((item) => (\r\n            <div\r\n              onClick={() => {\r\n                setActiveTagMonitor({ name: item?.name, inventoryCode: item?.inventoryCode });\r\n              }}\r\n              className={`tag-monitor__wrapper ${activeTagMonitor?.name === item?.name && 'tag-monitor__wrapper--active'}`}\r\n            >\r\n              Монитор &bull; {item.name}\r\n              <Icon\r\n                name=\"delete-tag\"\r\n                className=\"delete-tag_icon\"\r\n                size={16}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  deleteTag(item.name);\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n          {isCanManageLocationItemsWithCodes && monitorTags?.length !== 3 && (\r\n            <Icon\r\n              name=\"add-monitor\"\r\n              className=\"icon__add-monitor\"\r\n              onClick={() => setMonitorTags((prev) => [...prev, { name: monitorTags?.length + 1, inventoryCode: '' }])}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      <form key={activeMonitorTag.name} onSubmit={handleSubmit(onSubmit)}>\r\n        {isCanManageLocationItemsWithCodes && (\r\n          <div className=\"attribute-container\">\r\n            <InputFormField\r\n              className=\"form__item\"\r\n              label={`Инвентарный номер Монитора-${activeTagMonitor.name}`}\r\n              name={activeTagMonitor.name?.toString()}\r\n              id={activeTagMonitor.name}\r\n              register={register}\r\n              type=\"text\"\r\n            >\r\n              <input\r\n                id={activeTagMonitor.name?.toString()}\r\n                className={className(\r\n                  'input select__input',\r\n                  { 'input-focus': isRequired },\r\n                  `${\r\n                    activeMonitorTag.verify === 'ok'\r\n                      ? 'successful'\r\n                      : (activeMonitorTag.verify === '404' ||\r\n                          monitorTags[activeMonitorTag.name - 1]?.inventoryCode === '' ||\r\n                          (isCheckMonitorCode === 1 && activeMonitorTag?.inventoryCode === '')) &&\r\n                        'error'\r\n                  }-status`\r\n                )}\r\n                type=\"text\"\r\n                placeholder=\"Введите инвентарный номер\"\r\n                onChange={(e) => editMonitorTags(e, activeMonitorTag)}\r\n                defaultValue={activeMonitorTag?.inventoryCode}\r\n              />\r\n            </InputFormField>\r\n            <Button className=\"form__button check__button\" type=\"submit\">\r\n              Подтвердить\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <p\r\n          className={className(\r\n            `${\r\n              activeMonitorTag.verify === 'ok'\r\n                ? 'successful'\r\n                : (activeMonitorTag.verify === '404' ||\r\n                    monitorTags[activeMonitorTag.name - 1]?.inventoryCode === '' ||\r\n                    isCheckMonitorCode === 1) &&\r\n                  'error'\r\n            }-status-title`,\r\n            'status-title'\r\n          )}\r\n          style={{ paddingBottom: '20px' }}\r\n        >\r\n          {activeMonitorTag.verify === 'ok'\r\n            ? 'Инвентарный номер подтвержден'\r\n            : activeMonitorTag.verify === '404' && 'Инвентарного номера не существует'}\r\n          {!monitorTags[activeMonitorTag.name - 1]?.inventoryCode &&\r\n            isCheckMonitorCode === 1 &&\r\n            'Необходимо заполнить инвентарный номер и подтвердить его, чтобы продолжить.'}\r\n          {monitorTags[activeMonitorTag.name - 1]?.inventoryCode === '' &&\r\n            !monitorTags[activeMonitorTag.name - 1]?.inventoryCode &&\r\n            isCheckMonitorCode !== 1 &&\r\n            'Необходимо заполнить инвентарный номер.'}\r\n        </p>\r\n\r\n        {(sortedMonitorInfo[activeMonitorTag.name - 1]?.diagonal || activeMonitorTag.verify === 'ok') &&\r\n          monitorTags[activeMonitorTag.name - 1]?.inventoryCode !== '' &&\r\n          activeMonitorTag.verify !== '404' && (\r\n            <>\r\n              <label className=\"form-item__label\"> Характеристики Монитора-{activeMonitorTag.name}</label>\r\n              <div className=\"monitor-info\">\r\n                <p>\r\n                  {sortedMonitorInfo[activeMonitorTag.name - 1]?.diagonal\r\n                    ? sortedMonitorInfo[activeMonitorTag.name - 1].diagonal\r\n                    : newMonitorInfo[0]?.additional_fields?.diagonal}{' '}\r\n                  {sortedMonitorInfo[activeMonitorTag.name - 1]?.manufacturer\r\n                    ? sortedMonitorInfo[activeMonitorTag.name - 1]?.manufacturer\r\n                    : !!activeMonitorTag?.verify && newMonitorInfo[0]?.additional_fields?.manufacturer}{' '}\r\n                  {sortedMonitorInfo[activeMonitorTag.name - 1]?.model\r\n                    ? sortedMonitorInfo[activeMonitorTag.name - 1]?.model\r\n                    : newMonitorInfo[0]?.additional_fields?.model}\r\n                </p>\r\n              </div>\r\n            </>\r\n          )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nMonitorInventoryCode.propTypes = {\r\n  card: PropTypes.object,\r\n  monitorTypeId: PropTypes.string,\r\n  activeTagMonitor: PropTypes.object,\r\n  setActiveTagMonitor: PropTypes.func,\r\n  handleClickTag: PropTypes.func,\r\n  tags: PropTypes.array,\r\n  isHaveMonitor: PropTypes.bool,\r\n  setIsHaveMonitor: PropTypes.func,\r\n  isRequired: PropTypes.bool,\r\n  setIsCodeRequestLoading: PropTypes.func,\r\n  monitorTags: PropTypes.array,\r\n  setMonitorTags: PropTypes.func,\r\n  monitorsInfo: PropTypes.array,\r\n  setMonitorsInfo: PropTypes.func,\r\n  isCheckMonitorCode: PropTypes.bool,\r\n};\r\n","import * as yup from 'yup';\r\nimport { Icon } from 'shared/components';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\r\n      <div className=\"form-error_wrapper\">\r\n        <Icon name=\"form-error\" className=\"form-error-icon\" size={20} /> Введите название\r\n      </div>\r\n    )\r\n    .trim(),\r\n});\r\n\r\nexport default schema;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MonitorInventoryCode } from './components/MonitorInventoryCode';\r\nimport schema from 'shared/components/FormModal/validation-modal.jsx';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { getCardsItemsType } from 'store/cards';\r\nimport { useForm, useFieldArray } from 'react-hook-form';\r\nimport { Icon, Button, Tag, showToast, CheckboxBtn } from 'shared/components';\r\nimport { InputFormField } from 'modules/Login/components/InputFormField';\r\nimport { createCardThunk, loadCardsThunk, createCardItemThunk, deleteCardItemThunk } from 'store/cards/actions';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\n\r\nimport cn from 'classnames';\r\nimport './index.scss';\r\nimport './control-card.scss';\r\n\r\nexport default function ControlCardWrapper({ onClose, location, card }) {\r\n  const [isRequired, setIsRequired] = useState(false);\r\n  const [isCodeRequestLoading, setIsCodeRequestLoading] = useState(false);\r\n  const [activeTag, setActiveTag] = useState({});\r\n  const [monitorsInfo, setMonitorsInfo] = useState([]);\r\n  const [tagsMonitor, setTagsMonitor] = useState([]);\r\n  const [isHaveMonitor, setIsHaveMonitor] = useState(false);\r\n  const items = useSelector(getCardsItemsType);\r\n  const [activeTagMonitor, setActiveTagMonitor] = useState({ name: 1, inventoryCode: '' });\r\n  const monitorTypeId = '178ccf46-8263-436e-9f3d-001b121dceda';\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm({\r\n    defaultValues: {\r\n      options: items.map((item) => ({ ...item, checked: false, myId: item.id })),\r\n      tags: [],\r\n    },\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const { fields: options, update: updateOption } = useFieldArray({ control, name: 'options' });\r\n  const { fields: tags, append: appendTag, remove: removeTag } = useFieldArray({ control, name: 'tags' });\r\n\r\n  useEffect(() => {\r\n    if (card?.items?.length) {\r\n      const newOptions = [...options];\r\n\r\n      card?.items.forEach((cardItem) => {\r\n        const index = newOptions.findIndex((option) => option.myId === cardItem.typeId);\r\n        if (index > -1) {\r\n          newOptions[index].checked = true;\r\n        }\r\n      });\r\n\r\n      setValue('options', newOptions);\r\n      appendTag(\r\n        options\r\n          .filter((option) => option.checked === true && !tags.some((tag) => tag.myId === option.myId))\r\n          .map((opt) => ({ myId: opt.myId, name: opt.name, typeId: opt.myId }))\r\n      );\r\n    }\r\n  }, [card?.items, card?.items?.length]);\r\n\r\n  useEffect(() => {\r\n    if (tags?.some((tag) => tag.typeId === monitorTypeId)) {\r\n      setIsHaveMonitor(activeTag.name === 'Монитор');\r\n    } else setIsHaveMonitor(false);\r\n  }, [activeTag.name, tags, tags.length]);\r\n\r\n  const [isOpenOptions, setOpenOptions] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const refCheckBox = useRef(null);\r\n\r\n  const isCheckMonitorCode = useRef(0);\r\n\r\n  const nameMonitorsTags = [1, 2, 3];\r\n\r\n  useEffect(() => {\r\n    if (tags.length === 0) setIsRequired(false);\r\n    else setIsRequired(true);\r\n  }, [setIsRequired, tags]);\r\n\r\n  useClickAway({\r\n    ref: refCheckBox,\r\n    cb: () => setOpenOptions(false),\r\n  });\r\n  const handleOptionClick = (checked, option) => {\r\n    if (checked) {\r\n      appendTag({ myId: option.myId, name: option.name, typeId: option.myId });\r\n\r\n      if (activeTag.name === 'Монитор') setIsHaveMonitor(true);\r\n      updateOption(\r\n        options.findIndex((o) => o.myId === option.myId),\r\n        { ...option, checked: true }\r\n      );\r\n    } else {\r\n      if (option.myId === monitorTypeId) {\r\n        setTagsMonitor([]);\r\n      }\r\n      removeTag(tags.findIndex((t) => t.myId === option.myId));\r\n      updateOption(\r\n        options.findIndex((o) => o.myId === option.myId),\r\n        { ...option, checked: false }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClickTag = (tag) => {\r\n    removeTag(tags.findIndex((t) => t.myId === tag.myId));\r\n    const optionIndex = options.findIndex((o) => o.myId === tag.myId);\r\n    updateOption(optionIndex, { ...options[optionIndex], checked: false });\r\n    if (tag.name === 'Монитор') {\r\n      setTagsMonitor([]);\r\n    }\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (data) => {\r\n    if (isLoading) return;\r\n\r\n    if (!data) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    if (!tagsMonitor.every((i) => i.inventoryCode !== '')) {\r\n      isCheckMonitorCode.current = 1;\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    isCheckMonitorCode.current = 2;\r\n    setIsLoading(true);\r\n\r\n    const body = {\r\n      dto: {\r\n        ...data,\r\n        parentLocationId: location.id,\r\n      },\r\n    };\r\n\r\n    if (card) {\r\n      body.dto.id = card.id;\r\n    }\r\n\r\n    const deleteArray = card?.items\r\n      ?.filter((item) => !tags.some((tag) => tag.typeId === item.typeId))\r\n      .concat(\r\n        monitorsInfo?.filter(\r\n          (item) => !tagsMonitor.some((tag) => tag.inventoryCode === item.inventoryCode) && card?.items.some((tag) => tag.id === item.id)\r\n        )\r\n      );\r\n\r\n    deleteArray?.forEach((tag) => {\r\n      const bodyItem = { ids: [tag.id] };\r\n      dispatch(deleteCardItemThunk(bodyItem));\r\n    });\r\n\r\n    try {\r\n      dispatch(loadCardsThunk(getParamsForLoadCards(location.id)));\r\n\r\n      const newCard = await dispatch(createCardThunk(body)).unwrap();\r\n\r\n      const cardForAction = card || newCard;\r\n\r\n      const addTags = tags.filter(\r\n        (tag) => !cardForAction.items?.some((item) => tag.typeId === item.typeId) && tag.typeId !== monitorTypeId\r\n      );\r\n      const addArray = tagsMonitor.concat(addTags);\r\n\r\n      Promise.all(\r\n        addArray.map(async (tag) => {\r\n          if (tag.name === 'Монитор' || nameMonitorsTags.includes(tag.name)) {\r\n            let newBody = {\r\n              dto: [\r\n                {\r\n                  typeId: monitorTypeId,\r\n                  locationId: newCard.id,\r\n                },\r\n              ],\r\n            };\r\n            if (tag.inventoryCode) {\r\n              newBody = {\r\n                dto: [\r\n                  {\r\n                    ...newBody.dto[0],\r\n                    inventoryCode: tag.inventoryCode,\r\n                  },\r\n                ],\r\n              };\r\n            }\r\n            if (tag.id) {\r\n              newBody = {\r\n                dto: [\r\n                  {\r\n                    ...newBody.dto[0],\r\n                    id: tag.id,\r\n                  },\r\n                ],\r\n              };\r\n            }\r\n\r\n            await dispatch(createCardItemThunk(newBody));\r\n            await dispatch(loadCardsThunk(getParamsForLoadCards(location.id)));\r\n          } else {\r\n            const bodyItem = {\r\n              dto: [\r\n                {\r\n                  typeId: tag.typeId,\r\n                  locationId: newCard.id,\r\n                },\r\n              ],\r\n            };\r\n\r\n            await dispatch(createCardItemThunk(bodyItem));\r\n            await dispatch(loadCardsThunk(getParamsForLoadCards(location.id)));\r\n          }\r\n        })\r\n      );\r\n      showToast({\r\n        title: 'Рабочее место создано',\r\n        description: `Рабочее место М${newCard.name} в кабинете  ${location.name} создано.`,\r\n        iconName: 'success',\r\n        type: 'success',\r\n      });\r\n    } catch (e) {\r\n      showToast({\r\n        title: 'Произошла ошибка',\r\n        description: 'Попробуйте снова',\r\n        iconName: 'error',\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const formRef = useRef();\r\n\r\n  return (\r\n    <div className=\"modal__wrapper\">\r\n      <form onSubmit={handleSubmit(onSubmit)} key={1} id=\"card-form\" ref={formRef}>\r\n        <label className=\"form_input--label\">М</label>\r\n        <InputFormField className=\"form_place_input\" name=\"name\" register={register} error={errors?.name?.message}>\r\n          <input\r\n            form=\"card-form\"\r\n            id=\"name\"\r\n            className={`place_input${errors?.name?.message ? '-error' : ''}`}\r\n            type=\"text\"\r\n            autoComplete=\"on\"\r\n            defaultValue={card && card.name}\r\n            disabled={isLoading}\r\n          />\r\n        </InputFormField>\r\n\r\n        <p className=\"title_content\">Атрибуты рабочего места</p>\r\n        <InputFormField className=\"form__item\" label=\"Выбор атрибутов рабочего места\" name=\"attributes\">\r\n          <input\r\n            disabled={isLoading}\r\n            form=\"card-form\"\r\n            className={cn('input select__input', { 'input-focus': isRequired })}\r\n            type=\"text\"\r\n            placeholder=\"Выберите атрибут\"\r\n            autoComplete=\"on\"\r\n            readOnly\r\n            onClick={() => setOpenOptions(true)}\r\n          />\r\n\r\n          <Icon name=\"arrow-select\" className=\"icon__select\" onClick={() => setOpenOptions(true)} disabled={isLoading} />\r\n        </InputFormField>\r\n\r\n        {isOpenOptions && (\r\n          <div className=\"checkbox-wrapper\" ref={refCheckBox} disabled={isLoading}>\r\n            {options.map((option) => (\r\n              <div key={option?.id}>\r\n                <CheckboxBtn\r\n                  form=\"card-form\"\r\n                  name=\"attributes\"\r\n                  label={option.name}\r\n                  checked={option.checked}\r\n                  value={option.myId}\r\n                  onChange={(checked) => handleOptionClick(checked, option)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div className=\"tags-container\">\r\n          {tags.map((item, i) => (\r\n            <Tag\r\n              key={item.typeId}\r\n              item={item}\r\n              deleteTag={handleClickTag}\r\n              ref={register}\r\n              setActiveTag={setActiveTag}\r\n              activeTag={activeTag}\r\n              i={i}\r\n              setActiveTagMonitor={setActiveTagMonitor}\r\n              tagsMonitor={tagsMonitor}\r\n              setIsHaveMonitor={setIsHaveMonitor}\r\n              isHaveMonitor={isHaveMonitor}\r\n              disabled={isLoading}\r\n            />\r\n          ))}\r\n        </div>\r\n      </form>\r\n\r\n      {isHaveMonitor && activeTag.typeId === monitorTypeId && (\r\n        <>\r\n          <MonitorInventoryCode\r\n            card={card}\r\n            setIsCodeRequestLoading={setIsCodeRequestLoading}\r\n            isRequired={isRequired}\r\n            monitorTypeId={monitorTypeId}\r\n            setActiveTagMonitor={setActiveTagMonitor}\r\n            activeTagMonitor={activeTagMonitor}\r\n            handleClickTag={handleClickTag}\r\n            tags={tags}\r\n            setIsHaveMonitor={setIsHaveMonitor}\r\n            isHaveMonitor={isHaveMonitor}\r\n            monitorTags={tagsMonitor}\r\n            setMonitorTags={setTagsMonitor}\r\n            monitorsInfo={monitorsInfo}\r\n            setMonitorsInfo={setMonitorsInfo}\r\n            disabled={isLoading}\r\n            isCheckMonitorCode={isCheckMonitorCode.current}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"hr\" />\r\n      <div className={cn('control__buttons', { 'active-control__buttons': isHaveMonitor })}>\r\n        <Button onClick={onClose} className=\"form__button form-cancel__button\" disable={isLoading || isCodeRequestLoading} form=\"card-form\">\r\n          Отмена\r\n        </Button>\r\n        <Button className=\"form__button form-edit-card__button\" type=\"submit\" disable={isLoading || isCodeRequestLoading} form=\"card-form\">\r\n          Сохранить\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nControlCardWrapper.propTypes = {\r\n  onClose: PropTypes.func,\r\n  location: PropTypes.object,\r\n  card: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport './index.scss'\r\n\r\nfunction TooltipContent({monitorInfo}) {\r\n    return (\r\n        <div className='tooltip_content'>\r\n        <p>Монитор {monitorInfo.additional_fields.manufacturer} {monitorInfo.additional_fields.model}</p>\r\n        <div className=\"hr\" />\r\n        <p> <span style={{color: \"#CFD2D3\"}}>Экран  </span> {monitorInfo.additional_fields.diagonal} </p>\r\n        </div>\r\n    );\r\n}\r\nTooltipContent.propTypes = {\r\n    monitorInfo: PropTypes.object\r\n  };\r\nexport default TooltipContent;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { Icon } from 'shared/components/Icon';\r\n\r\nconst TimeSelectInput = React.forwardRef(\r\n  ({ text, iconName, activeIcon, onClick, clearDate, value, isError, isMobile, isTouch, setIsTouch, isReservationPage }, ref) => {\r\n    const changedValue = useRef(null);\r\n\r\n    const handleClick =\r\n      (func, ...customFunc) =>\r\n      () => {\r\n        const [touchFunc] = customFunc;\r\n        func();\r\n        if (touchFunc) touchFunc((touched) => !touched);\r\n      };\r\n\r\n    const isEmptyChangedValue = changedValue.current === null;\r\n\r\n    useEffect(() => {\r\n      if (value.includes('-')) {\r\n        const dashIndex = value.indexOf('-');\r\n        changedValue.current = value.substring(0, dashIndex);\r\n      }\r\n    }, [value]);\r\n\r\n    return (\r\n      <div className=\"calendar__time\" onClick={handleClick(onClick, setIsTouch)} ref={ref}>\r\n        <div\r\n          className={cn(\r\n            'calendar__time-group',\r\n            { 'time__container--active': value },\r\n            { 'time__container--empty': isError && !value },\r\n            { 'time__container--mobile': isMobile },\r\n            { 'time__container--mobile-touched': isTouch },\r\n            { 'time__container--searched': isReservationPage && value }\r\n          )}\r\n        >\r\n          {value ? (\r\n            <>\r\n              <p className=\"calendar__text\">{!isEmptyChangedValue ? changedValue.current : value}</p>\r\n              {!isReservationPage && <Icon className=\"reservation__data-icon\" name={activeIcon} fill onClick={clearDate} />}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <p className=\"calendar__text\">{text}</p>\r\n              <Icon className=\"reservation__data-icon\" name={iconName} fill />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TimeSelectInput;\r\n\r\nTimeSelectInput.propTypes = {\r\n  isError: PropTypes.bool,\r\n  isMobile: PropTypes.bool,\r\n  isReservationPage: PropTypes.bool,\r\n  isTouch: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  iconName: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  clearDate: PropTypes.func,\r\n  setIsTouch: PropTypes.func,\r\n  value: PropTypes.array,\r\n  activeIcon: PropTypes.string,\r\n};\r\n","import { Button } from '../Button';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './index.scss';\r\n\r\nexport default function DeleteModal({ title, deleteCount, onClick, isActive }) {\r\n  return (\r\n    <div className={cn('delete-modal', { 'delete-modal--active': isActive })}>\r\n      <div className=\"delete-modal__container\">\r\n        <div className=\"delete-modal__places\">\r\n          <span className=\"delete-modal__title\">{title}</span>\r\n          <span className=\"delete-modal__count\">{deleteCount}</span>\r\n        </div>\r\n        <Button className=\" form__button form-edit-card__button\" type=\"submit\" onClick={onClick}>\r\n          Удалить бронь\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nDeleteModal.propTypes = {\r\n  onClick: PropTypes.func,\r\n  deleteCount: PropTypes.number,\r\n  title: PropTypes.string,\r\n  isActive: PropTypes.bool,\r\n};\r\n","import { Icon } from '../Icon';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setScheduleActive } from 'store/schedule';\r\nimport { usersActions } from 'store/users';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nexport default function CancelHeader({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"header header--primary\">\r\n      <div className=\"cancel\">\r\n        <Icon\r\n          className=\"btn-round__icon\"\r\n          name=\"arrow-back\"\r\n          size={32}\r\n          onClick={() => {\r\n            dispatch(setScheduleActive(false));\r\n            dispatch(usersActions.setFilterUsersActive(false));\r\n          }}\r\n        />\r\n        <p className=\"cancel__group--title\">{children}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCancelHeader.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n","import cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport './index.scss';\r\n\r\nexport default function UserAvatar({ schedule, isMySchedule, isFullDayReserved }) {\r\n  const isImageSelected = schedule.user.pictureUrl !== null;\r\n  const imageSrc = schedule.user.pictureUrl;\r\n  const userName = schedule.user.firstName[0];\r\n\r\n  return (\r\n    <>\r\n      {isImageSelected ? (\r\n        <img\r\n          className={cn(\r\n            'user__ava schedule-month__ava',\r\n            { 'user__ava__full-reserved': isFullDayReserved },\r\n            { 'user-bar__avatar--inactive': schedule.type === 1 }\r\n          )}\r\n          src={imageSrc}\r\n          alt=\"\"\r\n          loading=\"lazy\"\r\n        />\r\n      ) : (\r\n        <p\r\n          className={cn(\r\n            'user-bar__avatar',\r\n            { 'user-bar__avatar--pers': isMySchedule && schedule.type === 0 },\r\n            { 'user-bar__avatar--foreign': !isMySchedule && schedule.type === 0 },\r\n            { 'user-bar__avatar--inactive': schedule.type === 1 }\r\n          )}\r\n        >\r\n          {userName}\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nUserAvatar.propTypes = {\r\n  schedule: PropTypes.object,\r\n  isMySchedule: PropTypes.bool,\r\n  isFullDayReserved: PropTypes.bool,\r\n};\r\n","import { ROUTES } from 'shared/constants';\r\nimport { isAuthSelector } from 'store/auth/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst UnauthenticatedRoute = (props) => {\r\n  const isAuth = useSelector(isAuthSelector);\r\n\r\n  if (isAuth) return <Redirect to={ROUTES.reservation} />;\r\n  return <Route {...props} />;\r\n};\r\nexport default UnauthenticatedRoute;\r\n","import PropTypes from 'prop-types';\r\nimport './emptyReservation.scss';\r\n\r\nexport default function EmptyReservation({ title = \"Забронированных мест на данный момент нет\", subtitle }) {\r\n  return (\r\n    <>\r\n      <div className=\"main-title rooms__title\">{title}</div>\r\n      { subtitle && <div className=\"subtitle rooms__subtitle\">{subtitle}</div> }\r\n    </>\r\n  );\r\n}\r\n\r\nEmptyReservation.propTypes = {\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n};","export function getCurrentLocationId(locations, name) {\r\n  return locations.find((loc) => loc.name === name)?.id;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { Icon } from 'shared/components';\r\nimport cn from 'classnames';\r\n\r\nexport default function BlockInput({ date, setIsOpen, setDate, placeholder, isOpen, text }) {\r\n  return (\r\n    <div className=\"box__element\">\r\n      <div className=\"filter-box__name\">{text}</div>\r\n      <div className=\"filter-box__period period\">\r\n        <div className={cn('filter filter-box__filter', { 'filter--active': date !== '' })} onClick={() => setIsOpen(!isOpen)}>\r\n          <div className=\"filter__text\"> {date === '' ? placeholder : format(new Date(date), 'dd.MM.yyyy')}</div>\r\n          {date === '' ? (\r\n            <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n          ) : (\r\n            <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={() => setDate('')} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBlockInput.propTypes = {\r\n  date: PropTypes.any,\r\n  setIsOpen: PropTypes.any,\r\n  setDate: PropTypes.any,\r\n  placeholder: PropTypes.any,\r\n  isOpen: PropTypes.any,\r\n  text: PropTypes.any,\r\n};\r\n","export const getProfile = (state) => state.userProfile.profile;\r\n","import { useState, useRef, useMemo } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport subDays from 'date-fns/subDays';\r\nimport PropTypes from 'prop-types';\r\nimport { useClickAway } from 'shared/hooks';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { getCurrentLocationId } from 'services/schedule/getCurrentLocationId';\r\nimport { Icon, TimeSelectInput, Button } from 'shared/components';\r\nimport { makeTechWorkAction, removeTechWorkAction } from 'store/schedule/actions';\r\nimport { BlockInput } from 'shared/components/BlockModal/components/index';\r\nimport { getProfile } from 'store/profile/selectors';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport { getLocations } from 'store/location';\r\nimport { useParams } from 'react-router';\r\nimport { loadCardsThunk } from 'store/cards/actions';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { formatISO, set } from 'date-fns';\r\nimport cn from 'classnames';\r\n\r\nimport './index.scss';\r\n\r\nconst RANGE_OF_MINUTES = 60;\r\nexport default function BlockModal({ title, onClose, cardId, isInactive, card }) {\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [startHours, setStartHours] = useState(null);\r\n  const [endHours, setEndHours] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const { profile } = useSelector((state) => ({\r\n    profile: getProfile(state),\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const datePickerModal = useRef();\r\n\r\n  const allowedTime = (hours) => scheduleService.setAllowedTime(hours);\r\n  const scheduledTime = (date) => scheduleService.setScheduledTime(date);\r\n  const selectedTime = useMemo(() => scheduledTime(startHours), [startHours]);\r\n\r\n  const minTime = useRef(allowedTime(6));\r\n  const maxTime = useRef(allowedTime(23));\r\n\r\n  useClickAway({\r\n    ref: datePickerModal,\r\n    cb: () => setIsOpen(false),\r\n  });\r\n  const { locations } = useSelector((state) => ({\r\n    locations: getLocations(state),\r\n  }));\r\n  const { id: roomId } = useParams();\r\n  const { selectedDate } = useSelector((state) => ({\r\n    selectedDate: getCurrentDate(state),\r\n  }));\r\n\r\n  const parentLocationId = getCurrentLocationId(locations, roomId);\r\n\r\n  const lockCard = async () => {\r\n    if (!isInactive) {\r\n      if (!startDate || !endDate || !startHours || !endHours) {\r\n        setIsError(true);\r\n\r\n        return;\r\n      }\r\n    }\r\n    if (isInactive) {\r\n      const body = {\r\n        ids: card.map((c) => c.id),\r\n      };\r\n      await dispatch(removeTechWorkAction(body));\r\n\r\n      await dispatch(loadCardsThunk(getParamsForLoadCards(parentLocationId, formatISO(set(selectedDate, { hours: 0, minutes: 0 })))));\r\n\r\n      onClose();\r\n      return;\r\n    }\r\n\r\n    const params = {\r\n      from: startDate,\r\n      to: endDate,\r\n      fromHours: startHours,\r\n      toHours: endHours,\r\n      locationId: cardId,\r\n      userId: profile?.id,\r\n    };\r\n    setIsError(false);\r\n\r\n    const data = scheduleService.prepareSchedule(params);\r\n\r\n    const body = {\r\n      schedules: data.map((item) => ({\r\n        from: item.from,\r\n        to: item.to,\r\n        locationId: cardId,\r\n      })),\r\n    };\r\n\r\n    if (scheduleService.checkScheduleData(startHours, endHours)) {\r\n      await dispatch(makeTechWorkAction(body));\r\n      await dispatch(loadCardsThunk(getParamsForLoadCards(parentLocationId, formatISO(set(selectedDate, { hours: 0, minutes: 0 })))));\r\n    }\r\n\r\n    onClose();\r\n  };\r\n  const currentDate = useSelector(getCurrentDate);\r\n  const onSelectDate = (date) => {\r\n    const [start, end] = date;\r\n    setStartDate(start);\r\n    setEndDate('');\r\n    if (end) {\r\n      setIsOpen(!isOpen);\r\n      setEndDate(end);\r\n    }\r\n  };\r\n  const preventDefaultOnDatePicker = (date, e) => {\r\n    setStartDate(date);\r\n    setEndDate('');\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"block-modal\">\r\n      {title}\r\n      {!isInactive && (\r\n        <div className=\"block-modal__wrapper box\">\r\n          <div className=\"box__content\">\r\n            <BlockInput text=\"Дата начала\" date={startDate} setDate={setStartDate} setIsOpen={setIsOpen} isOpen={isOpen} placeholder=\"От\" />\r\n            {isOpen && (\r\n              <div ref={datePickerModal} className=\"period-date\">\r\n                <DatePicker\r\n                  selected={startDate || currentDate}\r\n                  onChange={preventDefaultOnDatePicker}\r\n                  dateFormatCalendar=\"LLLL\"\r\n                  showMonthYearPicker\r\n                  minDate={subDays(new Date(), 29)}\r\n                  showYearDropdown\r\n                  inline\r\n                />\r\n\r\n                <div className=\"period-date__month\">\r\n                  <DatePicker\r\n                    selected={startDate || ''}\r\n                    onChange={onSelectDate}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    showYearDropdown\r\n                    selectsRange\r\n                    dateFormatCalendar=\"LLLL\"\r\n                    shouldCloseOnSelect={false}\r\n                    inline\r\n                    minDate={new Date()}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            <Icon className=\"filter-box__period-icon\" name=\"arrow-right\" />\r\n            <BlockInput text=\"Дата окончания\" date={endDate} setDate={setEndDate} setIsOpen={setIsOpen} isOpen={isOpen} placeholder=\"До\" />\r\n          </div>\r\n          <div className=\"box__content\">\r\n            <div className=\"box__element\">\r\n              <div className=\"filter-box__name\">Время начала</div>\r\n              <div className=\"filter-box__period period time\">\r\n                <DatePicker\r\n                  selected={startHours}\r\n                  onChange={(date) => setStartHours(date)}\r\n                  showTimeSelect\r\n                  showTimeSelectOnly\r\n                  minTime={minTime.current}\r\n                  maxTime={maxTime.current}\r\n                  timeIntervals={RANGE_OF_MINUTES}\r\n                  locale=\"ru\"\r\n                  timeCaption=\"Время\"\r\n                  dateFormat=\"H:mm\"\r\n                  customInput={<TimeSelectInput text=\"Время от\" iconName=\"time-arrow-down\" />}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Icon className=\"filter-box__period-icon\" name=\"arrow-right\" />\r\n            <div className=\"box__element\">\r\n              <div className=\"filter-box__name\">Время начала</div>\r\n              <div className=\"filter-box__period period time\">\r\n                <DatePicker\r\n                  selected={endHours}\r\n                  onChange={(date) => setEndHours(date)}\r\n                  showTimeSelect\r\n                  showTimeSelectOnly\r\n                  minTime={selectedTime || minTime.current}\r\n                  maxTime={maxTime.current}\r\n                  timeIntervals={RANGE_OF_MINUTES}\r\n                  locale=\"ru\"\r\n                  timeCaption=\"Время\"\r\n                  dateFormat=\"H:mm\"\r\n                  customInput={<TimeSelectInput text=\"Время до\" iconName=\"time-arrow-down\" />}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isError && <p className=\"error-status-title status-title\"> Необходимо заполнить все поля </p>}\r\n\r\n      <div className=\"control__buttons--block\">\r\n        <Button className=\"form__button form-cancel__button--block\" onClick={onClose}>\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          className={cn(\r\n            'form__button form-edit-card__button--block',\r\n            { 'card__button--inactive': !isInactive },\r\n            { 'card__button--active': isInactive }\r\n          )}\r\n          type=\"submit\"\r\n          onClick={lockCard}\r\n        >\r\n          {isInactive ? 'Разблокировать' : 'Заблокировать'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBlockModal.propTypes = {\r\n  title: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  cardId: PropTypes.string,\r\n  isInactive: PropTypes.bool,\r\n  card: PropTypes.any,\r\n};\r\n","import { showToast } from 'shared/components';\r\n\r\nexport function showToastError(title, description, position) {\r\n  showToast({\r\n    title,\r\n    description,\r\n    iconName: 'error',\r\n    type: 'error',\r\n    toastPosition: position,\r\n  });\r\n}\r\n\r\nexport function showToastSuccess(title, description, position) {\r\n  showToast({\r\n    title,\r\n    description,\r\n    iconName: 'success',\r\n    type: 'success',\r\n    toastPosition: position,\r\n  });\r\n}\r\n","import apiAxios from 'services/api/apiAxios';\r\nimport { API } from 'shared/constants';\r\nimport { showToastError } from 'shared/components/Toast/utils/helpers';\r\nimport {\r\n  add,\r\n  addHours,\r\n  differenceInHours,\r\n  eachDayOfInterval,\r\n  eachHourOfInterval,\r\n  endOfWeek,\r\n  getHours,\r\n  hoursToMilliseconds,\r\n  isDate,\r\n  isSameDay,\r\n  parseISO,\r\n  set,\r\n  setHours,\r\n  startOfWeek,\r\n} from 'date-fns';\r\n\r\nexport default {\r\n  async makeReservation(schedules, hasPermissions) {\r\n    // eslint-disable-next-line no-return-await\r\n    return await apiAxios.post(hasPermissions ? API.apiSetSchedules : API.apiSetOwnSchedules, {\r\n      schedules,\r\n    });\r\n  },\r\n  async makeBlock(schedules) {\r\n    // eslint-disable-next-line no-return-await\r\n    return await apiAxios.post(API.apiSetTechWork, schedules);\r\n  },\r\n  async removeBlock(body) {\r\n    // eslint-disable-next-line no-return-await\r\n    return await apiAxios.delete(API.apiRemoveTechWork, {\r\n      data: body,\r\n    });\r\n  },\r\n  prepareSchedule({ from, to, fromHours, toHours, roomId, scheduleId, userId }) {\r\n    try {\r\n      const duration = eachDayOfInterval({\r\n        start: from,\r\n        end: to,\r\n      });\r\n      return duration.map((day) => ({\r\n        id: scheduleId,\r\n        from: add(day, {\r\n          hours: fromHours.getHours(),\r\n        }).toJSON(),\r\n        to: add(day, {\r\n          hours: toHours.getHours(),\r\n        }).toJSON(),\r\n        locationId: roomId,\r\n        userId,\r\n      }));\r\n    } catch {\r\n      showToastError('Произошла непредвиденная ошибка', 'Пожалуйста, обновите страницу');\r\n      return null;\r\n    }\r\n  },\r\n  checkScheduleData(startHours, endHours) {\r\n    try {\r\n      if (hoursToMilliseconds(startHours?.getHours()) > hoursToMilliseconds(endHours?.getHours())) {\r\n        return true;\r\n      }\r\n    } catch {\r\n      showToastError('Произошла непредвиденная ошибка', 'Пожалуйста, обновите страницу');\r\n    }\r\n\r\n    return true;\r\n  },\r\n  // eslint-disable-next-line consistent-return\r\n  calculateSchedulePosition(schedulesDays, dayHeight) {\r\n    try {\r\n      return schedulesDays?.reduce((acc, cur, idx) => {\r\n        let buff = [];\r\n        if (idx === 0) {\r\n          const schedulePosition = this.findVerticalPosition(parseISO(cur.from), parseISO(cur.to), dayHeight, undefined, cur.user.id);\r\n          buff.push(schedulePosition);\r\n          return {\r\n            ...acc,\r\n            from: cur.to,\r\n            arr: buff,\r\n          };\r\n        }\r\n        const schedulePosition = this.findVerticalPosition(\r\n          parseISO(cur.from),\r\n          parseISO(cur.to),\r\n          dayHeight,\r\n          parseISO(acc.from),\r\n          cur.user.id\r\n        );\r\n        buff = acc.arr;\r\n        buff.push(schedulePosition);\r\n\r\n        return {\r\n          ...acc,\r\n          from: cur.to,\r\n          arr: buff,\r\n        };\r\n      }, {});\r\n    } catch {\r\n      showToastError('Произошла непредвиденная ошибка', 'Пожалуйста, обновите страницу');\r\n    }\r\n  },\r\n  findVerticalPosition(startHours, endHours, hourHeight, initialHours, userID) {\r\n    let houseBeforeStart;\r\n    if (isDate(initialHours)) {\r\n      houseBeforeStart = differenceInHours(startHours, initialHours);\r\n    } else {\r\n      houseBeforeStart = differenceInHours(startHours, setHours(startHours, 6));\r\n    }\r\n    const duration = differenceInHours(endHours, startHours, { roundingMethod: 'ceil' });\r\n    const height = duration * hourHeight;\r\n    const top = houseBeforeStart * hourHeight;\r\n\r\n    return {\r\n      date: startHours,\r\n      height,\r\n      top,\r\n      userID,\r\n    };\r\n  },\r\n  generateHours() {\r\n    return eachHourOfInterval({\r\n      start: setHours(new Date(), 6),\r\n      end: setHours(new Date(), 22),\r\n    });\r\n  },\r\n  async loadSchedules(params) {\r\n    const res = await apiAxios.post(API.apiGetSchedules, params);\r\n    return res.data;\r\n  },\r\n  async deleteSchedule(scheduleIds, hasPermissions) {\r\n    const res = await apiAxios.delete(hasPermissions ? API.apiDeleteUsersSchedules : API.apiDeleteSchedules, { data: scheduleIds });\r\n    return res.data;\r\n  },\r\n  createParams(locationId, from, sizePage = 100) {\r\n    return {\r\n      pageRequest: {\r\n        size: sizePage,\r\n        index: 0,\r\n        params: {\r\n          query: '',\r\n          sortAsc: true,\r\n          sortBy: 0,\r\n          options: {\r\n            locationIds: [locationId],\r\n            dateFrom: startOfWeek(from, { weekStartsOn: 1 }).toJSON(),\r\n            dateTo: endOfWeek(from, { weekStartsOn: 1 }).toJSON(),\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  splitHours(from, to) {\r\n    return eachHourOfInterval({\r\n      start: parseISO(from),\r\n      end: parseISO(to),\r\n    });\r\n  },\r\n  checkDates(weekDay, selectedDay) {\r\n    return isSameDay(weekDay, parseISO(selectedDay));\r\n  },\r\n  checkTimes(dayTime, selectedTime) {\r\n    return getHours(dayTime) === getHours(selectedTime);\r\n  },\r\n  setAllowedTime(hours, minutes = 0, seconds = 0) {\r\n    return set(new Date(), { hours, minutes, seconds });\r\n  },\r\n  setScheduledTime(date) {\r\n    return isDate(date) ? addHours(date, 1) : null;\r\n  },\r\n  setScheduledIndex(schedule) {\r\n    return schedule.reduce((acc, cur, idx) => {\r\n      if (cur) acc.push(idx);\r\n      return acc;\r\n    }, []);\r\n  },\r\n  deleteScheduleEnd(scheduleDuration, scheduledIndex) {\r\n    scheduleDuration.splice(scheduledIndex[0] + 1, scheduledIndex.length);\r\n  },\r\n  deleteScheduleStart(scheduleDuration, scheduledId) {\r\n    scheduleDuration.splice(scheduledId[0], scheduledId.length);\r\n  },\r\n  deleteEndCheckboxes(checkboxes, scheduledId) {\r\n    const selectedCheckboxes = [...checkboxes];\r\n    selectedCheckboxes.splice(scheduledId[0], scheduledId.length);\r\n    return selectedCheckboxes;\r\n  },\r\n  deleteStartCheckboxes(checkboxes, scheduledIndex) {\r\n    const selectedCheckboxes = [...checkboxes];\r\n    selectedCheckboxes.splice(scheduledIndex[0], scheduledIndex.length);\r\n    return selectedCheckboxes;\r\n  },\r\n\r\n  splitIntoTwoSchedule(startDate, endDate, scheduleDuration, startSplit, endSplit, card, userId) {\r\n    const startISO = parseISO(startDate);\r\n    const endISO = parseISO(endDate);\r\n    const firstParams = {\r\n      from: startISO,\r\n      to: endISO,\r\n      fromHours: scheduleDuration[0],\r\n      toHours: startSplit,\r\n      roomId: card?.id,\r\n      userId,\r\n    };\r\n    const lastParams = {\r\n      from: startISO,\r\n      to: endISO,\r\n      fromHours: endSplit,\r\n      toHours: scheduleDuration[scheduleDuration.length - 1],\r\n      roomId: card?.id,\r\n      userId,\r\n    };\r\n    return [...this.prepareSchedule(firstParams), ...this.prepareSchedule(lastParams)];\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\n\r\nexport const makeReservationAction = createAsyncThunk('reservation/set-schedule', ({ scheduleDays, hasPermissions }, { rejectWithValue }) =>\r\n  scheduleService\r\n    .makeReservation(scheduleDays, hasPermissions)\r\n    .then((res) => res.data)\r\n    .catch((err) => rejectWithValue(err.response.data))\r\n);\r\nexport const loadReservations = createAsyncThunk('reservation/page', (params) => scheduleService.loadSchedules(params));\r\n\r\nexport const deleteReservations = createAsyncThunk('reservation/delete', (scheduleIds, hasPermissions) =>\r\n  scheduleService.deleteSchedule(scheduleIds, hasPermissions)\r\n);\r\n\r\nexport const makeTechWorkAction = createAsyncThunk('reservation/set-schedule', (params) => scheduleService.makeBlock(params));\r\n\r\nexport const removeTechWorkAction = createAsyncThunk('reservation/remove-schedule', (params) => scheduleService.removeBlock(params));\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { deleteReservations, loadReservations, makeReservationAction, makeTechWorkAction } from './actions';\r\n\r\nconst initialState = {\r\n  currentDate: new Date(),\r\n  isScheduleActive: false,\r\n  listOfReservations: null,\r\n  scheduleWeeks: null,\r\n  listOfMadeBookings: null,\r\n  listOfAllReservations: null,\r\n  selectedDate: null,\r\n  selectedTime: null,\r\n  selectedSchedule: null,\r\n  isScheduleSlotActive: false,\r\n  isShowAvatar: true,\r\n  deleteCheckboxes: null,\r\n};\r\n\r\nexport const scheduleSlice = createSlice({\r\n  name: 'schedule',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentDate(state, action) {\r\n      state.currentDate = action.payload;\r\n    },\r\n    setSelectedDate(state, action) {\r\n      state.selectedDate = action.payload;\r\n    },\r\n    setSelectedTime(state, action) {\r\n      state.selectedTime = action.payload;\r\n    },\r\n    setScheduleActive(state, action) {\r\n      state.isScheduleActive = action.payload;\r\n    },\r\n    setScheduleWeeks(state, action) {\r\n      state.scheduleWeeks = action.payload;\r\n    },\r\n    setListOfMadeBookings(state, action) {\r\n      state.listOfMadeBookings = action.payload;\r\n    },\r\n    setScheduleSlotActive(state, action) {\r\n      state.isScheduleSlotActive = action.payload;\r\n    },\r\n    setShowAvatar(state, action) {\r\n      state.isShowAvatar = action.payload;\r\n    },\r\n    setSelectedSchedule(state, action) {\r\n      state.selectedSchedule = action.payload;\r\n    },\r\n    setDeleteCheckboxes(state, action) {\r\n      state.deleteCheckboxes = action.payload;\r\n    },\r\n    setCheckboxesItem(state, action) {\r\n      state.checkboxes = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [makeReservationAction.fulfilled]: (state, action) => {\r\n      state.listOfReservations = action.payload;\r\n    },\r\n    [makeReservationAction.rejected]: (state, action) => {\r\n      state.listOfReservations = action.payload;\r\n    },\r\n    [loadReservations.fulfilled]: (state, action) => {\r\n      state.listOfAllReservations = action.payload;\r\n    },\r\n    [deleteReservations.fulfilled]: (state, action) => {\r\n      state.listOfReservations = { schedules: action.meta.requestId };\r\n    },\r\n    [makeTechWorkAction.fulfilled]: (state, action) => {\r\n      state.listOfReservations = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default scheduleSlice.reducer;\r\nexport const {\r\n  setCurrentDate,\r\n  setScheduleActive,\r\n  setScheduleWeeks,\r\n  setListOfMadeBookings,\r\n  setSelectedDate,\r\n  setSelectedTime,\r\n  setScheduleSlotActive,\r\n  setShowAvatar,\r\n  setSelectedSchedule,\r\n  setDeleteCheckboxes,\r\n  setCheckboxesItem,\r\n} = scheduleSlice.actions;\r\n","import apiAxios from 'services/api/apiAxios';\r\nimport { API } from 'shared/constants';\r\n\r\nexport default {\r\n  addRandomHashToPictureUrl(profile) {\r\n    return Object.assign(profile, { pictureUrl: `${profile.pictureUrl}?random=${Math.random()}` });\r\n  },\r\n  async getProfile() {\r\n    const res = await apiAxios.get(API.apiGetProfile);\r\n    return this.addRandomHashToPictureUrl(res.data);\r\n  },\r\n  async changeProfile(updatedProfile) {\r\n    const res = await apiAxios.post(API.apiGetProfile, updatedProfile);\r\n    return this.addRandomHashToPictureUrl(res.data);\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport profileService from 'services/profile/profileService';\r\n\r\nexport const getProfile = createAsyncThunk('getProfile/requestStatus', () => profileService.getProfile());\r\n\r\nexport const changeProfile = createAsyncThunk('changeProfile/requestStatus', (updatedProfile) =>\r\n  profileService.changeProfile(updatedProfile)\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n};\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'userProfile',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(actions.getProfile.fulfilled, (state, action) => {\r\n      state.profile = action.payload;\r\n    });\r\n    builder.addCase(actions.changeProfile.fulfilled, (state, action) => {\r\n      state.profile = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default profileSlice.reducer;\r\nexport const profileActions = profileSlice.actions;\r\n","import apiEndpoints from 'shared/constants/apiEndpoints';\r\nimport apiAxios from 'services/api/apiAxios';\r\n\r\nexport default {\r\n  getScheduleMonth: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetSchedules, params);\r\n    return res.data;\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport scheduleMonthServices from 'services/scheduleMonth/scheduleMonthServices';\r\n\r\nexport const loadScheduleMonthThunk = createAsyncThunk('monthReservation/getMonthReservation', async (params) =>\r\n  scheduleMonthServices.getScheduleMonth(params)\r\n);\r\n","export const getScheduleMonth = (store) => store.scheduleMonth.isListOfAllBookings;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadScheduleMonthThunk } from './actions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isListOfAllBookings: null,\r\n};\r\n\r\nexport const scheduleMonthSlice = createSlice({\r\n  name: 'scheduleMonth',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [loadScheduleMonthThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadScheduleMonthThunk.fulfilled]: (state, action) => {\r\n      state.isListOfAllBookings = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadScheduleMonthThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default scheduleMonthSlice.reducer;\r\nexport * from './selectors';\r\n","import apiAxios from '../api/apiAxios';\r\nimport apiEndpoints from 'shared/constants/apiEndpoints';\r\n\r\nexport default {\r\n  getRole: async () => {\r\n    const res = apiAxios.get(apiEndpoints.apiGetUsersRoles);\r\n    return res;\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport rolesService from 'services/roles/rolesService';\r\n\r\nexport const loadUsersRolesThunk = createAsyncThunk('/api/Role', async () => rolesService.getRole());\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadUsersRolesThunk } from './actions';\r\n\r\nconst initialState = {\r\n  roles: [],\r\n};\r\n\r\nexport const rolesSlice = createSlice({\r\n  name: 'roles',\r\n  initialState,\r\n  reducers: {\r\n    setRoles(state, action) {\r\n      state.roles = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadUsersRolesThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadUsersRolesThunk.fulfilled]: (state, action) => {\r\n      state.roles = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadUsersRolesThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default rolesSlice.reducer;\r\nexport const rolesActions = rolesSlice.actions;\r\nexport * from './selectors';\r\n","import apiEndpoints from 'shared/constants/apiEndpoints';\r\nimport apiAxios from 'services/api/apiAxios';\r\n\r\nexport default {\r\n  getDetailedSchedule: async (params) => {\r\n    const res = await apiAxios.post(apiEndpoints.apiGetSchedules, params);\r\n    return res.data;\r\n  },\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport detailedScheduleServices from 'services/detailedSchedule/detailedScheduleServices';\r\n\r\nexport const loadDetailedScheduleThunk = createAsyncThunk('detailedReservation/getDetailedReservation', async (params) =>\r\n  detailedScheduleServices.getDetailedSchedule(params)\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadDetailedScheduleThunk } from './actions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isListOfAllBookings: null,\r\n  selectedDate: null,\r\n};\r\n\r\nexport const detailedScheduleSlice = createSlice({\r\n  name: 'detailedSchedule',\r\n  initialState,\r\n  reducers: {\r\n    setSelectedDate(state, action) { \r\n      state.selectedDate = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadDetailedScheduleThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadDetailedScheduleThunk.fulfilled]: (state, action) => {\r\n      state.isListOfAllBookings = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadDetailedScheduleThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default detailedScheduleSlice.reducer;\r\nexport const { setSelectedDate } = detailedScheduleSlice.actions;\r\nexport * from './selectors';\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { loadReservationsThunk } from './actions';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  allReservations: {},\r\n  selectedDateFrom: null,\r\n  selectedDateTo: null,\r\n  selectedTimeFrom: null,\r\n  selectedTimeTo: null,\r\n};\r\n\r\nexport const reservationsSlice = createSlice({\r\n  name: 'myReservations',\r\n  initialState,\r\n  reducers: {\r\n    setDateFrom(state, action) {\r\n      state.selectedDateFrom = action.payload;\r\n    },\r\n    setDateTo(state, action) {\r\n      state.selectedDateTo = action.payload;\r\n    },\r\n    setTimeFrom(state, action) {\r\n      state.selectedTimeFrom = action.payload;\r\n    },\r\n    setTimeTo(state, action) {\r\n      state.selectedTimeTo = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [loadReservationsThunk.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [loadReservationsThunk.fulfilled]: (state, action) => {\r\n      state.allReservations = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [loadReservationsThunk.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default reservationsSlice.reducer;\r\nexport const { setDateFrom, setDateTo, setTimeFrom, setTimeTo } = reservationsSlice.actions;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isUserSearched: false,\r\n};\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState,\r\n  reducers: {\r\n    setIsUserSearched(state, action) {\r\n      state.isUserSearched = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default searchSlice.reducer;\r\nexport const { setIsUserSearched } = searchSlice.actions;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport auth from './auth';\r\nimport locations from './location';\r\nimport schedule from './schedule';\r\nimport userProfile from './profile';\r\nimport cards from './cards/index';\r\nimport scheduleMonth from './scheduleMonth/index';\r\nimport scheduleYear from './scheduleYear/index';\r\nimport users from './users/index';\r\nimport roles from './roles/index';\r\nimport detailedSchedule from './detailedSchedule/index';\r\nimport reservations from './reservations';\r\nimport search from './search';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    locations,\r\n    auth,\r\n    userProfile,\r\n    cards,\r\n    schedule,\r\n    scheduleMonth,\r\n    scheduleYear,\r\n    users,\r\n    detailedSchedule,\r\n    reservations,\r\n    search,\r\n    roles,\r\n  },\r\n  middleware: (getDefaults) =>\r\n    process.env.NODE_ENV === 'development' ? [...getDefaults({ serializableCheck: false }), logger] : getDefaults(),\r\n});\r\nexport default store;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default {\r\n    domainName: 'domainName',\r\n    password: 'password',\r\n}","import * as yup from 'yup';\r\nimport { INPUTS_NAMES } from '../constants';\r\n\r\nconst schema = yup.object().shape({\r\n  [INPUTS_NAMES.domainName]: yup\r\n    .string()\r\n    .required('Поле обязательно для заполнения')\r\n    .max(30, 'Поле не должно превышать 30 символов')\r\n    .trim(),\r\n  [INPUTS_NAMES.password]: yup.string().required('Поле обязательно для заполнения').max(30, 'Поле не должно превышать 30 символов').trim(),\r\n});\r\n\r\nexport default schema;\r\n","import { useEffect, useState } from 'react';\r\nimport { InputFormField } from './components/InputFormField';\r\nimport schema from './validation/yupAuthSchema';\r\nimport tokenService from 'services/auth/tokenService';\r\nimport { INPUTS_NAMES } from './constants';\r\nimport { Button, Icon } from 'shared/components';\r\nimport { ROUTES } from 'shared/constants';\r\nimport { loginUser } from 'store/auth/actions';\r\nimport authService from 'services/auth/authService';\r\nimport { useDispatch } from 'react-redux';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport './index.scss';\r\nimport cn from 'classnames';\r\n\r\nconst REMEMBER_ME_KEY = 'remember-me';\r\n\r\nfunction Login() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRemember, setIsRemember] = useState(localStorage.getItem(REMEMBER_ME_KEY));\r\n\r\n  const rememberMe = () => {\r\n    setIsRemember((remember) => !remember);\r\n    localStorage.setItem(REMEMBER_ME_KEY, !isRemember);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n    const res = await dispatch(\r\n      loginUser({\r\n        username: data.domainName,\r\n        password: data.password,\r\n      })\r\n    );\r\n\r\n    if (loginUser.fulfilled.match(res)) {\r\n      history.push(ROUTES.reservation);\r\n    }\r\n    if (loginUser.rejected.match(res)) {\r\n      setTimeout(() => {\r\n        setValue(INPUTS_NAMES.password, '');\r\n      }, 300);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  const token = tokenService.getAccessToken();\r\n\r\n  useEffect(() => {\r\n    if (tokenService.isAccessTokenValid()) authService.refresh();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"authtorisation\">\r\n      <div className=\"authtorisation__box\">\r\n        <div className=\"authtorisation__group\">\r\n          <div className=\"authtorisation__logo-block\">\r\n            <p className=\"logo\">\r\n              <span className=\"logo__decor\">ino</span>\r\n              <span className=\"logo__text\">reserv</span>\r\n            </p>\r\n          </div>\r\n          <div className=\"authtorisation__description\">\r\n            <h1 className=\"authtorisation__title\">Бронирование офисных мест </h1>\r\n            <p className=\"authtorisation__text\">Cервис INOSTUDIO, позволяющий забронировать рабочее место в офисе.</p>\r\n          </div>\r\n          <form className=\"form-authtorisation\" onSubmit={handleSubmit(onSubmit)}>\r\n            <InputFormField\r\n              className=\"form-authtorisation__login\"\r\n              label=\"Ваш логин\"\r\n              name={INPUTS_NAMES.domainName}\r\n              error={errors[INPUTS_NAMES.domainName]?.message}\r\n              register={register}\r\n            >\r\n              <input\r\n                id={INPUTS_NAMES.domainName}\r\n                className=\"input form-item__input\"\r\n                type=\"text\"\r\n                placeholder=\"Ваш логин\"\r\n                autoComplete=\"on\"\r\n              />\r\n            </InputFormField>\r\n            <InputFormField\r\n              className=\"form-authtorisation__password\"\r\n              label=\"Ваш пароль\"\r\n              name={INPUTS_NAMES.password}\r\n              error={errors[INPUTS_NAMES.password]?.message}\r\n              register={register}\r\n            >\r\n              <input\r\n                id={INPUTS_NAMES.password}\r\n                className=\"input form-item__input\"\r\n                type=\"password\"\r\n                placeholder=\"Ваш пароль\"\r\n                autoComplete=\"on\"\r\n              />\r\n            </InputFormField>\r\n\r\n            <div className=\"time-line\">\r\n              <input className=\"time-line-checkbox__custom\" id=\"remember-me\" type=\"checkbox\" value={isRemember} checked={isRemember} />\r\n              <label className={cn('time-line-checkbox--active')} htmlFor=\"remember-me\" onClick={rememberMe}>\r\n                <Icon className={cn('icon__select-checkbox')} name=\"check-arrow\" size={10} fill />\r\n              </label>\r\n              <label className={cn('time-line-title')} htmlFor=\"remember-me\" onClick={rememberMe}>\r\n                Запомнить меня\r\n              </label>\r\n            </div>\r\n\r\n            <Button\r\n              className=\"ctrl-button--color-blue form__button\"\r\n              isLoading={isLoading}\r\n              type=\"submit\"\r\n              icon={<Icon name=\"triangle\" size={24} fill />}\r\n            >\r\n              Продолжить\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useEffect, useState } from 'react';\r\nimport { Icon } from 'shared/components';\r\nimport propTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\nimport { set } from 'date-fns';\r\n\r\nexport default function Report({ month, fetchReport, year, reportMonth }) {\r\n  const [report, setReport] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (month) fetchReport(set(reportMonth, { hours: 0, minutes: 0, seconds: 0 }), setReport);\r\n  }, [month]);\r\n  console.log(report);\r\n\r\n  return (\r\n    <div className=\"report\">\r\n      <div className=\"report__group\">\r\n        <div className=\"report__date\">\r\n          <span className=\"report__date-group\">\r\n            <p className=\"report__date-year\">{year} </p> / <p className=\"report__date-month\">{month}</p>\r\n          </span>\r\n        </div>\r\n        <a href=\"http://172.20.10.2:8887/Акт-компенсации-17.06.2022.xlsx\" download>\r\n          <Icon className=\"report__icon\" name=\"download\" size={35} />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReport.propTypes = {\r\n  fetchReport: propTypes.func,\r\n  month: propTypes.string,\r\n  year: propTypes.string,\r\n  reportMonth: propTypes.object,\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { Icon, TimeSelectInput } from 'shared/components';\r\nimport { getYear, set, startOfYear } from 'date-fns';\r\nimport propTypes from 'prop-types';\r\nimport DatePicker from 'react-datepicker';\r\nimport cn from 'classnames';\r\n\r\nimport './index.scss';\r\n\r\nconst YEAR_QUANTITY = 1;\r\nconst EXCEPTED_YEAR = 2022;\r\n\r\nexport default function ReportSearch({ fetchReport }) {\r\n  const [year, setYear] = useState(new Date());\r\n  const [month, setMonth] = useState(null);\r\n  const [showError, setShowError] = useState(false);\r\n  const [report, setReport] = useState(null);\r\n  console.log(report, setReport, fetchReport);\r\n\r\n  const startYear = useRef(set(year, { month: 1, date: 0 }));\r\n  const currentDate = useRef(new Date());\r\n\r\n  const onYearChange = (yearDate) => {\r\n    setYear(yearDate);\r\n    setMonth(null);\r\n  };\r\n\r\n  const handleDownloadClick = (e) => {\r\n    if (!month) {\r\n      e.preventDefault();\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (month) {\r\n      setShowError(false);\r\n    }\r\n  }, [month]);\r\n\r\n  useEffect(() => {\r\n    if (getYear(year) !== EXCEPTED_YEAR) startYear.current = startOfYear(year);\r\n  }, [year]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"report-search\">\r\n        <div className=\"report-search__date\">\r\n          <div className=\"report-search__date-container\">\r\n            <p className=\"report-search__date-title\">Год</p>\r\n            <DatePicker\r\n              selected={year}\r\n              onChange={onYearChange}\r\n              showYearPicker\r\n              dateFormat=\"yyyy\"\r\n              yearItemNumber={YEAR_QUANTITY}\r\n              customInput={<TimeSelectInput text=\"Время от\" iconName=\"time-arrow-down\" isError={showError} />}\r\n            />\r\n          </div>\r\n          <div className=\"report-search__date-container\">\r\n            <p className=\"report-search__date-title\">Месяц</p>\r\n            <DatePicker\r\n              selected={month}\r\n              onChange={(date) => setMonth(date)}\r\n              minDate={startYear.current}\r\n              maxDate={currentDate.current}\r\n              locale=\"ru\"\r\n              dateFormat=\"LLLL\"\r\n              showMonthYearPicker\r\n              customInput={<TimeSelectInput text=\"Выбрать месяц\" iconName=\"time-arrow-down\" isError={showError} />}\r\n            />\r\n          </div>\r\n        </div>\r\n        <a\r\n          className={cn('report-search__button', { 'report-search__button--active': month })}\r\n          onClick={handleDownloadClick}\r\n          download={!showError}\r\n          href=\"http://172.20.10.2:8887/Акт-компенсации-31.05.2022.xlsx\"\r\n        >\r\n          <Icon className=\"report__icon\" name=\"download\" size={35} />\r\n        </a>\r\n      </div>\r\n\r\n      <div className={cn('validation', { 'validation--active': showError })}>\r\n        <p className=\"time__container-text time__container-text--empty\">Необходимо выбрать {!month && 'месяц'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nReportSearch.propTypes = {\r\n  fetchReport: propTypes.func,\r\n};\r\n","import { useCallback, useEffect, useRef } from 'react';\r\nimport { Report, ReportSearch } from './components';\r\n\r\nimport { format } from 'shared/utils';\r\nimport { differenceInWeeks, getMonth, getYear, startOfMonth, subMonths } from 'date-fns';\r\nimport './index.scss';\r\n\r\nconst EXCEPTED_YEAR = 2022;\r\nconst EXCEPTED_MONTH = 1;\r\n\r\nexport default function Compensation() {\r\n  const currentFormatMonth = useRef(format(new Date(), 'LLLL'));\r\n  const previousMonth = useRef(format(subMonths(new Date(), 1), 'LLLL'));\r\n  const currentYear = useRef(format(new Date(), 'yyyy'));\r\n  const reportMonth = useRef(new Date());\r\n  const isMiddleOfMonth = useRef(null);\r\n\r\n  const calculateTwoWeeks = (currentMonth) => differenceInWeeks(currentMonth, startOfMonth(currentMonth));\r\n\r\n  useEffect(() => {\r\n    isMiddleOfMonth.current = calculateTwoWeeks(reportMonth.current) < 2;\r\n  }, []);\r\n\r\n  const handleExceptedMonth = useCallback(\r\n    () => !(getYear(reportMonth.current) === EXCEPTED_YEAR && getMonth(reportMonth.current) === EXCEPTED_MONTH),\r\n    []\r\n  );\r\n\r\n  const fetchReport = async () => {};\r\n\r\n  return (\r\n    <div className=\"compensation\">\r\n      <div className=\"compensation__header compensation__header--primary\">\r\n        <span>Компенсация</span>\r\n      </div>\r\n\r\n      <div className=\"compensation__actual-report\">\r\n        <div className=\"compensation__actual-report-title\">Актуальный отчет</div>\r\n        <div className=\"compensation__actual-report-container\">\r\n          <Report\r\n            year={currentYear.current}\r\n            month={currentFormatMonth.current}\r\n            reportMonth={reportMonth.current}\r\n            fetchReport={fetchReport}\r\n          />\r\n\r\n          {isMiddleOfMonth.current && handleExceptedMonth() && (\r\n            <Report\r\n              year={currentYear.current}\r\n              month={previousMonth.current}\r\n              reportMonth={subMonths(reportMonth.current, 1)}\r\n              fetchReport={fetchReport}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"compensation__find-report\">\r\n        <div className=\"compensation__find-report-title\">Найти отчёт</div>\r\n        <ReportSearch fetchReport={fetchReport} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef, useMemo, useEffect } from 'react';\r\nimport { Button, Filter, Icon, FormSearch } from 'shared/components';\r\nimport { userTypes } from 'shared/constants/user';\r\nimport { loadUsersForAdminThunk, loadUsersThunk } from 'store/users/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport PropTypes from 'prop-types';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { adminPermissions } from 'shared/constants/permissions';\r\nimport { getIsFilterActive } from 'store/users/selectors';\r\nimport { usersActions } from 'store/users';\r\nimport { Btn } from 'shared/components/Btn';\r\nimport useClickAway from 'shared/hooks/useClickAway/useClickAway';\r\nimport { getUsersRoles } from 'store/roles/selectors';\r\nimport { FilterSelector } from 'shared/components/UserFilter/FilterSelector';\r\nimport cn from 'classnames';\r\nimport './index.scss';\r\n\r\nexport default function FilterForMobile({ setIsOpenFilters, setIsFilteredUserList, fieldForSort }) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [isOpenTypeSelector, setIsOpenTypeSelector] = useState(false);\r\n  const [isOpenRoleSelector, setIsOpenRoleSelector] = useState(false);\r\n  const { roles } = useSelector(getUsersRoles);\r\n  const isFilterActive = useSelector(getIsFilterActive);\r\n  const userTypeOptions = Object.values(userTypes);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const [filteredUserType, setFilteredUserType] = useState([...userTypeOptions]);\r\n  const [filteredRoles, setFilteredRoles] = useState(roles.data?.map((i) => ({ id: i.id, name: i.name })));\r\n  const isCanManageRole = hasPermission(adminPermissions, personPermissions);\r\n  const [formSearchFocused, setFormSearchFocused] = useState(false);\r\n  const onFocus = () => setFormSearchFocused(true);\r\n  const onBlur = () => setFormSearchFocused(false);\r\n  const refSelectorUserType = useRef(null);\r\n  const excludeRefSelectorUserType = useRef(null);\r\n  const refSelectorRole = useRef(null);\r\n  const excludeRefSelectorRole = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const activateFilters = () => dispatch(usersActions.setFilterUsersActive(true));\r\n\r\n  useClickAway({\r\n    ref: refSelectorUserType,\r\n    cb: () => setIsOpenTypeSelector(false),\r\n    exclude: excludeRefSelectorUserType,\r\n  });\r\n  useClickAway({\r\n    ref: refSelectorRole,\r\n    cb: () => setIsOpenRoleSelector(false),\r\n    exclude: excludeRefSelectorRole,\r\n  });\r\n  const isHaveCheckedUserType = useMemo(() => filteredUserType.some((i) => i.checked), [filteredUserType]);\r\n  const isHaveCheckedRole = useMemo(() => filteredRoles.some((i) => i.checked), [filteredRoles]);\r\n\r\n  const handleOptionClick = (checked, option) => {\r\n    const tempTableUserType = [...filteredUserType];\r\n    const optionIndex = filteredUserType.findIndex((o) => o.id === option.id);\r\n    if (optionIndex > -1) tempTableUserType[optionIndex].checked = checked;\r\n\r\n    const tempTableRole = [...filteredRoles];\r\n    const optionIndexRole = filteredRoles.findIndex((o) => o.id === option.id);\r\n    if (optionIndexRole > -1) tempTableRole[optionIndexRole].checked = checked;\r\n\r\n    setFilteredRoles([...tempTableRole]);\r\n    setFilteredUserType([...tempTableUserType]);\r\n  };\r\n\r\n  const clearSearch = (event) => {\r\n    event.preventDefault();\r\n    setSearchValue('');\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  const actionInputUserType = () => {\r\n    setIsOpenTypeSelector(false);\r\n    const tempTableUserType = [...filteredUserType];\r\n    const toggle = tempTableUserType?.map((n) => (n.checked === true ? { ...n, checked: false } : n));\r\n    toggle.map((i) => handleOptionClick(false, i));\r\n    setFilteredUserType([...toggle]);\r\n  };\r\n  const actionInputRoles = () => {\r\n    setIsOpenRoleSelector(false);\r\n    const tempTableRoles = [...filteredRoles];\r\n    const toggle = tempTableRoles?.map((n) => (n.checked === true ? { ...n, checked: false } : n));\r\n    toggle.map((i) => handleOptionClick(false, i));\r\n    setFilteredRoles([...toggle]);\r\n  };\r\n  const filterUsers = () => {\r\n    if (fieldForSort === 0 || fieldForSort === 1) {\r\n      const dataWithSort = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: searchValue,\r\n            sortAsc: true,\r\n            sortBy: fieldForSort,\r\n            options: {\r\n              userTypes: filteredUserType.filter((i) => i.checked).map((k) => k.id),\r\n              roleIds: filteredRoles?.filter((i) => i.checked).map((k) => k.id) || [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(dataWithSort));\r\n      else dispatch(loadUsersThunk(dataWithSort));\r\n    } else {\r\n      const data = {\r\n        pageRequest: {\r\n          size: 300,\r\n          index: 0,\r\n          params: {\r\n            query: searchValue,\r\n            sortAsc: true,\r\n            options: {\r\n              userTypes: filteredUserType.filter((i) => i.checked).map((k) => k.id),\r\n              roleIds: filteredRoles?.filter((i) => i.checked).map((k) => k.id) || [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n      if (isCanManageRole) dispatch(loadUsersForAdminThunk(data));\r\n      else dispatch(loadUsersThunk(data));\r\n    }\r\n  };\r\n  const isFiltersApplied = useMemo(\r\n    () => isHaveCheckedUserType || isHaveCheckedRole || searchValue,\r\n    [isHaveCheckedUserType, isHaveCheckedRole, searchValue]\r\n  );\r\n  useEffect(() => {\r\n    if (isFiltersApplied) setIsFilteredUserList(true);\r\n    else setIsFilteredUserList(false);\r\n  }, [isFiltersApplied]);\r\n  return (\r\n    <div className={`filters_wrapper ${!isFilterActive && 'filters_wrapper--mobile'}`}>\r\n      {!isFilterActive && (\r\n        <div className={`filters_header ${isFilterActive && 'filters_header--mobile'}`}>\r\n          <h1 className=\"user-filter_title\">Список пользователей</h1>\r\n          <div className=\"filter_button-wrapper\">\r\n            <Button\r\n              className=\"filters__button\"\r\n              onClick={() => {\r\n                setIsOpenFilters(true);\r\n                activateFilters(true);\r\n              }}\r\n            >\r\n              Фильтры\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isFilterActive && (\r\n        <>\r\n          <div className=\"filter_content\">\r\n            <Filter title=\"Пользователь\">\r\n              <FormSearch>\r\n                <div className=\"form-search__wrapper\">\r\n                  <input\r\n                    className={`input  ${searchValue ? 'filter-search__input' : 'form-search__input'} `}\r\n                    type=\"text\"\r\n                    autoComplete=\"on\"\r\n                    placeholder=\"Введите логин или имя\"\r\n                    value={searchValue}\r\n                    onChange={handleChange}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                  />\r\n                  <Icon name=\"search\" className={`filter-search__icon-search${searchValue && '--none'}`} size={24} />\r\n                  {searchValue && (\r\n                    <Btn\r\n                      className=\"form-search__remove-text\"\r\n                      icon={\r\n                        <Icon\r\n                          className={cn('form-search__remove-icon', { 'form-search__remove-icon--blue': formSearchFocused })}\r\n                          name=\"close\"\r\n                          size={14}\r\n                        />\r\n                      }\r\n                      onClick={clearSearch}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </FormSearch>\r\n            </Filter>\r\n            <FilterSelector\r\n              refSelector={refSelectorUserType}\r\n              filteredType={filteredUserType}\r\n              setOpenOptions={setIsOpenTypeSelector}\r\n              isHaveCheckedType={isHaveCheckedUserType}\r\n              actionInput={actionInputUserType}\r\n              isOpenOptions={isOpenTypeSelector}\r\n              excludeRef={excludeRefSelectorUserType}\r\n              tableType={userTypeOptions}\r\n              handleOptionClick={handleOptionClick}\r\n              title=\"Тип пользователя\"\r\n              placeholder=\"Выбор типа пользователя\"\r\n            />\r\n            <FilterSelector\r\n              refSelector={refSelectorRole}\r\n              filteredType={filteredRoles}\r\n              setOpenOptions={setIsOpenRoleSelector}\r\n              isHaveCheckedType={isHaveCheckedRole}\r\n              actionInput={actionInputRoles}\r\n              isOpenOptions={isOpenRoleSelector}\r\n              excludeRef={excludeRefSelectorRole}\r\n              tableType={filteredRoles}\r\n              handleOptionClick={handleOptionClick}\r\n              title=\"Роль пользователя\"\r\n              placeholder=\"Выбор роли пользователя\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className=\"filters__button\"\r\n            onClick={() => {\r\n              setIsOpenFilters(false);\r\n              filterUsers();\r\n              dispatch(usersActions.setFilterUsersActive(false));\r\n            }}\r\n          >\r\n            Отфильтровать\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nFilterForMobile.propTypes = {\r\n  setIsOpenFilters: PropTypes.func,\r\n  setIsFilteredUserList: PropTypes.func,\r\n  fieldForSort: PropTypes.number,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { UserList, UserFilter } from 'shared/components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadUsersRolesThunk } from 'store/roles/actions';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { useWindowSize } from 'shared/hooks/useWindowsSize';\r\nimport { adminPermissions } from 'shared/constants/permissions';\r\nimport { FilterForMobile } from 'shared/components/UserFilter/FilterForMobile';\r\nimport { getIsFilterActive } from 'store/users/selectors';\r\n\r\nexport default function UserPage() {\r\n  const dispatch = useDispatch();\r\n  const [isVisibleUserList, setIsVisibleUserList] = useState(false);\r\n  const [isFilteredUserList, setIsFilteredUserList] = useState(false);\r\n  const personPermissions = useSelector(permissionsSelector);\r\n  const isCanManageRole = hasPermission(adminPermissions, personPermissions);\r\n  const [isOpenFilters, setIsOpenFilters] = useState(false);\r\n  const mobileView = 427;\r\n  const { width: windowWidth } = useWindowSize();\r\n  const [fieldForSort, setFieldForSort] = useState();\r\n  useEffect(() => {\r\n    if (windowWidth < mobileView) setIsOpenFilters(false);\r\n    else setIsOpenFilters(true);\r\n  }, [windowWidth]);\r\n\r\n  useEffect(() => {\r\n    if (isCanManageRole) {\r\n      dispatch(loadUsersRolesThunk()).then(() => setIsVisibleUserList(true));\r\n    } else setIsVisibleUserList(true);\r\n  }, [dispatch, isCanManageRole]);\r\n  const isFilterActive = useSelector(getIsFilterActive);\r\n\r\n  return (\r\n    <div>\r\n      {isVisibleUserList && (\r\n        <>\r\n          {windowWidth < mobileView && (\r\n            <FilterForMobile\r\n              setIsOpenFilters={setIsOpenFilters}\r\n              isOpenFilters={isOpenFilters}\r\n              windowWidth={windowWidth}\r\n              mobileView={mobileView}\r\n              setIsFilteredUserList={setIsFilteredUserList}\r\n            />\r\n          )}\r\n          {windowWidth > mobileView && <UserFilter setIsFilteredUserList={setIsFilteredUserList} />}\r\n          {(!isOpenFilters || windowWidth > mobileView || !isFilterActive) && (\r\n            <UserList isFilteredUserList={isFilteredUserList} fieldForSort={fieldForSort} setFieldForSort={setFieldForSort} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default function UserRole() {\r\n  return <div className=\"plug_wrapper\">Список ролей</div>;\r\n}\r\n","import propTypes from 'prop-types';\r\n\r\nexport default function VersionInfo({ version }) {\r\n  return (\r\n    <div className=\"history-list__item version\">\r\n      <p className=\"version__date\">Обновление от {version?.date} г.</p>\r\n      <div className=\"version__wrapper\">\r\n        {(version?.web.important || version?.web.text) && <h1 className=\"version__category\">WEB часть</h1>}\r\n\r\n        {version?.web?.text && (\r\n          <p className=\"version__info\">\r\n            Улучшения: <br /> {version.web.text}\r\n          </p>\r\n        )}\r\n\r\n        {version?.web?.important && (\r\n          <p className=\"version__info\">\r\n            Важная информация: <br />\r\n            {version.web.important}\r\n          </p>\r\n        )}\r\n\r\n        {(version?.app.important || version?.app.text) && <h1 className=\"version__category\">Клиентская часть {version.app.os}</h1>}\r\n\r\n        {version?.app?.text && (\r\n          <p className=\"version__info\">\r\n            Улучшения: <br /> {version.app.text}\r\n          </p>\r\n        )}\r\n\r\n        {version?.app?.important && (\r\n          <p className=\"version__info\">\r\n            Важная информация: <br />\r\n            {version.app.important}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nVersionInfo.propTypes = {\r\n  version: propTypes.array,\r\n};\r\n","export const history = [\r\n  {\r\n    date: '31.03.2022',\r\n    web: {\r\n      text: (\r\n        <ol className=\"history__menu menu\">\r\n          <li className=\"menu__item\">Исправлены ошибки при добавлении монитора</li>\r\n          <li className=\"menu__item\">Исправлены ошибки в таблице с пользователями</li> \r\n          <li className=\"menu__item\">Исправлена возможность получения функционала, доступного определённым ролям</li>\r\n      </ol>\r\n      ),\r\n      important: '',\r\n    },\r\n    app: {\r\n      text: '',\r\n      important: '',\r\n      os:''\r\n    },\r\n  },\r\n  {\r\n    date: '28.03.2022',\r\n    web: {\r\n      text: (\r\n      <ol className=\"history__menu menu\" >\r\n        <li className=\"menu__item\">Добавлена возможность просматривать компенсацию за личное оборудование, а также скачивать отчета для роли статист</li> \r\n        <li className=\"menu__item\">Добавлен поиск бронирований сотрудников</li>\r\n        <li className=\"menu__item\">Обновлена работа с пользователями и управление ролями</li>\r\n        <li className=\"menu__item\">Обновлена работа по управлению карточками рабочих мест</li>\r\n      </ol>\r\n      ),\r\n      important: '',\r\n    },\r\n    app: {\r\n      text: '',\r\n      important: '',\r\n      os:''\r\n    },\r\n  },\r\n  {\r\n    date: '16.06.2022',\r\n    web: {\r\n      text: (\r\n      <ol className=\"history__menu menu\" >\r\n        <li className=\"menu__item\">Переработан вид карточек рабочих мест. Были убраны фотографии, добавлена цветовая схема</li> \r\n        <li className=\"menu__item\">На страницу моих бронирований и поиска Добавлены фильтры по: времени, дате, кабинету, месту</li>\r\n        <li className=\"menu__item\">Оптимизирована верстка</li>\r\n        <li className=\"menu__item\">Переработано управление техническими работами</li>\r\n        <li className=\"menu__item\">Добавлена автоматическая синхронизация учетных записей с AD</li>\r\n        <li className=\"menu__item\">Улучшен выходной вид документа по компенсациям</li>\r\n        <li className=\"menu__item\">Переработана логика уведомлений при множественном бронировании. Теперь есть возможность на годовом календаре узнать причину не успешности нескольких бронирований</li>\r\n      </ol>\r\n      ),\r\n      important: '',\r\n    },\r\n    app: {\r\n      text: '',\r\n      important: '',\r\n      os:''\r\n    },\r\n  },\r\n];\r\n","import { VersionInfo } from './components';\r\nimport { history } from 'modules/VersionHistory/history';\r\nimport './index.scss';\r\n\r\nexport default function VersionHistory() {\r\n  return (\r\n    <div className=\"history\">\r\n      <div className=\"history__wrapper\">\r\n        <div className=\"history__header\">История версий</div>\r\n        <div className=\"history-list\">\r\n          {history?.map((version, index) => (\r\n            <VersionInfo version={version} key={index}/>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function Settings() {\r\n  return <div className=\"plug_wrapper\">Настройки</div>;\r\n}\r\n","import * as yup from 'yup';\r\n\r\nconst russianRegex = /^[\\u0400-\\u04FF]+$/;\r\n\r\nconst profileSchema = yup.object().shape({\r\n  profileName: yup\r\n    .string()\r\n    .required('Поле обязательно для заполнения')\r\n    .matches(russianRegex, 'Введите имя на русском языке')\r\n    .max(30, 'Имя больше 30 символов')\r\n    .trim(),\r\n  profileSurname: yup\r\n    .string()\r\n    .required('Поле обязательно для заполнения')\r\n    .matches(russianRegex, 'Введите фамилию на русском языке')\r\n    .max(30, 'Фамилия больше 30 символов')\r\n    .trim(),\r\n});\r\n\r\nexport default profileSchema;\r\n","export function prepareProfile(userData, img) {\r\n  return {\r\n    dto: {\r\n      firstName: userData.profileName,\r\n      lastname: userData.profileSurname,\r\n      pictureString: img,\r\n    },\r\n  };\r\n}\r\n","import { useEffect, useMemo, useRef } from 'react';\r\nimport { checkNullSrc } from 'shared/utils';\r\nimport { Icon } from 'shared/components';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function UserImageLoader({ selectedImage, isImageSelected, profile, disableClick, imageChangeHandler }) {\r\n  const objUrl = useRef(null);\r\n  const isSelectedImageString = typeof selectedImage === 'string';\r\n  const isNullImage = checkNullSrc(selectedImage);\r\n\r\n  const imageSrc = useMemo(() => {\r\n    if (isSelectedImageString) return profile?.pictureUrl;\r\n\r\n    objUrl.current = URL.createObjectURL(new Blob([selectedImage]));\r\n    return objUrl.current;\r\n  }, [isSelectedImageString, isNullImage, profile?.pictureUrl, selectedImage]);\r\n\r\n  useEffect(() => () => objUrl.current && URL.revokeObjectURL(objUrl.current), []);\r\n\r\n  return (\r\n    <div className=\"user-profile__file-upload\">\r\n      {isImageSelected && !isNullImage ? (\r\n        <div className=\"user-bar__avatar--pers user-profile__avatar\">\r\n          <img src={imageSrc} className=\"user-profile__image\" alt=\"Фотография профиля\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"user-bar__avata--pers user-profile__avatar\">\r\n          <Icon name=\"userWithoutAvatar\" className=\"user-profile__icon\" size={120} />\r\n        </div>\r\n      )}\r\n      <input\r\n        type=\"file\"\r\n        id=\"user-profile\"\r\n        className=\"user-profile__input-file--hidden\"\r\n        onClick={disableClick}\r\n        onChange={imageChangeHandler}\r\n        accept=\"image/jpeg,image/png\"\r\n      />\r\n      <label htmlFor=\"user-profile\" className=\"user-profile__input-file\" onClick={disableClick}>\r\n        Изменить фото\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserImageLoader.propTypes = {\r\n  selectedImage: PropTypes.string,\r\n  isImageSelected: PropTypes.bool,\r\n  profile: PropTypes.object,\r\n  disableClick: PropTypes.func,\r\n  imageChangeHandler: PropTypes.func,\r\n};\r\n","import { Button } from 'shared/components';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function UserButtons({ isLoading, onClose, disableClick }) {\r\n  return (\r\n    <div className=\"user-profile__buttons\">\r\n      <Button onClick={onClose} className=\"form__button form-cancel__button user-profile__button\" disable={isLoading}>\r\n        Отмена\r\n      </Button>\r\n\r\n      <Button\r\n        onClick={disableClick}\r\n        className=\"form__button form-edit-card__button user-profile__button\"\r\n        type=\"submit\"\r\n        isLoading={isLoading}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserButtons.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  disableClick: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\r\nimport { InputFormField } from 'modules/Login/components/InputFormField';\r\nimport { showToast } from 'shared/components';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeProfile } from 'store/profile/actions';\r\nimport { getProfile } from 'store/profile/selectors';\r\nimport cn from 'classnames';\r\nimport profileSchema from './validation-profile';\r\nimport { prepareProfile } from './prepareProfile';\r\nimport UserImageLoader from './components/UserImageLoader';\r\nimport UserButtons from './components/UserButtons';\r\n\r\nimport './index.scss';\r\n\r\nconst USER_NAME_FIELD_NAME = 'profileName';\r\nconst USER_SURNAME_FIELD_NAME = 'profileSurname';\r\n\r\nexport default function UserProfile({ onClose, closeProfile }) {\r\n  const profile = useSelector(getProfile);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [encodeImage, setEncodeImage] = useState(null);\r\n  const [name, setName] = useState(profile.firstName);\r\n  const [surname, setSurname] = useState(profile.lastName);\r\n  const [selectedImage, setSelectedImage] = useState(profile?.pictureUrl);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(profileSchema),\r\n  });\r\n\r\n  const isImageSelected = selectedImage !== null;\r\n\r\n  const surnameHandleChange = (value) => setSurname(value.target.value);\r\n  const nameHandleChange = (value) => setName(value.target.value);\r\n\r\n  const onSubmit = async (userData) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await dispatch(changeProfile(prepareProfile(userData, encodeImage)));\r\n\r\n      closeProfile();\r\n      showToast({\r\n        title: 'Профиль изменен',\r\n        description: 'Вы успешно изменили профиль',\r\n        iconName: 'success',\r\n        type: 'success',\r\n      });\r\n    } catch {\r\n      showToast({\r\n        title: 'Ошибка редактирования',\r\n        description: 'Выберите изображение',\r\n        iconName: 'error',\r\n        type: 'error',\r\n      });\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n  const disableClick = (event) => event.stopPropagation();\r\n\r\n  const imageChangeHandler = (event) => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      setSelectedImage(event.target.files[0]);\r\n\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const base64String = reader.result.replace(/^.+,/, '');\r\n        setEncodeImage(base64String);\r\n      };\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"user-profile\" onSubmit={handleSubmit(onSubmit)}>\r\n      <p className=\"user-profile__title\">Настройка профиля</p>\r\n\r\n      <UserImageLoader\r\n        selectedImage={selectedImage}\r\n        isImageSelected={isImageSelected}\r\n        profile={profile}\r\n        disableClick={disableClick}\r\n        imageChangeHandler={imageChangeHandler}\r\n      />\r\n\r\n      <InputFormField\r\n        className=\"user-profile__field\"\r\n        label=\"Фамилия\"\r\n        name={USER_SURNAME_FIELD_NAME}\r\n        register={register}\r\n        error={errors[USER_SURNAME_FIELD_NAME]?.message}\r\n      >\r\n        <input\r\n          id={USER_SURNAME_FIELD_NAME}\r\n          className={cn('input form-item__input', { 'form-item__input--invalid': errors[USER_SURNAME_FIELD_NAME] })}\r\n          type=\"text\"\r\n          placeholder=\"Фамилия\"\r\n          autoComplete=\"on\"\r\n          defaultValue={surname}\r\n          onChange={surnameHandleChange}\r\n        />\r\n      </InputFormField>\r\n\r\n      <InputFormField\r\n        className=\"user-profile__field\"\r\n        label=\"Имя\"\r\n        name={USER_NAME_FIELD_NAME}\r\n        register={register}\r\n        error={errors[USER_NAME_FIELD_NAME]?.message}\r\n      >\r\n        <input\r\n          id={USER_NAME_FIELD_NAME}\r\n          className={cn('input form-item__input', { 'form-item__input--invalid': errors[USER_NAME_FIELD_NAME] })}\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          autoComplete=\"on\"\r\n          defaultValue={name}\r\n          onChange={nameHandleChange}\r\n        />\r\n      </InputFormField>\r\n\r\n      <UserButtons isLoading={isLoading} onClose={onClose} disableClick={disableClick} />\r\n    </form>\r\n  );\r\n}\r\n\r\nUserProfile.propTypes = {\r\n  onClose: PropTypes.func,\r\n  closeProfile: PropTypes.func,\r\n};\r\n","export default {\r\n  createUserGuestParams(fullName) {\r\n    return {\r\n      query: fullName,\r\n    };\r\n  },\r\n};\r\n","import apiAxios from 'services/api/apiAxios';\r\n\r\nexport default {\r\n  async getUsers(userName, path) {\r\n    const res = await apiAxios.post(path, userName);\r\n    return res.data;\r\n  },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport searchServices from 'services/searchServices/searchServices';\r\nimport usersServices from 'services/users/usersServices';\r\nimport { useDebounce } from 'shared/hooks';\r\nimport { Icon } from 'shared/components';\r\nimport { API, ROUTES } from 'shared/constants';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './index.scss';\r\n\r\nconst SearchInput = React.forwardRef(({ className, placeholder, iconName, setUsers, isGlobalSearch, children, ...searchProps }, ref) => {\r\n  const [isFocus, setIsFocus] = useState(false);\r\n\r\n  const { value, setValue, setModalActive, searchUser, isUserSearched } = searchProps;\r\n\r\n  const handleInputFocus = () => setIsFocus(true);\r\n  const handleInputBlur = () => setIsFocus(false);\r\n  const clearValue = () => setValue('');\r\n\r\n  const closeSearchModal = () => {\r\n    setUsers(null);\r\n    setModalActive(false);\r\n  };\r\n\r\n  const isValueEmpty = value === '';\r\n\r\n  const loadUsers = useDebounce(async (newValue) => {\r\n    const validateEmptySearch = (res, users) => ({\r\n      isUserFound: res.length !== 0,\r\n      isEmptySearch: users.query === '',\r\n    });\r\n\r\n    const users = searchServices.createUserGuestParams(newValue);\r\n    const isGuestSearch = API.apiGetAllUserList;\r\n    try {\r\n      const response = await usersServices.getUsers(users, isGuestSearch);\r\n\r\n      const { isUserFound, isEmptySearch } = validateEmptySearch(response, users);\r\n\r\n      if (isEmptySearch || !isUserFound) {\r\n        closeSearchModal();\r\n        return;\r\n      }\r\n\r\n      setModalActive(true);\r\n      setUsers(response);\r\n    } catch {\r\n      setModalActive(false);\r\n    }\r\n  }, 500);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    loadUsers(event.target.value);\r\n  };\r\n\r\n  const fetchUser = () => {\r\n    searchUser(ROUTES.search, value);\r\n    setModalActive(false);\r\n  };\r\n\r\n  const handleEnterPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      fetchUser();\r\n      isUserSearched.current = true;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isValueEmpty) closeSearchModal();\r\n  }, [isValueEmpty]);\r\n\r\n  return (\r\n    <div className=\"dropdown-search\" ref={ref}>\r\n      <div className=\"dropdown-search__container\">\r\n        <div className=\"dropdown-search__input-block\">\r\n          <input\r\n            className={className}\r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={handleChange}\r\n            onFocus={handleInputFocus}\r\n            onBlur={handleInputBlur}\r\n            onKeyDown={handleEnterPress}\r\n          />\r\n          <Icon\r\n            className={cn(\r\n              'dropdown-search__icon',\r\n              { 'dropdown-search__icon--searching': !isValueEmpty },\r\n              { 'dropdown-search__icon--focus': isFocus }\r\n            )}\r\n            name={iconName}\r\n            onClick={isGlobalSearch ? fetchUser : clearValue}\r\n          />\r\n\r\n          {isGlobalSearch && (\r\n            <Icon\r\n              className={cn(\r\n                'dropdown-search__icon dropdown-search__icon-global',\r\n                { 'form-search__remove-icon--blue': !isValueEmpty },\r\n                { 'form-search__remove-icon--idle': isUserSearched }\r\n              )}\r\n              name=\"close\"\r\n              size={14}\r\n              onClick={clearValue}\r\n            />\r\n          )}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchInput;\r\n\r\nSearchInput.propTypes = {\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconName: PropTypes.string,\r\n  isGlobalSearch: PropTypes.bool,\r\n  setUsers: PropTypes.func,\r\n  searchUser: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import { UserAvatar } from 'shared/components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nexport default function SearchItem({ pictureUrl, firstName, lastName, onCLick, id, currentUserId }) {\r\n  const schedule = {\r\n    user: {\r\n      pictureUrl,\r\n      firstName,\r\n    },\r\n  };\r\n\r\n  const isMySchedule = currentUserId === id;\r\n\r\n  return (\r\n    <div className=\"user\" onClick={() => onCLick({ firstName, lastName, id })}>\r\n      <UserAvatar schedule={schedule} isMySchedule={isMySchedule} />\r\n      <span className=\"user__name\">\r\n        {firstName} {lastName}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchItem.propTypes = {\r\n  currentUserId: PropTypes.string,\r\n  pictureUrl: PropTypes.string,\r\n  firstName: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  onCLick: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\n","import SearchItem from '../SearchItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nexport default function SearchModal({ users, close, setValue, selectUser, currentUserId, modalWidth }) {\r\n  const handleUserClick = ({ firstName, lastName, id }) => {\r\n    const selectedUser = {\r\n      firstName,\r\n      lastName,\r\n      id,\r\n    };\r\n    close(false);\r\n    setValue(`${firstName} ${lastName}`);\r\n    selectUser(selectedUser);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-modal\" style={{ width: modalWidth }}>\r\n      <div className=\"search-modal__group\">\r\n        {users?.map((user) => (\r\n          <SearchItem\r\n            firstName={user?.firstName}\r\n            lastName={user?.lastName}\r\n            pictureUrl={user?.pictureUrl}\r\n            onCLick={handleUserClick}\r\n            id={user?.id}\r\n            currentUserId={currentUserId}\r\n            key={user?.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchModal.propTypes = {\r\n  currentUserId: PropTypes.string,\r\n  modalWidth: PropTypes.number,\r\n  users: PropTypes.array,\r\n  close: PropTypes.func,\r\n  setValue: PropTypes.func,\r\n  selectUser: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { setSelectedDate, setSelectedTime } from 'store/schedule';\r\nimport { Icon } from 'shared/components/Icon';\r\nimport { getUserId } from 'store/auth/selectors';\r\nimport { UserAvatar } from 'shared/components';\r\n\r\nconst UserSchedule = ({\r\n  checkBoxNumber,\r\n  checkboxes,\r\n  setCheckboxes,\r\n  allCheckbox,\r\n  isScheduleActive,\r\n  isShowAvatar,\r\n  isRecruiter,\r\n  schedule,\r\n  setIsShowUser,\r\n  columnId,\r\n  dayId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { userId } = useSelector((state) => ({\r\n    userId: getUserId(state),\r\n  }));\r\n\r\n  const handleCheckboxActive = (e, idx) => {\r\n    setCheckboxes((oldItems) => [\r\n      ...oldItems.map((item, index) => {\r\n        if (index === idx) return e.target.checked;\r\n        return item;\r\n      }),\r\n    ]);\r\n  };\r\n\r\n  const handleAllCheckBoxActive = (e) => setCheckboxes((oldItems) => [...oldItems.map(() => e.target.checked)]);\r\n\r\n  const setSelectScheduleTime = (currentIndex) => {\r\n    const scheduleDuration = scheduleService.splitHours(schedule?.from, schedule?.to);\r\n    scheduleDuration.splice(scheduleDuration.length - 1, 1);\r\n    const editedTime = checkboxes.reduce((acc, cur, idx) => {\r\n      let el = cur;\r\n      if (currentIndex === idx || currentIndex === undefined) el = !cur;\r\n      if (el) {\r\n        acc.push(scheduleDuration[idx]);\r\n        return acc;\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    dispatch(setSelectedTime(editedTime));\r\n    dispatch(setSelectedDate(schedule?.from));\r\n  };\r\n\r\n  const handleSelectAll = (e) => {\r\n    handleAllCheckBoxActive(e);\r\n    setSelectScheduleTime();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isScheduleActive && allCheckbox.current.checked === false) {\r\n      setCheckboxes((oldItems) => [...oldItems.map(() => false)]);\r\n    }\r\n  }, [isScheduleActive]);\r\n\r\n  useEffect(() => {\r\n    const isCheckBoxDisable = checkboxes.some((checkbox) => checkbox === false);\r\n    const isAllCheckboxActive = checkboxes.every((checkbox) => checkbox === true);\r\n\r\n    // eslint-disable-next-line no-param-reassign\r\n    if (isCheckBoxDisable) allCheckbox.current.checked = false;\r\n    // eslint-disable-next-line no-param-reassign\r\n    if (isAllCheckboxActive) allCheckbox.current.checked = true;\r\n  }, [checkboxes]);\r\n\r\n  return (\r\n    <span className=\"time-line__inner\">\r\n      <input\r\n        type=\"checkbox\"\r\n        className={cn('time-line-checkbox__custom-select-all')}\r\n        onClick={handleSelectAll}\r\n        id={`select-all-${columnId}-${dayId}`}\r\n        ref={allCheckbox}\r\n      />\r\n      {(schedule?.user.id === userId || isRecruiter) && (\r\n        <label\r\n          className={cn('time-line__checkbox-all', { 'time-line-checkbox--active': isScheduleActive })}\r\n          htmlFor={`select-all-${columnId}-${dayId}`}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <Icon\r\n            className={cn('icon__select-all-checkbox', { 'time-line-checkbox--active': allCheckbox?.current?.checked })}\r\n            name=\"check-arrow\"\r\n            size={9}\r\n            fill\r\n          />\r\n        </label>\r\n      )}\r\n      {[...Array(checkBoxNumber).keys()]?.map((el, idx) => (\r\n        <div className={cn('time-line__ceil')}>\r\n          {idx === 0 && isShowAvatar && (\r\n            <div className={cn('time-line__avatar')} onMouseEnter={() => setIsShowUser(true)} onMouseLeave={() => setIsShowUser(false)}>\r\n              <UserAvatar schedule={schedule} isMySchedule={schedule?.user.id === userId} />\r\n            </div>\r\n          )}\r\n          <input\r\n            key={`checkbox-${idx + 1}`}\r\n            className=\"time-line-checkbox__custom\"\r\n            checked={checkboxes[idx]}\r\n            onChange={(e) => handleCheckboxActive(e, idx)}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setSelectScheduleTime(idx);\r\n            }}\r\n            type=\"checkbox\"\r\n            id={`checkbox-${columnId}-${idx}-${dayId}`}\r\n          />\r\n          {(schedule?.user.id === userId || isRecruiter) && (\r\n            <label\r\n              className={cn('time-line-checkbox--active', { disable: !isScheduleActive }, { 'time-line-checkbox-avatar': idx === 0 })}\r\n              htmlFor={`checkbox-${columnId}-${idx}-${dayId}`}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <Icon className={cn('icon__select-checkbox')} name=\"check-arrow\" size={9} fill />\r\n            </label>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default UserSchedule;\r\nUserSchedule.propTypes = {\r\n  checkBoxNumber: PropTypes.number,\r\n  columnId: PropTypes.string,\r\n  dayId: PropTypes.string,\r\n  schedule: PropTypes.object,\r\n  checkboxes: PropTypes.array,\r\n  setCheckboxes: PropTypes.func,\r\n  setIsShowUser: PropTypes.func,\r\n  allCheckbox: PropTypes.node,\r\n  isScheduleActive: PropTypes.bool,\r\n  isShowAvatar: PropTypes.bool,\r\n  isRecruiter: PropTypes.bool,\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport UserSchedule from './components';\r\nimport { ScheduleMonthUsers } from '../ScheduleMonthUsers';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { useWindowSize } from 'shared/hooks/useWindowsSize';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { recruiterPermissions } from 'shared/constants/permissions';\r\nimport {\r\n  setCheckboxesItem,\r\n  setDeleteCheckboxes,\r\n  setScheduleSlotActive,\r\n  setSelectedDate,\r\n  setSelectedSchedule,\r\n  setSelectedTime,\r\n} from 'store/schedule';\r\nimport { getIsScheduleSlotActive, getListOfReservations, getSelectedSchedule } from 'store/schedule/selectors';\r\nimport { getUserId, permissionsSelector } from 'store/auth/selectors';\r\nimport { useDispatch, useSelector, batch } from 'react-redux';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport Tippy from '@tippyjs/react';\r\n\r\nconst tippyPopperOptions = {\r\n  strategy: 'absolute',\r\n  modifiers: [\r\n    {\r\n      name: 'flip',\r\n      options: {\r\n        fallbackPlacements: ['top'],\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function UserReservation({ checkBoxNumber, style, schedule, columnId, dayId, ...reservationProps }) {\r\n  const [isScheduleActive, setIsScheduleActive] = useState(false);\r\n  const [checkboxes, setCheckboxes] = useState(new Array(checkBoxNumber).fill(false));\r\n  const [isShowUser, setIsShowUser] = useState(false);\r\n  const [isShowAvatar, setIsShowAvatar] = useState(true);\r\n\r\n  const resRef = useRef(null);\r\n  const allCheckbox = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isScheduleSlotActive, selectedSchedule, reservation, userId, personPermissions } = useSelector((state) => ({\r\n    isScheduleSlotActive: getIsScheduleSlotActive(state),\r\n    selectedSchedule: getSelectedSchedule(state),\r\n    reservation: getListOfReservations(state),\r\n    userId: getUserId(state),\r\n    personPermissions: permissionsSelector(state),\r\n  }));\r\n\r\n  const isImageSelected = schedule.user.pictureUrl !== null;\r\n  const isMyReservation = schedule.user.id === userId;\r\n  const isRecruiter = hasPermission(recruiterPermissions, personPermissions);\r\n\r\n  const { width } = useWindowSize();\r\n  const reservationStyle = { ...style };\r\n\r\n  reservationStyle.height = 'inherit';\r\n\r\n  const disableSelect = () => {\r\n    allCheckbox.current.checked = false;\r\n    setIsScheduleActive(false);\r\n  };\r\n\r\n  const showCheckBoxes = () => {\r\n    if (width < 420 && schedule?.user.id === userId) setIsShowAvatar(false);\r\n\r\n    if (isMyReservation || isRecruiter) {\r\n      setIsScheduleActive((previous) => {\r\n        dispatch(setScheduleSlotActive(!isScheduleActive));\r\n\r\n        return !previous;\r\n      });\r\n\r\n      batch(() => {\r\n        dispatch(setSelectedSchedule(schedule));\r\n        dispatch(setDeleteCheckboxes(checkBoxNumber));\r\n        dispatch(setSelectedDate(schedule?.from));\r\n        dispatch(setSelectedTime(null));\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isScheduleSlotActive) {\r\n      disableSelect();\r\n      setIsShowAvatar(true);\r\n    }\r\n  }, [isScheduleSlotActive]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setCheckboxesItem(checkboxes));\r\n  }, [checkboxes]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSchedule?.id !== schedule?.id) {\r\n      disableSelect();\r\n      setIsShowAvatar(true);\r\n    }\r\n  }, [schedule?.id, selectedSchedule]);\r\n\r\n  useEffect(() => {\r\n    const isReservationLoaded = reservation !== undefined;\r\n    const isReservationString = typeof reservation === 'string';\r\n\r\n    if (isReservationLoaded && !isReservationString) {\r\n      const currentChanges = reservation?.filter((scheduleList) => scheduleList.id === selectedSchedule?.id);\r\n\r\n      if (currentChanges?.length > 0) {\r\n        const scheduleDuration = scheduleService.splitHours(\r\n          currentChanges[currentChanges?.length - 1]?.from,\r\n          currentChanges[currentChanges?.length - 1]?.to\r\n        );\r\n        setCheckboxes(new Array(scheduleDuration.length - 1).fill(false));\r\n      }\r\n    }\r\n  }, [reservation]);\r\n\r\n  return (\r\n    <>\r\n      <Tippy\r\n        interactive\r\n        maxWidth=\"none\"\r\n        placement=\"top\"\r\n        offset={[0, 4]}\r\n        popperOptions={tippyPopperOptions}\r\n        content={\r\n          isShowUser && (\r\n            <div className={cn('schedule-week__users', { 'time-line-checkbox--active': isShowUser })}>\r\n              <ScheduleMonthUsers booking={schedule} isImageSelected={isImageSelected} isMyReservation={isMyReservation} />\r\n            </div>\r\n          )\r\n        }\r\n      >\r\n        <button\r\n          className={cn(\r\n            'time-line',\r\n            { 'time-line--active': isScheduleActive },\r\n            { 'time-line--foreign': !isMyReservation && !schedule.type },\r\n            { 'time-line--inactive': schedule.type }\r\n          )}\r\n          onClick={showCheckBoxes}\r\n          {...reservationProps}\r\n          style={reservationStyle}\r\n          ref={resRef}\r\n        >\r\n          <UserSchedule\r\n            schedule={schedule}\r\n            checkBoxNumber={checkBoxNumber}\r\n            checkboxes={checkboxes}\r\n            setCheckboxes={setCheckboxes}\r\n            allCheckbox={allCheckbox}\r\n            isScheduleActive={isScheduleActive}\r\n            isShowAvatar={isShowAvatar}\r\n            isRecruiter={isRecruiter}\r\n            columnId={columnId}\r\n            dayId={dayId}\r\n            setIsShowUser={setIsShowUser}\r\n          />\r\n        </button>\r\n      </Tippy>\r\n    </>\r\n  );\r\n}\r\n\r\nUserReservation.propTypes = {\r\n  checkBoxNumber: PropTypes.number,\r\n  columnId: PropTypes.string,\r\n  dayId: PropTypes.string,\r\n  scheduleID: PropTypes.string,\r\n  style: PropTypes.object,\r\n  schedule: PropTypes.object,\r\n};\r\n","import { Icon } from 'shared/components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\nimport cn from 'classnames';\r\n\r\nexport default function DateValidation({ date, hours, isError }) {\r\n  return (\r\n    <div className={cn('validation', { 'validation--active': isError })}>\r\n      <Icon name=\"error\" />\r\n      <p className=\"time__container-text time__container-text--empty\">\r\n        Необходимо указать {date && 'дату'} {date && hours && 'и'} {hours && 'время'} бронирования\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nDateValidation.propTypes = {\r\n  date: PropTypes.bool,\r\n  hours: PropTypes.bool,\r\n  isError: PropTypes.bool,\r\n};\r\n","import cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\nimport { Icon } from 'shared/components';\r\nimport { useCallback } from 'react';\r\n\r\nexport default function DateRangePicker({ from, to, setFrom, setTo, isError }) {\r\n  const clearDate = useCallback(() => {\r\n    setFrom(null);\r\n    setTo(null);\r\n    }, [setFrom, setTo]\r\n  )\r\n  return (\r\n    <>\r\n      <div className=\"time__duration\">\r\n        <p className=\"time__title\">Дата начала</p>\r\n        <div className={cn('time__container', { 'time__container--active': from }, { 'time__container--empty': isError && !from })}>\r\n          {from ? (\r\n            <p className=\"time--active\">{format(from, 'dd.MM.yyyy')}</p>\r\n          ) : (\r\n            <p className={cn({ 'time__container-text--empty': from || isError })}>Дата от</p>\r\n          )}\r\n          {from \r\n            ? <Icon className=\"reservation__date-icon\" name=\"time-close\" fill onClick={clearDate} />\r\n            : <Icon className=\"reservation__date-icon\" name=\"time-arrow-down\" size={10} />\r\n          }\r\n        </div>\r\n      </div>\r\n      <Icon className=\"time__arrow-right\" name=\"arrow-right\" />\r\n      <div className=\"time__duration\">\r\n        <p className=\"time__title\">Дата окончания</p>\r\n        <div className={cn('time__container', { 'time__container--active': to }, { 'time__container--empty': isError && !to })}>\r\n          {to ? (\r\n            <p className=\"time--active\">{format(to, 'dd.MM.yyyy')}</p>\r\n          ) : (\r\n            <p className={cn({ 'time__container-text--empty': isError })}>Дата до</p>\r\n          )}\r\n          {to \r\n            ? <Icon className=\"reservation__date-icon\" name=\"time-close\" fill onClick={() => setTo(null)} />\r\n            : <Icon className=\"reservation__date-icon\" name=\"time-arrow-down\" size={10} />\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nDateRangePicker.propTypes = {\r\n  isError: PropTypes.bool,\r\n  from: PropTypes.object,\r\n  to: PropTypes.object,\r\n  setFrom: PropTypes.func,\r\n  setTo: PropTypes.func,\r\n};\r\n","import { useMemo, useRef } from 'react';\r\nimport { DateRangePicker } from '../DateRangePicker';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { Icon, TimeSelectInput } from 'shared/components';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nconst RANGE_OF_MINUTES = 60;\r\n\r\nexport default function ReservationDatePickerFooter({\r\n  isFooterVisible,\r\n  startDate,\r\n  startHours,\r\n  setStartDate,\r\n  setStartHours,\r\n  endDate,\r\n  endHours,\r\n  setEndDate,\r\n  setEndHours,\r\n  isError,\r\n}) {\r\n  const allowedTime = (hours) => scheduleService.setAllowedTime(hours);\r\n  const scheduledTime = (date) => scheduleService.setScheduledTime(date);\r\n\r\n  const minTime = useRef(allowedTime(6));\r\n  const maxTime = useRef(allowedTime(23));\r\n\r\n  const selectedTime = useMemo(() => scheduledTime(startHours), [startHours]);\r\n\r\n  return (\r\n    <div className={cn('reservation__data-picker-footer', { 'res-active': isFooterVisible })}>\r\n      <div className=\"time\">\r\n        <DateRangePicker from={startDate} to={endDate} setFrom={setStartDate} setTo={setEndDate} isError={isError} />\r\n      </div>\r\n      <div className=\"line\" />\r\n      <div className=\"time\">\r\n        <div className=\"time__duration\">\r\n          <p className=\"time__title\">Время начала</p>\r\n\r\n          <DatePicker\r\n            selected={startHours}\r\n            onChange={(date) => setStartHours(date)}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            minTime={minTime.current}\r\n            maxTime={maxTime.current}\r\n            timeIntervals={RANGE_OF_MINUTES}\r\n            locale=\"ru\"\r\n            timeCaption=\"Время\"\r\n            dateFormat=\"H:mm\"\r\n            customInput={<TimeSelectInput text=\"Время от\" iconName=\"time-arrow-down\" isError={isError} />}\r\n          />\r\n        </div>\r\n        <Icon className=\"time__arrow-right\" name=\"arrow-right\" />\r\n        <div className=\"time__duration\">\r\n          <p className=\"time__title\">Время окончания</p>\r\n          <DatePicker\r\n            selected={endHours}\r\n            onChange={(date) => setEndHours(date)}\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            minTime={selectedTime || minTime.current}\r\n            maxTime={maxTime.current}\r\n            timeIntervals={RANGE_OF_MINUTES}\r\n            locale=\"ru\"\r\n            timeCaption=\"Время\"\r\n            dateFormat=\"H:mm\"\r\n            customInput={<TimeSelectInput text=\"Время до\" iconName=\"time-arrow-down\" isError={isError} />}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservationDatePickerFooter.propTypes = {\r\n  isFooterVisible: PropTypes.bool,\r\n  isError: PropTypes.bool,\r\n  startDate: PropTypes.object,\r\n  startHours: PropTypes.object,\r\n  setStartDate: PropTypes.func,\r\n  setStartHours: PropTypes.func,\r\n  endDate: PropTypes.object,\r\n  endHours: PropTypes.object,\r\n  setEndDate: PropTypes.func,\r\n  setEndHours: PropTypes.func,\r\n};\r\n","export function generateValidateConstants(res) {\r\n  return {\r\n    isResponseError: res?.error !== undefined,\r\n    isAccessForbidden: res.payload.status === 401,\r\n    isDataIncorrect: res.payload.status === 400,\r\n    isSchedulesIncorrect: res.payload?.schedules !== undefined,\r\n  };\r\n}\r\n","export function getCurrentCard(cards, parentLocationId, name) {\r\n  return cards.find((card) => card.name === name && parentLocationId === card.parentLocationId);\r\n}\r\n","import { showToastErrorList } from 'shared/components/ToastErrorList';\r\n\r\nexport const validateScheduleNotifications = (err, locationNumber, roomId) => {\r\n  const incorrectSchedules = err.filter((day) => day.statusCode !== 0);\r\n\r\n  showToastErrorList({ length: incorrectSchedules?.length, incorrectSchedules, locationNumber, roomId });\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport DateValidation from './DateValidation';\r\nimport { ReservationDatePickerFooter } from './ReservationDatePickerFooter';\r\nimport { generateValidateConstants } from './utils/generate-validate-constants';\r\nimport { SearchInput, SearchModal } from '../Schedule/components';\r\nimport { getCurrentCard } from 'services/schedule/getCurrentCard';\r\nimport { getCurrentLocationId } from 'services/schedule/getCurrentLocationId';\r\nimport scheduleServices from 'services/schedule/scheduleService';\r\nimport { showToastError } from 'shared/components/Toast/utils/helpers';\r\nimport { validateScheduleNotifications } from 'shared/utils/validate-schedule-notifications';\r\nimport { Button, showToast } from 'shared/components';\r\nimport { useWindowSize } from 'shared/hooks/useWindowsSize';\r\nimport { SCHEDULES } from 'shared/constants';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { adminPermissions, recruiterPermissions, sysAdminPermissions } from 'shared/constants/permissions';\r\nimport { getLocations } from 'store/location';\r\nimport { getCards } from 'store/cards';\r\nimport { makeReservationAction } from 'store/schedule/actions';\r\nimport { getProfile } from 'store/profile/selectors';\r\nimport { scheduleYearActions } from 'store/scheduleYear';\r\nimport { getUserId, permissionsSelector } from 'store/auth/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport DatePicker from 'react-datepicker';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './index.scss';\r\nimport './responsive.scss';\r\n\r\nconst TABLET_DATE_PICKER_AMOUNTS = 2;\r\nconst DESKTOP_DATE_PICKER_AMOUNTS = 1;\r\nconst NUMBER_OF_YEARS = 15;\r\nconst TABLET_MEDIA_BREAKPOINT = 1200;\r\nconst CURRENT_DATE = new Date();\r\n\r\nexport default function ReservationDatePicker({ showReservationData }) {\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [startHours, setStartHours] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [endHours, setEndHours] = useState(null);\r\n  const [isFooterVisible, setIsFooterVisible] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [monthQuantity, setMonthQuantity] = useState(null);\r\n  const [debouncedSearchValue, setDebouncedSearchValue] = useState('');\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n  const [isUserModalActive, setIsUserModalActive] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const windowWidth = useWindowSize().width;\r\n\r\n  const isEmptyDate = !startDate || !endDate;\r\n  const isEmptyHours = !startHours || !endHours;\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n\r\n  const { locations, cards, profile, personPermissions, currentUserId } = useSelector((state) => ({\r\n    locations: getLocations(state),\r\n    cards: getCards(state),\r\n    profile: getProfile(state),\r\n    personPermissions: permissionsSelector(state),\r\n    currentUserId: getUserId(state),\r\n  }));\r\n\r\n  const currentLocationId = getCurrentLocationId(locations, roomId);\r\n\r\n  const currentCard = getCurrentCard(cards?.rows, currentLocationId, locationNumber);\r\n  const isInputValueEmpty = debouncedSearchValue === '';\r\n\r\n  const isRecruiter = hasPermission(recruiterPermissions, personPermissions);\r\n  const isAdmin = hasPermission(adminPermissions, personPermissions);\r\n  const isSysAdmin = hasPermission(sysAdminPermissions, personPermissions);\r\n  const isEditor = isRecruiter || isAdmin || isSysAdmin;\r\n  const userId = isEditor ? selectedUser?.id : profile?.id;\r\n\r\n  const clearHours = () => {\r\n    setStartHours(null);\r\n    setEndHours(null);\r\n  };\r\n  const clearDate = () => {\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    setDebouncedSearchValue('');\r\n    setSelectedUser('');\r\n    clearHours();\r\n  };\r\n\r\n  const onChange = (dates) => {\r\n    const [start, end] = dates;\r\n\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n  };\r\n\r\n  const makeSchedule = async () => {\r\n    const isEmpty = !endDate || !startDate || !endHours || !startHours;\r\n    dispatch(scheduleYearActions.setListOfErrorBookings(false));\r\n    if (isEmpty) {\r\n      setIsError(true);\r\n      return null;\r\n    }\r\n    const params = {\r\n      from: startDate,\r\n      to: endDate,\r\n      fromHours: startHours,\r\n      toHours: endHours,\r\n      roomId: currentCard?.id,\r\n      userId,\r\n    };\r\n    const data = scheduleServices.prepareSchedule(params);\r\n    if (scheduleServices.checkScheduleData(startHours, endHours)) {\r\n      const res = await dispatch(makeReservationAction({ scheduleDays: data, hasPermissions: isRecruiter }));\r\n\r\n      const { isSchedulesIncorrect, isDataIncorrect, isAccessForbidden, isResponseError } = generateValidateConstants(res);\r\n\r\n      clearDate();\r\n\r\n      if (isDataIncorrect) {\r\n        showToastError('Ошибка бронирования', 'Попытка забронировать дату в прошлом');\r\n        return null;\r\n      }\r\n\r\n      if (isAccessForbidden) {\r\n        return null;\r\n      }\r\n\r\n      if (!isDataIncorrect && isSchedulesIncorrect && isResponseError) {\r\n        validateScheduleNotifications(res.payload.schedules, locationNumber, roomId);\r\n      } else {\r\n        showToast({\r\n          title: 'Стол забронирован',\r\n          description: `Вы успешно забронировали место `,\r\n          iconName: 'success',\r\n          type: 'success',\r\n        });\r\n      }\r\n\r\n      return res;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (endDate && startDate && endHours && startHours) setIsError(false);\r\n  }, [endDate, startDate, endHours, startHours]);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth < SCHEDULES.visibleFooterWidth) setIsFooterVisible(false);\r\n  }, [windowWidth]);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth <= SCHEDULES.visibleFooterWidth || windowWidth > TABLET_MEDIA_BREAKPOINT) {\r\n      setMonthQuantity(DESKTOP_DATE_PICKER_AMOUNTS);\r\n    } else {\r\n      setMonthQuantity(TABLET_DATE_PICKER_AMOUNTS);\r\n    }\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <div className={cn('reservation__data-picker', { 'reservation__data-picker--active': showReservationData })}>\r\n      <div className=\"reservation__data-picker-group\">\r\n        <div className=\"reservation__data-picker-title\">\r\n          <p>Забронировать место</p>\r\n        </div>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={onChange}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          minDate={CURRENT_DATE}\r\n          locale=\"ru\"\r\n          monthsShown={monthQuantity}\r\n          selectsRange\r\n          showYearDropdown\r\n          yearDropdownItemNumber={NUMBER_OF_YEARS}\r\n          dateFormat=\"d MMMM\"\r\n          dateFormatCalendar=\"LLLL\"\r\n          scrollableYearDropdown\r\n          onYearChange={clearDate}\r\n          inline\r\n        />\r\n        <div className={cn('line-tablet', { 'res-active': isFooterVisible })} />\r\n        <ReservationDatePickerFooter\r\n          endDate={endDate}\r\n          setEndDate={setEndDate}\r\n          endHours={endHours}\r\n          setEndHours={setEndHours}\r\n          setStartDate={setStartDate}\r\n          startDate={startDate}\r\n          startHours={startHours}\r\n          setStartHours={setStartHours}\r\n          isFooterVisible={isFooterVisible}\r\n          isError={isError}\r\n        />\r\n\r\n        {isEditor && <div className=\"line\" />}\r\n\r\n        {isEditor && (\r\n          <>\r\n            <p className=\"time__title\">Сотрудник</p>\r\n            <SearchInput\r\n              className={cn('calendar__time-group', { 'calendar__time-group--searching': !isInputValueEmpty })}\r\n              iconName={isInputValueEmpty ? 'loupe' : 'close'}\r\n              placeholder=\"Выбрать сотрудника\"\r\n              value={debouncedSearchValue}\r\n              setValue={setDebouncedSearchValue}\r\n              setModalActive={setIsUserModalActive}\r\n              setUsers={setUsers}\r\n            >\r\n              {isUserModalActive && (\r\n                <SearchModal\r\n                  users={users}\r\n                  close={setIsUserModalActive}\r\n                  setValue={setDebouncedSearchValue}\r\n                  selectUser={setSelectedUser}\r\n                  currentUserId={currentUserId}\r\n                />\r\n              )}\r\n            </SearchInput>\r\n          </>\r\n        )}\r\n\r\n        <DateValidation date={isEmptyDate} hours={isEmptyHours} isError={isError} />\r\n\r\n        <Button className=\"ctrl-button--color-blue reservation__btn\" type=\"submit\" onClick={makeSchedule}>\r\n          Забронировать\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservationDatePicker.propTypes = {\r\n  showReservationData: PropTypes.bool,\r\n};\r\n","/* eslint-disable no-plusplus */\r\nexport default {\r\n  calculateIntervalBookings(booking, userId) {\r\n    const isMyReservation = booking.user.id === userId;\r\n    const firstHour = new Date(booking.from).getHours() - 1;\r\n    const lastHour = new Date(booking.to).getHours();\r\n    const intervalHours = 18;\r\n    const intervalBookings = [];\r\n    let initialHour = 5;\r\n\r\n    for (let i = 0; i < intervalHours; i++) {\r\n      initialHour += 1;\r\n      if (initialHour > firstHour && initialHour <= lastHour) {\r\n        intervalBookings.push({\r\n          name: booking.user.firstName,\r\n          surname: booking.user.lastName,\r\n          hour: initialHour,\r\n          img: booking.user.pictureUrl,\r\n          backgroundColor: isMyReservation ? '' : '#e27d60',\r\n        });\r\n      } else {\r\n        intervalBookings.push('');\r\n      }\r\n    }\r\n    return intervalBookings;\r\n  },\r\n\r\n  calculatePosition(positionNumber, backgroundColor) {\r\n    const heightCell = 39;\r\n    if (backgroundColor) {\r\n      return {\r\n        position: 'absolute',\r\n        top: positionNumber * heightCell,\r\n        width: '100%',\r\n        backgroundColor,\r\n      };\r\n    }\r\n    return {\r\n      position: 'absolute',\r\n      top: positionNumber * heightCell,\r\n      width: '100%',\r\n    };\r\n  },\r\n};\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport calculateService from './detailedScheduleService';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport paginationService from 'services/paginationService/paginationService';\r\nimport detailedScheduleServices from 'services/detailedSchedule/detailedScheduleServices';\r\nimport { getCurrentCard } from 'services/schedule/getCurrentCard';\r\nimport { showToastError } from 'shared/components/Toast/utils/helpers';\r\nimport { getCurrentLocationId } from 'services/schedule/getCurrentLocationId';\r\nimport { getUserId } from 'store/auth/selectors';\r\nimport { getLocations } from 'store/location';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { getCards } from 'store/cards';\r\nimport { format, formatISO } from 'date-fns';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport setHours from 'date-fns/setHours';\r\n\r\nimport './detailedSchedule.scss';\r\nimport './responsive.scss';\r\n\r\nconst SCHEDULE_COUNT = 24;\r\nconst START_HOURS = 6;\r\nconst END_HOURS = 23;\r\n\r\nexport const DetailedSchedule = () => {\r\n  const [detailedSchedule, setDetailedSchedule] = useState([]);\r\n\r\n  const { locations, cards, currentDate, userId } = useSelector((state) => ({\r\n    locations: getLocations(state),\r\n    cards: getCards(state),\r\n    currentDate: getCurrentDate(state),\r\n    userId: getUserId(state),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n\r\n  const time = scheduleService.generateHours();\r\n  const parentLocationId = getCurrentLocationId(locations, roomId);\r\n  const currentCard = getCurrentCard(cards?.rows, parentLocationId, locationNumber);\r\n\r\n  const bookings = useMemo(\r\n    () => detailedSchedule?.rows?.map((booking) => calculateService.calculateIntervalBookings(booking, userId)),\r\n    [detailedSchedule?.rows]\r\n  );\r\n\r\n  const fetchDetailedSchedule = async () => {\r\n    try {\r\n      if (currentCard) {\r\n        const params = paginationService.getParamsForPageRequest(\r\n          SCHEDULE_COUNT,\r\n          {\r\n            locationIds: [currentCard?.id],\r\n            dateFrom: formatISO(setHours(currentDate, START_HOURS)),\r\n            dateTo: formatISO(setHours(currentDate, END_HOURS)),\r\n          },\r\n          ''\r\n        );\r\n\r\n        const res = await detailedScheduleServices.getDetailedSchedule(params);\r\n        setDetailedSchedule(res);\r\n      }\r\n    } catch {\r\n      showToastError('Ошибка загрузки', 'Перезагрузите страницу');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDetailedSchedule();\r\n  }, [currentCard?.id, dispatch, currentDate]);\r\n\r\n  return (\r\n    <div className=\"detailed-schedule\">\r\n      <div className=\"detailed-schedule__time\">\r\n        {time.map((hour, ind) => (\r\n          <div key={ind} className=\"detailed-schedule__hour\">\r\n            {format(hour, 'HH:mm')}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"detailed-schedule__bookings\">\r\n        {bookings?.map((el) =>\r\n          el.map((booking, ind) =>\r\n            booking !== '' ? (\r\n              <div key={ind} className=\"detailed-schedule__user\" style={calculateService.calculatePosition(ind, booking.backgroundColor)}>\r\n                <img className=\"detailed-schedule__user-icon\" src={booking.img} alt=\"user\" />\r\n                <div className=\"detailed-schedule__user-name\">\r\n                  {booking.surname} {booking.name}\r\n                </div>\r\n              </div>\r\n            ) : null\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { format } from 'shared/utils/utils';\r\nimport { useSelector } from 'react-redux';\r\nimport cn from 'classnames';\r\nimport { getSelectedDate } from 'store/schedule/selectors';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\n\r\nexport const Days = React.forwardRef(({ arrWeek }, ref) => {\r\n  const selectedDate = useSelector(getSelectedDate);\r\n  const [dayIndex, setDayIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const activeDate = arrWeek.find((day) => scheduleService.checkDates(day, selectedDate));\r\n\r\n    const selectedDayIndex = arrWeek.indexOf(activeDate);\r\n    setDayIndex(selectedDayIndex);\r\n\r\n    if (selectedDayIndex === -1) {\r\n      setDayIndex(null);\r\n    }\r\n\r\n    return () => {\r\n      setDayIndex(null);\r\n    };\r\n  }, [selectedDate]);\r\n\r\n  return arrWeek.map((day, idx) => (\r\n    <div\r\n      key={format(day, 'dd')}\r\n      className={cn('schedule-weeks__header-day', { 'schedule-weeks__header-day--active': idx === dayIndex })}\r\n      ref={ref}\r\n    >\r\n      <div className=\"schedule-weeks__header-day-wrapper\">\r\n        <div className=\"schedule-weeks__header-day-name\">{format(day, 'EEEEEE')}</div>\r\n        <span className=\"schedule-weeks__header-day-data\">{format(day, 'dd')}</span>\r\n        <span className=\"schedule-weeks__header-day-month\">{format(day, 'LLL')}</span>\r\n      </div>\r\n    </div>\r\n  ));\r\n});\r\n\r\nDays.propTypes = {\r\n  arrWeek: PropTypes.array,\r\n};\r\n","const arrLines = Array.from(Array(17).keys());\r\n\r\nexport const TableLines = () => (\r\n  <>\r\n    {arrLines.map((line) => (\r\n      <div key={line} className=\"schedule-weeks__booking-line\" />\r\n    ))}\r\n  </>\r\n);\r\n","import { useMemo, useRef } from 'react';\r\nimport UserReservation from '../UserReservation';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { getUserId } from 'store/auth/selectors';\r\nimport { isSameDay, parseISO } from 'date-fns';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ScheduleBookingColumn({ day, dayId, showCardTime, bookings }) {\r\n  const userId = useSelector(getUserId);\r\n  const styles = useRef([]);\r\n\r\n  const columnBookings = useMemo(() => {\r\n    const selectedWeekBookings = bookings?.filter((booking) => isSameDay(day, parseISO(booking.from)));\r\n\r\n    const schedulePositions = scheduleService.calculateSchedulePosition(selectedWeekBookings, 40);\r\n\r\n    if (schedulePositions?.arr?.length > 0) {\r\n      styles.current = schedulePositions?.arr?.reduce((acc, cur, idx) => {\r\n        if (cur.userID === userId) {\r\n          return Object.assign(acc, {\r\n            [idx]: {\r\n              marginTop: cur?.top,\r\n              height: cur?.height,\r\n            },\r\n          });\r\n        }\r\n        return Object.assign(acc, {\r\n          [idx]: {\r\n            marginTop: cur?.top,\r\n            height: cur?.height,\r\n          },\r\n        });\r\n      }, {});\r\n    }\r\n    return selectedWeekBookings;\r\n  }, [bookings]);\r\n  return (\r\n    <div className=\"schedule-weeks__booking-column\">\r\n      {columnBookings?.length > 0 &&\r\n        columnBookings.map((schedule, idx) => (\r\n          <UserReservation\r\n            checkBoxNumber={styles.current[idx]?.height / 40}\r\n            style={styles.current[idx]}\r\n            showCardTime={showCardTime}\r\n            schedule={schedule}\r\n            columnId={idx}\r\n            dayId={dayId}\r\n            key={`${idx}-${dayId}`}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nScheduleBookingColumn.propTypes = {\r\n  bookings: PropTypes.array,\r\n  day: PropTypes.object,\r\n  showCardTime: PropTypes.func,\r\n  dayId: PropTypes.string,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { getSelectedTime } from 'store/schedule/selectors';\r\nimport { format } from 'date-fns';\r\nimport { useSelector } from 'react-redux';\r\nimport cn from 'classnames';\r\n\r\nexport const CalendarTime = () => {\r\n  const calendarTime = scheduleService.generateHours();\r\n  const selectedTime = useSelector(getSelectedTime);\r\n  const [activeTimes, setActiveTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTime !== null) {\r\n      const selectedTimeIndex = selectedTime.reduce((acc, cur) => {\r\n        const res = calendarTime?.findIndex((time) => scheduleService.checkTimes(time, cur));\r\n        if (res !== -1) {\r\n          acc.push(res);\r\n        }\r\n        return acc;\r\n      }, []);\r\n      setActiveTimes(selectedTimeIndex);\r\n    } else {\r\n      setActiveTimes(null);\r\n    }\r\n\r\n    return () => {\r\n      setActiveTimes(null);\r\n    };\r\n  }, [selectedTime]);\r\n\r\n  return (\r\n    <div className=\"schedule-weeks__place-time\">\r\n      {calendarTime?.map((date, idx) => (\r\n        <div\r\n          key={date.id}\r\n          className={cn('schedule-weeks__place-hour', { 'schedule-weeks__header-day--active': activeTimes?.includes(idx) })}\r\n        >\r\n          {format(date, 'H:mm')}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback, useEffect } from 'react';\r\nimport { Days } from '../Days';\r\nimport { TableLines } from '../TableLines';\r\nimport ScheduleBookingColumn from '../ScheduleBookingColumn';\r\nimport { CalendarTime } from 'modules/Location/components';\r\nimport { getCurrentCard } from 'services/schedule/getCurrentCard';\r\nimport { getCurrentLocationId } from 'services/schedule/getCurrentLocationId';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { loadReservations } from 'store/schedule/actions';\r\nimport { getCurrentDate, getListOfAllReservations, getListOfReservations } from 'store/schedule/selectors';\r\nimport { getCards } from 'store/cards';\r\nimport { getLocations } from 'store/location';\r\nimport { getProfile } from 'store/profile/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ScheduleWeeks = ({ showReservationData, arrWeek }) => {\r\n  const { currentDate, allReservationsList, listOfReservations, cards, locations, profile } = useSelector((state) => ({\r\n    currentDate: getCurrentDate(state),\r\n    allReservationsList: getListOfAllReservations(state),\r\n    listOfReservations: getListOfReservations(state),\r\n    cards: getCards(state),\r\n    locations: getLocations(state),\r\n    profile: getProfile(state),\r\n  }));\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n\r\n  const parentLocationId = getCurrentLocationId(locations, roomId);\r\n  const currentCard = getCurrentCard(cards?.rows, parentLocationId, locationNumber);\r\n  const dispatch = useDispatch();\r\n\r\n  const isDateLoad = currentDate && currentCard;\r\n\r\n  const fetchAllReservations = useCallback(async () => {\r\n    await dispatch(loadReservations(scheduleService.createParams(currentCard?.id, currentDate)));\r\n  }, [currentDate, currentCard?.id, dispatch, listOfReservations, profile]);\r\n\r\n  useEffect(() => {\r\n    if (isDateLoad) fetchAllReservations();\r\n  }, [fetchAllReservations, isDateLoad]);\r\n\r\n  return (\r\n    <div className={cn('schedule-weeks', { 'schedule-weeks--none': showReservationData })}>\r\n      <div className=\"schedule-weeks__place\">\r\n        <div className=\"schedule-weeks__place-name\">М{locationNumber}</div>\r\n        <CalendarTime />\r\n      </div>\r\n      <div className=\"schedule-weeks__content\">\r\n        <div className=\"schedule-weeks__header\">\r\n          <Days arrWeek={arrWeek} />\r\n        </div>\r\n        <div className=\"schedule-weeks__booking\">\r\n          <div className=\"schedule-weeks__booking-wrapper-line\">\r\n            <TableLines />\r\n          </div>\r\n          <div className=\"schedule-weeks__booking-wrapper-column\">\r\n            {arrWeek.map((el, idx) => (\r\n              <>\r\n                <ScheduleBookingColumn key={el.id} day={arrWeek[idx]} bookings={allReservationsList} dayId={idx} />\r\n              </>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nScheduleWeeks.propTypes = {\r\n  arrWeek: PropTypes.array,\r\n  showReservationData: PropTypes.bool,\r\n};\r\n","import { startOfMonth, isAfter, isBefore, endOfMonth } from 'date-fns';\r\n\r\nexport const style = (day, date) => (\r\n    isBefore(day, startOfMonth(date)) || isAfter(day, endOfMonth(date), { weekStartsOn: 1 }) ? {color: '#CFD2D3'} : {color: '#3C3C3B'}\r\n)","import { useMemo } from 'react';\r\nimport { style } from '../Schedule/components/ScheduleMonth/utils';\r\nimport { ScheduleMonthBooked } from 'modules/Schedule/components/ScheduleMonthBooked';\r\nimport { format } from 'shared/utils/utils';\r\nimport { useLocationId } from 'shared/hooks';\r\nimport { CALENDAR_MODES, ROUTES, SESSION_STORAGE_KEYS } from 'shared/constants';\r\nimport { setCurrentDate } from 'store/schedule';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isSameDay, parseISO } from 'date-fns';\r\nimport { generatePath, useHistory } from 'react-router';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ScheduleDay({ ind, day, scheduleMonth }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const locationId = useLocationId();\r\n  const match = useRouteMatch();\r\n  const date = useSelector(getCurrentDate);\r\n  const dayBooking = useMemo(() => {\r\n    if (!day || !scheduleMonth?.rows.length) return [];\r\n    return scheduleMonth?.rows.filter((booking) => isSameDay(day, parseISO(booking.from)));\r\n  }, [day, scheduleMonth]);\r\n\r\n  const onTouch = () => {\r\n    if (dayBooking.length) {\r\n      dispatch(setCurrentDate(parseISO(dayBooking[0].from)));\r\n      sessionStorage.setItem(SESSION_STORAGE_KEYS.sessionDate, dayBooking[0].from);\r\n      history.push(generatePath(ROUTES.calendar, { id: locationId, number: match.params.number, mode: CALENDAR_MODES.details }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-month__day\" onTouchStart={onTouch}>\r\n      {ind < 7 ? <div className=\"schedule-month__day-week\">{format(day, 'EEEEEE')}</div> : null}\r\n      <span className=\"schedule-month__data\" style={style(day, date)}>\r\n        {format(day, 'd')}\r\n      </span>\r\n      <span className=\"schedule-month__current-month\" style={style(day, date)}>\r\n        {format(day, 'LLL')}\r\n      </span>\r\n      <ScheduleMonthBooked bookings={dayBooking} />\r\n    </div>\r\n  );\r\n}\r\n\r\nScheduleDay.propTypes = {\r\n  ind: PropTypes.number,\r\n  day: PropTypes.object,\r\n  scheduleMonth: PropTypes.object,\r\n};\r\n","import { useEffect, useMemo } from 'react';\r\nimport ScheduleDay from 'modules/ScheduleMonth/ScheduleDay';\r\nimport paginationService from 'services/paginationService/paginationService';\r\nimport { getCurrentLocationId } from 'services/schedule/getCurrentLocationId';\r\nimport { getCurrentCard } from 'services/schedule/getCurrentCard';\r\nimport { getLocations } from 'store/location';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { getUserId } from 'store/auth/selectors';\r\nimport { loadScheduleMonthThunk } from 'store/scheduleMonth/actions';\r\nimport { getScheduleMonth } from 'store/scheduleMonth';\r\nimport { getCards } from 'store/cards';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startOfMonth, startOfWeek, eachDayOfInterval, addDays, formatISO } from 'date-fns';\r\nimport { useParams } from 'react-router';\r\n\r\nimport './scheduleMonth.scss';\r\nimport './responsive.scss';\r\n\r\nexport const ScheduleMonth = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { cards, locations, userId, currentDate, scheduleMonth } = useSelector((state) => ({\r\n    cards: getCards(state),\r\n    locations: getLocations(state),\r\n    userId: getUserId(state),\r\n    currentDate: getCurrentDate(state),\r\n    scheduleMonth: getScheduleMonth(state),\r\n  }));\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n\r\n  const parentLocationId = getCurrentLocationId(locations, roomId);\r\n  const currentCard = getCurrentCard(cards?.rows, parentLocationId, locationNumber);\r\n\r\n  const week = useMemo(() => {\r\n    const startWeek = startOfWeek(startOfMonth(currentDate), { weekStartsOn: 1 });\r\n    const endWeek = addDays(startOfWeek(startOfMonth(currentDate), { weekStartsOn: 1 }), 41);\r\n    return { start: startWeek, end: endWeek };\r\n  }, [currentDate]);\r\n\r\n  const arrDays = useMemo(\r\n    () =>\r\n      eachDayOfInterval({\r\n        start: week.start,\r\n        end: week.end,\r\n      }),\r\n    [week]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentCard?.id) {\r\n      dispatch(\r\n        loadScheduleMonthThunk(\r\n          paginationService.getParamsForPageRequest(100, {\r\n            locationIds: [currentCard?.id],\r\n            dateFrom: formatISO(week.start),\r\n            dateTo: formatISO(week.end),\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }, [currentCard?.id, dispatch, userId, week]);\r\n\r\n  return (\r\n    <div className=\"schedule-month\">\r\n      {arrDays.map((day, ind) => (\r\n        <ScheduleDay key={day} ind={ind} day={day} scheduleMonth={scheduleMonth} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { DetailedSchedule } from '../DetailedSchedule';\r\nimport { ScheduleHeader, ScheduleYear } from './components';\r\nimport { ScheduleWeeks } from 'modules/Schedule/components/ScheduleWeeks';\r\nimport { ScheduleMonth } from 'modules/Schedule/components/ScheduleMonth';\r\nimport { Button } from 'shared/components';\r\nimport { CALENDAR_MODES } from 'shared/constants';\r\nimport { months } from 'shared/constants/namesOfMonthsAndDays';\r\nimport { useParams, Switch, Route } from 'react-router';\r\nimport { setScheduleWeeks } from 'store/schedule';\r\nimport { getCurrentDate, getListOfReservations } from 'store/schedule/selectors';\r\nimport { getListOfErrorBookings } from 'store/scheduleYear/selectors';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { scheduleYearActions } from 'store/scheduleYear';\r\nimport { useEffect } from 'react';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './schedule.scss';\r\n\r\nexport const Schedule = ({ isScheduleActive }) => {\r\n  const match = useRouteMatch();\r\n  const date = useSelector(getCurrentDate);\r\n  const dispatch = useDispatch();\r\n\r\n  const arrWeek = eachDayOfInterval({\r\n    start: startOfWeek(date, { weekStartsOn: 1 }),\r\n    end: endOfWeek(date, { weekStartsOn: 1 }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(setScheduleWeeks(arrWeek));\r\n  }, [arrWeek, dispatch]);\r\n  const mode = useRouteMatch(match.path);\r\n\r\n  const isWeek = mode?.params.mode === CALENDAR_MODES.week;\r\n  const isMonth = mode?.params.mode === CALENDAR_MODES.month;\r\n  const isYear = mode?.params.mode === CALENDAR_MODES.year;\r\n  const isDetailed = mode?.params.mode === CALENDAR_MODES.details;\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n  const isListOfErrorBookings = useSelector(getListOfErrorBookings);\r\n\r\n  const listOfReservations = useSelector(getListOfReservations) || [];\r\n  const startDayOfReservation = new Date(listOfReservations[0]?.from).getDate() || '';\r\n  const endDayOfReservation = new Date(listOfReservations[listOfReservations.length - 1]?.from).getDate() || '';\r\n  const startMonthOfReservation = months[new Date(listOfReservations[0]?.from).getMonth()] || '';\r\n  const endMonthOfReservation = months[new Date(listOfReservations[listOfReservations.length - 1]?.from).getMonth()] || '';\r\n\r\n  const undoDeletion = () => {\r\n    dispatch(scheduleYearActions.setListOfErrorBookings(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule\">\r\n      <div className={cn('schedule__reservation', { 'schedule__reservation--desktop': isScheduleActive })}>\r\n        <ScheduleHeader />\r\n        {isListOfErrorBookings && (\r\n          <div className=\"schedule__reservation__info info-schedule\">\r\n            <p>{`Информация о статусе бронировании места М${locationNumber} в кабинете ${roomId}:`}&nbsp;</p>\r\n            <p className=\"info-schedule--addition\">{`период с ${startDayOfReservation} ${startMonthOfReservation} по ${endDayOfReservation} ${endMonthOfReservation}`}</p>\r\n            <Button className=\"info-schedule__btn\" onClick={undoDeletion}>\r\n              Отменить выделение\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <Switch>\r\n          <Route>\r\n            {isWeek && <ScheduleWeeks arrWeek={arrWeek} showReservationData={isScheduleActive} />}\r\n            {isMonth && <ScheduleMonth />}\r\n            {isYear && <ScheduleYear />}\r\n            {isDetailed && <DetailedSchedule />}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSchedule.propTypes = {\r\n  isScheduleActive: PropTypes.bool,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsScheduleActive } from 'store/schedule/selectors';\r\nimport ReservationDatePicker from 'modules/ReservationDatePicker';\r\nimport { Schedule } from '../../index';\r\n\r\nexport default function SchedulePage() {\r\n  const isScheduleActive = useSelector(getIsScheduleActive);\r\n  return (\r\n    <div className=\"reservation\">\r\n      <ReservationDatePicker showReservationData={isScheduleActive} />\r\n      <Schedule isScheduleActive={isScheduleActive} />\r\n    </div>\r\n  );\r\n}\r\n","import { ROUTES } from 'shared/constants';\r\nimport { cardsActions } from 'store/cards';\r\nimport { generatePath, useHistory, useParams } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ScheduleDashboardFoundLocations = ({ locations, id, setDropdownActive }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { mode } = useParams();\r\n\r\n  return (\r\n    <div className=\"search-filter__content\">\r\n      {locations?.map((el) => (\r\n        <button\r\n          key={el.id}\r\n          className=\"search-filter__content-btn\"\r\n          onClick={() => {\r\n            dispatch(cardsActions.setCurrentCard(el));\r\n            history.push(generatePath(ROUTES.calendar, { id, number: el.name, mode }));\r\n            setDropdownActive(false);\r\n          }}\r\n        >\r\n          <span className=\"search-filter__room\">{id}</span>\r\n          <span className=\"search-filter__place\">/ М{el.name}</span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nScheduleDashboardFoundLocations.propTypes = {\r\n  locations: PropTypes.array,\r\n  id: PropTypes.string,\r\n  setDropdownActive: PropTypes.func,\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ScheduleButton = ({ text, url }) => (\r\n  <NavLink\r\n    to={url}\r\n    exact\r\n    className=\"schedule-dashboard-date-btn schedule-dashboard__select-time-btn\"\r\n    activeClassName=\"schedule-dashboard-date-btn--blue\"\r\n  >\r\n    {text}\r\n  </NavLink>\r\n);\r\n\r\nScheduleButton.propTypes = {\r\n  text: PropTypes.string,\r\n  url: PropTypes.string,\r\n};\r\n","import { ScheduleButton } from '../ScheduleButton';\r\nimport Calendar from 'shared/components/Calendar/Calendar';\r\nimport { CALENDAR_MODES, ROUTES, SESSION_STORAGE_KEYS } from 'shared/constants';\r\nimport { setCurrentDate } from 'store/schedule';\r\nimport { useDispatch } from 'react-redux';\r\nimport { generatePath, useParams } from 'react-router';\r\nimport { formatISO } from 'date-fns';\r\n\r\nexport default function NavigationButtons() {\r\n  const dispatch = useDispatch();\r\n  const { id: roomNumber, number: locationNumber } = useParams();\r\n\r\n  const todayClickHandler = () => {\r\n    sessionStorage.setItem(SESSION_STORAGE_KEYS.sessionDate, formatISO(new Date()));\r\n    dispatch(setCurrentDate(new Date()));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"schedule-dashboard__box\">\r\n        <div className=\"schedule-dashboard__date\">\r\n          <button\r\n            className=\"schedule-dashboard-date-btn schedule-dashboard__date-btn schedule-dashboard__date-btn-margin\"\r\n            onClick={todayClickHandler}\r\n          >\r\n            Сегодня\r\n          </button>\r\n\r\n          <Calendar />\r\n        </div>\r\n        <div className=\"schedule-dashboard__select-time\">\r\n          <ScheduleButton\r\n            text=\"Неделя\"\r\n            url={generatePath(ROUTES.calendar, { id: roomNumber, number: locationNumber, mode: CALENDAR_MODES.week })}\r\n          />\r\n          <ScheduleButton\r\n            text=\"Месяц\"\r\n            url={generatePath(ROUTES.calendar, { id: roomNumber, number: locationNumber, mode: CALENDAR_MODES.month })}\r\n          />\r\n          <ScheduleButton\r\n            text=\"Год\"\r\n            url={generatePath(ROUTES.calendar, { id: roomNumber, number: locationNumber, mode: CALENDAR_MODES.year })}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { DeleteScheduleButtons, NavigationButtons, StaticButtons } from '../index';\r\nimport { useWindowSize } from 'shared/hooks/useWindowsSize';\r\nimport { getIsScheduleSlotActive } from 'store/schedule/selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst activePlusSize = 1200;\r\n\r\nexport default function HeaderFacade() {\r\n  const isScheduleSlotActive = useSelector(getIsScheduleSlotActive);\r\n  const { width: windowWidth } = useWindowSize();\r\n\r\n  const isShowPlusButton = windowWidth < activePlusSize;\r\n\r\n  return (\r\n    <>\r\n      {isScheduleSlotActive ? (\r\n        <>\r\n          {isShowPlusButton && <StaticButtons />}\r\n          <DeleteScheduleButtons />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <StaticButtons />\r\n          <NavigationButtons />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { generateValidateConstants } from 'modules/ReservationDatePicker/utils/generate-validate-constants';\r\nimport { showToast } from 'shared/components';\r\nimport { deleteReservations } from 'store/schedule/actions';\r\n\r\nexport async function deleteSchedule(scheduleCount, schedule, dispatch) {\r\n  const data = {\r\n    ids: [schedule?.id],\r\n  };\r\n\r\n  const res = await dispatch(deleteReservations(data));\r\n\r\n  const isMiddle = scheduleCount === 2;\r\n  const { isAccessForbidden, isDataIncorrect } = generateValidateConstants(res);\r\n\r\n  if (isMiddle || isAccessForbidden || isDataIncorrect) return null;\r\n\r\n  showToast({\r\n    title: 'Бронирование удалено',\r\n    description: `Вы успешно удалили бронирование`,\r\n    iconName: 'success',\r\n    type: 'success',\r\n  });\r\n\r\n  return null;\r\n}\r\n","import { generateValidateConstants } from 'modules/ReservationDatePicker/utils/generate-validate-constants';\r\nimport { validateScheduleNotifications } from 'shared/utils/validate-schedule-notifications';\r\nimport { showToast } from 'shared/components';\r\nimport { makeReservationAction } from 'store/schedule/actions';\r\n\r\nexport async function fetchSchedule(data, dispatch, hasPermissions) {\r\n  const res = await dispatch(makeReservationAction({ scheduleDays: data, hasPermissions }));\r\n\r\n  const { isSchedulesIncorrect, isDataIncorrect, isAccessForbidden, isResponseError } = generateValidateConstants(res);\r\n\r\n  if (isDataIncorrect || isAccessForbidden) return null;\r\n  if (!isDataIncorrect && isSchedulesIncorrect && isResponseError) validateScheduleNotifications(res.payload.schedules);\r\n  else {\r\n    showToast({\r\n      title: 'Бронирование изменено',\r\n      description: `Вы успешно изменили бронирование`,\r\n      iconName: 'success',\r\n      type: 'success',\r\n    });\r\n  }\r\n\r\n  return res;\r\n}\r\n","import { deleteSchedule } from './deleteSchedule';\r\nimport { fetchSchedule } from './fetchSchedule';\r\nimport scheduleService from 'services/schedule/scheduleService';\r\nimport { setShowAvatar } from 'store/schedule';\r\nimport { addHours } from 'date-fns';\r\n\r\nconst HOURS_BEFORE_END = 2;\r\nconst CORRECT_HOURS = 1;\r\n\r\nexport async function editSchedule(schedule, checkboxes, dispatch, hasPermissions = false) {\r\n  const scheduleDuration = scheduleService.splitHours(schedule.from, schedule.to);\r\n  const delIndex = scheduleService.setScheduledIndex(checkboxes);\r\n\r\n  if (scheduleDuration.length - 1 === delIndex.length) return deleteSchedule(undefined, schedule, dispatch);\r\n\r\n  const isScheduleEnd = delIndex[delIndex.length - 1] === scheduleDuration.length - HOURS_BEFORE_END;\r\n  const isSeparateMiddle = delIndex[0] > 0 && delIndex[delIndex.length - 1] < scheduleDuration.length - HOURS_BEFORE_END;\r\n\r\n  const startSeparate = scheduleDuration[delIndex[0]];\r\n  const endSeparate = addHours(scheduleDuration[delIndex[delIndex.length - 1]], CORRECT_HOURS);\r\n\r\n  if (isScheduleEnd) {\r\n    scheduleService.deleteScheduleEnd(scheduleDuration, delIndex);\r\n    scheduleService.deleteEndCheckboxes(checkboxes, delIndex);\r\n  } else {\r\n    scheduleService.deleteScheduleStart(scheduleDuration, delIndex);\r\n    scheduleService.deleteStartCheckboxes(checkboxes, delIndex);\r\n  }\r\n\r\n  if (isSeparateMiddle) {\r\n    const slicedSchedule = scheduleService.splitIntoTwoSchedule(\r\n      schedule.from,\r\n      schedule.to,\r\n      scheduleDuration,\r\n      startSeparate,\r\n      endSeparate,\r\n      schedule?.table,\r\n      schedule?.user.id\r\n    );\r\n\r\n    await deleteSchedule(slicedSchedule.length, schedule, dispatch);\r\n\r\n    dispatch(setShowAvatar(true));\r\n    return fetchSchedule(slicedSchedule, dispatch, hasPermissions);\r\n  }\r\n\r\n  const params = {\r\n    from: scheduleDuration[0],\r\n    to: scheduleDuration[scheduleDuration.length - 1],\r\n    fromHours: scheduleDuration[0],\r\n    toHours: scheduleDuration[scheduleDuration.length - 1],\r\n    roomId: schedule?.table.id,\r\n    scheduleId: schedule?.id,\r\n    userId: schedule?.user.id,\r\n  };\r\n\r\n  const data = scheduleService.prepareSchedule(params);\r\n\r\n  dispatch(setShowAvatar(true));\r\n  return fetchSchedule(data, dispatch, hasPermissions);\r\n}\r\n","import { useMemo, useState } from 'react';\r\nimport { editSchedule } from './utils/editSchedule';\r\nimport { deleteSchedule } from './utils/deleteSchedule';\r\nimport { useWindowSize } from 'shared/hooks/useWindowsSize';\r\nimport { ConfirmationModal } from 'shared/components';\r\nimport { FormModal } from 'shared/components/FormModal';\r\nimport { showToastError } from 'shared/components/Toast/utils/helpers';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { recruiterPermissions } from 'shared/constants/permissions';\r\nimport { setScheduleSlotActive, setSelectedDate, setSelectedTime } from 'store/schedule';\r\nimport { getCheckboxes, getSelectedSchedule } from 'store/schedule/selectors';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nconst mobileView = 427;\r\n\r\nexport default function DeleteScheduleButtons() {\r\n  const [isOpenConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { schedule, checkboxes, personPermissions } = useSelector((state) => ({\r\n    schedule: getSelectedSchedule(state),\r\n    checkboxes: getCheckboxes(state),\r\n    personPermissions: permissionsSelector(state),\r\n  }));\r\n  const { width: windowWidth } = useWindowSize();\r\n\r\n  const isTimeSelected = useMemo(() => checkboxes.includes(true), [checkboxes]);\r\n  const isRecruiter = hasPermission(recruiterPermissions, personPermissions);\r\n\r\n  const scheduleCounter = isTimeSelected ? '1 слот' : '0 слотов';\r\n  const deleteText = windowWidth < mobileView ? 'Удалить' : 'Удалить бронь';\r\n  const cancelText = windowWidth < mobileView ? 'Отменить' : 'Отменить выделение';\r\n\r\n  const disableSelection = () => {\r\n    dispatch(setSelectedTime(null));\r\n    dispatch(setSelectedDate(null));\r\n    dispatch(setScheduleSlotActive(false));\r\n  };\r\n  const deleteScheduleHandle = () => {\r\n    if (checkboxes.length === 1) deleteSchedule(undefined, schedule, dispatch);\r\n    else editSchedule(schedule, checkboxes, dispatch, isRecruiter);\r\n\r\n    disableSelection();\r\n  };\r\n\r\n  const handleCloseConfirmationModal = () => setOpenConfirmationModal(false);\r\n  const handleOpenConfirmationModal = () => {\r\n    if (!isTimeSelected) {\r\n      showToastError('Не выбрано ни одного слота', 'Выберите слоты времени, чтобы удалить бронь');\r\n      return null;\r\n    }\r\n    setOpenConfirmationModal(true);\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"delete-schedule\">\r\n        <div className=\"delete-schedule__text-group\">\r\n          <p className=\"delete-schedule__title\">\r\n            Выбранно слотов времени: <p className=\"delete-schedule__count\"> {scheduleCounter}</p>\r\n          </p>\r\n        </div>\r\n        <div className=\"delete-schedule__button-group\">\r\n          <button className=\"delete-schedule__button delete-schedule__button--primary\" onClick={disableSelection}>\r\n            {cancelText}\r\n          </button>\r\n          <button className=\"delete-schedule__button delete-schedule__button--danger\" onClick={handleOpenConfirmationModal}>\r\n            {deleteText}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {isOpenConfirmationModal && (\r\n        <FormModal title={<span>Удаление брони </span>} onClose={handleCloseConfirmationModal} isDeleteForm>\r\n          <div className=\"delete-card\">\r\n            <ConfirmationModal\r\n              onClose={handleCloseConfirmationModal}\r\n              action={deleteScheduleHandle}\r\n              title=\"Вы действительно хотите удалить бронь выделенных слотов?\"\r\n            />\r\n          </div>\r\n        </FormModal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { createContext, useContext } from 'react';\r\n\r\nexport const FilterContext = createContext({\r\n  checkedRooms: [],\r\n  checkedPlaces: [],\r\n  locations: [],\r\n  setCheckedRooms: () => null,\r\n  setCheckedPlaces: () => null,\r\n});\r\n\r\nexport const useFilterContext = () => useContext(FilterContext);\r\n","import { useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loadCardsThunk, loadCardItemsTypeThunk } from 'store/cards/actions';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport * as Selectors from 'store/cards/selectors';\r\nimport { getLocations } from 'store/location';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AllWorkPlaces = ({ checkedRooms, checkedPlaces, setCheckedPlaces, searchText }) => {\r\n  const dispatch = useDispatch();\r\n  const { locations } = useSelector((state) => ({\r\n    locations: getLocations(state),\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCardsThunk(getParamsForLoadCards())).finally(() => dispatch(loadCardItemsTypeThunk()));\r\n  }, [dispatch, locations]);\r\n\r\n  const cards = useSelector(Selectors.getCards);\r\n\r\n  const places = useMemo(() => {\r\n    if (locations && cards.rows.length !== 0) {\r\n      const result = [];\r\n      for (const el of locations) {\r\n        result.push(\r\n          ...cards.rows\r\n            .filter((elem) => elem.parentLocationId === el.id)\r\n            .map((it) => ({\r\n              location: el.name,\r\n              place: it.name,\r\n            }))\r\n        );\r\n      }\r\n      return result;\r\n    }\r\n    return [];\r\n  }, [cards, locations]);\r\n\r\n  const selectPlaces = (place) => {\r\n    checkedPlaces.some((el) => place.location === el.location && place.place === el.place)\r\n      ? setCheckedPlaces(checkedPlaces.filter((el) => el.location !== place.location || el.place !== place.place))\r\n      : setCheckedPlaces([...checkedPlaces, place]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-filter__content\">\r\n      {places\r\n        .filter((elem) => elem.place.includes(searchText))\r\n        .filter((item) => (checkedRooms.length <= 0 ? places : checkedRooms.includes(item.location)))\r\n        .map((el, ind) => (\r\n          <label key={ind} className=\"checkbox-inner\">\r\n            <input\r\n              className=\"checkbox-inner__field\"\r\n              type=\"checkbox\"\r\n              onChange={() => selectPlaces(el)}\r\n              checked={checkedPlaces.some((elem) => elem.location === el.location && elem.place === el.place)}\r\n            />\r\n            <span className=\"custom-checkbox checkbox-inner__custom-checkbox\">\r\n              {el.location} / {el.place}\r\n            </span>\r\n          </label>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nAllWorkPlaces.propTypes = {\r\n  checkedRooms: PropTypes.array,\r\n  checkedPlaces: PropTypes.array,\r\n  setCheckedPlaces: PropTypes.func,\r\n  searchText: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { Icon } from '../Icon';\r\nimport './back.scss';\r\n\r\nexport const Back = ({ text, className, openFilters }) => (\r\n  <div className={cn('back', className)}>\r\n    <button className=\"back__btn\" onClick={openFilters}>\r\n      <Icon className=\"back__btn-icon\" name=\"back\" size={12} />\r\n      {text}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nBack.propTypes = {\r\n  text: PropTypes.string,\r\n  className: PropTypes.string,\r\n  openFilters: PropTypes.func,\r\n};\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { useFilterContext } from '../Filter/FilterContext';\r\nimport { getCards } from 'store/cards';\r\nimport { getCurrentLocation } from 'store/location';\r\nimport { loadCardsThunk } from 'store/cards/actions';\r\nimport { useLocationId } from 'shared/hooks';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport { ScheduleDashboardFoundLocations } from 'modules/Schedule/components/ScheduleDashboardFoundLocations';\r\nimport { AllWorkPlaces } from 'modules/Reservation/components/AllWorkPlaces';\r\nimport { Back } from '../Back';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport './searchFilter.scss';\r\n\r\nexport const SearchFilter = React.forwardRef(({ customClass, isDropdownActive, setDropdownActive, openFilters, showSearchFilter }, ref) => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const roomId = useParams()?.id;\r\n  const cards = useSelector(getCards);\r\n  const dispatch = useDispatch();\r\n  const locationId = useLocationId();\r\n  const currentLocation = useSelector(getCurrentLocation(locationId));\r\n  const { checkedPlaces, checkedRooms, setCheckedPlaces } = useFilterContext();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      dispatch(loadCardsThunk(getParamsForLoadCards(currentLocation?.id)));\r\n    }\r\n  }, [currentLocation?.id, dispatch, currentLocation, roomId]);\r\n\r\n  const filteredLocations = useMemo(() => cards.rows.filter((el) => el.name.includes(searchText)), [cards.rows, searchText]);\r\n\r\n  return (\r\n    <div className={cn('search-filter', customClass, { 'search-filter--active': isDropdownActive })} ref={ref}>\r\n      <Back text=\"Рабочее место\" openFilters={showSearchFilter} />\r\n      <div className=\"search-filter__wrapper\">\r\n        <div className=\"search-filter__field-box\">\r\n          <input\r\n            className=\"search-filter__field\"\r\n            type=\"text\"\r\n            placeholder=\"Поиск места\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"search-filter__location\">\r\n          {roomId ? (\r\n            <ScheduleDashboardFoundLocations\r\n              locations={filteredLocations}\r\n              id={roomId}\r\n              setDropdownActive={setDropdownActive}\r\n              searchText={searchText}\r\n            />\r\n          ) : (\r\n            <AllWorkPlaces\r\n              checkedRooms={checkedRooms}\r\n              checkedPlaces={checkedPlaces}\r\n              setCheckedPlaces={setCheckedPlaces}\r\n              searchText={searchText}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <button className=\"action-btn location-filter__action-btn\" onClick={openFilters}>\r\n        Указать\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nSearchFilter.propTypes = {\r\n  customClass: PropTypes.string,\r\n  isDropdownActive: PropTypes.bool,\r\n  setDropdownActive: PropTypes.func,\r\n  openFilters: PropTypes.func,\r\n  showSearchFilter: PropTypes.func,\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport Icon from 'shared/components/Icon/Icon';\r\nimport { SearchFilter } from 'shared/components/SearchFilter';\r\nimport { useClickAway } from 'shared/hooks';\r\nimport { useParams } from 'react-router';\r\n\r\nconst PlaceChanger = React.forwardRef(() => {\r\n  const [isDropdownActive, setIsDropDownActive] = useState(false);\r\n  const modalRef = useRef(null);\r\n  const excludeRef = useRef(null);\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n\r\n  const toggleDropDown = () => {\r\n    setIsDropDownActive((prev) => !prev);\r\n  };\r\n\r\n  useClickAway({\r\n    ref: modalRef,\r\n    cb: () => setIsDropDownActive(false),\r\n    exclude: excludeRef,\r\n  });\r\n\r\n  return (\r\n    <div className=\"schedule-dashboard__place\">\r\n      <button className=\"schedule-dashboard__place-btn\" onClick={toggleDropDown} ref={excludeRef}>\r\n        <Icon className=\"schedule-dashboard__place-btn-icon\" name=\"pin\" />\r\n        <span className=\"schedule-dashboard__current-location\">\r\n          <span className=\"schedule-dashboard__current-room\">{roomId}</span>\r\n          <span className=\"schedule-dashboard__current-place\">/ M{locationNumber}</span>\r\n        </span>\r\n        <Icon className=\"schedule-dashboard__place-btn-arrow\" name=\"arrow-down\" size={16} />\r\n      </button>\r\n      <SearchFilter\r\n        isDropdownActive={isDropdownActive}\r\n        setDropdownActive={setIsDropDownActive}\r\n        ref={modalRef}\r\n        customClass=\"schedule-dashboard__filter\"\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PlaceChanger;\r\n","import { PlaceChanger } from '../NavigationButtons/components';\r\nimport { Btn } from 'shared/components/Btn';\r\nimport Icon from 'shared/components/Icon/Icon';\r\nimport { setScheduleActive } from 'store/schedule';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function StaticButtons() {\r\n  const dispatch = useDispatch();\r\n  const activateSchedule = () => dispatch(setScheduleActive(true));\r\n  return (\r\n    <>\r\n      <PlaceChanger />\r\n\r\n      <Btn\r\n        className=\"schedule-dashboard__plus\"\r\n        onClick={activateSchedule}\r\n        icon={<Icon className=\"schedule-dashboard__plus-icon\" name=\"plus\" size={36} />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { NavigationFacade } from './components';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport cn from 'classnames';\r\n\r\nexport const ScheduleHeader = () => {\r\n  const history = useHistory();\r\n  const { id: roomId } = useParams();\r\n\r\n  const handleBackButton = () => {\r\n    history.push(`/locations/${roomId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule-dashboard\">\r\n      <div className=\"schedule-dashboard__wrapper\">\r\n        <button\r\n          className={cn(\r\n            'schedule-dashboard-date-btn schedule-dashboard__date-btn schedule-dashboard__date-btn-margin schedule-dashboard__back-btn'\r\n          )}\r\n          onClick={handleBackButton}\r\n        >\r\n          Назад\r\n        </button>\r\n\r\n        <NavigationFacade />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'shared/utils/utils';\r\nimport { useMemo } from 'react';\r\nimport { getScheduleYear } from 'store/scheduleYear';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isSameDay, parseISO, isSameMonth } from 'date-fns';\r\nimport cn from 'classnames';\r\nimport { useHistory } from 'react-router';\r\nimport Tippy from '@tippyjs/react';\r\nimport { setSelectedDate } from 'store/detailedSchedule/index';\r\nimport { ScheduleMonthUsers } from 'modules/Schedule/components/ScheduleMonthUsers';\r\nimport { style } from '../Schedule/components/ScheduleMonth/utils';\r\nimport { useLocationId } from 'shared/hooks';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { getUserId } from '../../store/auth/selectors';\r\nimport { getListOfErrorBookings } from 'store/scheduleYear/selectors';\r\nimport uniqBy from 'lodash.uniqby';\r\n\r\nexport const ScheduleYearDayOfMonth = ({ day, month, listOfReservations }) => {\r\n  const scheduleYear = useSelector(getScheduleYear);\r\n  const isListOfErrorBookings = useSelector(getListOfErrorBookings);\r\n  const userId = useSelector(getUserId);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const locationId = useLocationId();\r\n  const match = useRouteMatch();\r\n\r\n  const isSameDayAndMonth = day && month ? isSameMonth(day, new Date(month)) : [];\r\n\r\n  const dayStatusCode = {\r\n    success: 0,\r\n    weekend: 3,\r\n    techWork: 5,\r\n  };\r\n  const dayBooking = useMemo(() => {\r\n    if (!day || !scheduleYear?.rows.length) return [];\r\n\r\n    return isSameDayAndMonth && scheduleYear?.rows.filter((booking) => isSameDay(day, parseISO(booking.from)));\r\n  }, [day, isSameDayAndMonth, scheduleYear?.rows]);\r\n\r\n  const showInactive = useMemo(() => {\r\n    if (!day || !scheduleYear?.rows.length) return false;\r\n\r\n    return (\r\n      isSameDayAndMonth && scheduleYear?.rows.filter((booking) => isSameDay(day, new Date(booking.from)) && booking.type === 1).length > 0\r\n    );\r\n  }, [day, isSameDayAndMonth, scheduleYear?.rows]);\r\n  const showBooking = dayBooking.length > 0;\r\n\r\n  const dayNewBooking = useMemo(() => {\r\n    if (!day || !listOfReservations?.length) return [];\r\n    return listOfReservations?.filter((booking) => isSameDay(day, new Date(booking.from)) && booking.statusCode === dayStatusCode.success);\r\n  }, [day, listOfReservations]);\r\n\r\n  const showSuccesBooking = dayNewBooking.length > 0;\r\n\r\n  const dayErrorBooking = useMemo(() => {\r\n    if (!day || !listOfReservations?.length) return [];\r\n    return listOfReservations?.filter(\r\n      (booking) =>\r\n        isSameDay(day, new Date(booking.from)) && booking.statusCode > dayStatusCode.success && booking.statusCode !== dayStatusCode.weekend\r\n    );\r\n  }, [day, listOfReservations]);\r\n\r\n  const showError = dayErrorBooking.length > 0;\r\n\r\n  const inactiveLocationBooking = useMemo(() => {\r\n    if (!day || !listOfReservations?.length) return [];\r\n    return listOfReservations?.filter(\r\n      (booking) =>\r\n        isSameDay(day, new Date(booking.from)) &&\r\n        booking.statusCode === dayStatusCode.techWork &&\r\n        booking.statusCode !== dayStatusCode.weekend\r\n    );\r\n  }, [day, listOfReservations]);\r\n\r\n  const showInactiveLocations = inactiveLocationBooking.length > 0;\r\n\r\n  const onTouch = () => {\r\n    if (dayBooking.length) {\r\n      dispatch(setSelectedDate(parseISO(dayBooking[0].from)));\r\n      history.push(`/locations/${locationId}/${match.params.number}/calendar/details`);\r\n    }\r\n  };\r\n  const filterBooking = useMemo(() => uniqBy(dayBooking, 'user.id'), [dayBooking]);\r\n\r\n  const firstDayBooking = useMemo(() => {\r\n    if (day && listOfReservations?.length)\r\n      return isSameDay(day, new Date(listOfReservations.find((i) => i.statusCode !== dayStatusCode.weekend).from));\r\n    return null;\r\n  }, [day, listOfReservations]);\r\n\r\n  const lastDayBooking = useMemo(() => {\r\n    if (day && listOfReservations?.length) return isSameDay(day, new Date(listOfReservations[listOfReservations.length - 1]?.from));\r\n    return null;\r\n  }, [day, listOfReservations]);\r\n\r\n  return (\r\n    <Tippy\r\n      interactive\r\n      placement=\"bottom-start\"\r\n      offset={[0, 1]}\r\n      interactiveDebounce={10}\r\n      popperOptions={{\r\n        strategy: 'absolute',\r\n        modifiers: [\r\n          {\r\n            name: 'flip',\r\n            options: {\r\n              fallbackPlacements: ['top', 'left'],\r\n            },\r\n          },\r\n        ],\r\n      }}\r\n      content={\r\n        dayBooking.length && (\r\n          <div className=\"users schedule-month__users\">\r\n            {filterBooking.map((booking) => (\r\n              <ScheduleMonthUsers\r\n                key={booking.id}\r\n                booking={booking}\r\n                bookings={dayBooking}\r\n                isMonth\r\n                isMyReservation={booking.user.id === userId}\r\n              />\r\n            ))}\r\n          </div>\r\n        )\r\n      }\r\n    >\r\n      <div className=\"month__day\" style={showBooking ? { color: '#00A1DF' } : style(day, month)} onTouchStart={onTouch}>\r\n        <div\r\n          className={cn(\r\n            'month__day-wrapper',\r\n            { 'month__day-wrapper--first': firstDayBooking },\r\n            { 'month__day-wrapper--last': lastDayBooking },\r\n            { 'month__day-wrapper--active': showBooking },\r\n            { 'month__day-wrapper--inact': showInactive },\r\n            { 'month__day-wrapper--error': showError && isListOfErrorBookings && isSameDayAndMonth },\r\n            { 'month__day-wrapper--success': showSuccesBooking && isListOfErrorBookings && isSameDayAndMonth },\r\n            { 'month__day-wrapper--inactive': showInactiveLocations && isListOfErrorBookings && isSameDayAndMonth }\r\n          )}\r\n        >\r\n          {format(day, 'd')}\r\n        </div>\r\n      </div>\r\n    </Tippy>\r\n  );\r\n};\r\n\r\nScheduleYearDayOfMonth.propTypes = {\r\n  day: PropTypes.object,\r\n  month: PropTypes.object,\r\n  listOfReservations: PropTypes.any,\r\n};\r\n","import { Fragment, useMemo } from 'react';\r\nimport addDays from 'date-fns/addDays';\r\nimport { startOfMonth, startOfWeek, eachDayOfInterval } from 'date-fns';\r\nimport { format } from 'shared/utils/utils';\r\nimport { getListOfReservations } from 'store/schedule/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ScheduleYearDayOfMonth } from 'modules/ScheduleYearDayOfMonth';\r\n\r\nexport const ScheduleYearMonth = ({ month }) => {\r\n  const ADD_DAYS = 41;\r\n  const DAYS_IN_WEEK = 7;\r\n  const startEveryMonth = startOfWeek(startOfMonth(month), { weekStartsOn: 1 });\r\n  const listOfReservations = useSelector(getListOfReservations);\r\n\r\n  const everyMonth = useMemo(\r\n    () =>\r\n      eachDayOfInterval({\r\n        start: startEveryMonth,\r\n        end: addDays(startEveryMonth, ADD_DAYS),\r\n      }),\r\n    [startEveryMonth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"month schedule-year__month\">\r\n      {everyMonth.map((day, ind) => (\r\n        <Fragment key={ind}>{ind < DAYS_IN_WEEK ? <div className=\"month__day-week\">{format(day, 'EEEEEE')}</div> : null}</Fragment>\r\n      ))}\r\n      {everyMonth.map((day, ind) => (\r\n        <ScheduleYearDayOfMonth key={ind} day={day} month={month} listOfReservations={listOfReservations} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nScheduleYearMonth.propTypes = {\r\n  month: PropTypes.object,\r\n};\r\n\r\n","import { useEffect, useMemo } from 'react';\r\nimport { ScheduleYearMonth } from '../ScheduleYearMonth';\r\nimport paginationService from 'services/paginationService/paginationService';\r\nimport { getCurrentLocationId } from 'services/schedule/getCurrentLocationId';\r\nimport { getCurrentCard } from 'services/schedule/getCurrentCard';\r\nimport { format } from 'shared/utils/utils';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { getLocations } from 'store/location';\r\nimport { loadScheduleYearThunk } from 'store/scheduleYear/actions';\r\nimport { getCards } from 'store/cards';\r\nimport { scheduleYearActions } from 'store/scheduleYear';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startOfYear, endOfYear, eachMonthOfInterval, formatISO } from 'date-fns/esm';\r\nimport { useParams } from 'react-router';\r\n\r\nimport './scheduleYear.scss';\r\nimport './responsive.scss';\r\n\r\nexport const ScheduleYear = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { cards, locations, currentDate } = useSelector((state) => ({\r\n    cards: getCards(state),\r\n    locations: getLocations(state),\r\n    currentDate: getCurrentDate(state),\r\n  }));\r\n\r\n  const { number: locationNumber, id: roomId } = useParams();\r\n  useEffect(\r\n    () =>\r\n      function cleanup() {\r\n        dispatch(scheduleYearActions.setListOfErrorBookings(false));\r\n      },\r\n    [dispatch]\r\n  );\r\n  const parentLocationId = getCurrentLocationId(locations, roomId);\r\n  const currentCard = getCurrentCard(cards?.rows, parentLocationId, locationNumber);\r\n  const year = useMemo(() => {\r\n    const startYear = startOfYear(currentDate);\r\n    const endYear = endOfYear(currentDate);\r\n    return { start: startYear, end: endYear };\r\n  }, [currentDate]);\r\n\r\n  const months = useMemo(\r\n    () =>\r\n      eachMonthOfInterval({\r\n        start: year.start,\r\n        end: year.end,\r\n      }),\r\n    [year]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentCard?.id) {\r\n      dispatch(\r\n        loadScheduleYearThunk(\r\n          paginationService.getParamsForPageRequest(500, {\r\n            locationIds: [currentCard?.id],\r\n            dateFrom: formatISO(year.start),\r\n            dateTo: formatISO(year.end),\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }, [currentCard?.id, dispatch, year]);\r\n\r\n  return (\r\n    <div className=\"schedule-year\">\r\n      <div className=\"schedule-year__wrapper\">\r\n        {months.map((month, ind) => (\r\n          <div key={ind} className=\"schedule-year__box\">\r\n            <p className=\"schedule-year__name\">\r\n              {format(month, 'LLLL')}\r\n              <span className=\"schedule-year__date\">{format(month, 'y')}</span>\r\n            </p>\r\n            <ScheduleYearMonth month={month} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport UserProfile from 'modules/UserProfile';\r\nimport { SearchInput, SearchModal } from 'modules/Schedule/components';\r\nimport { ConfirmationModal, Icon, Logo, UserBar } from 'shared/components';\r\nimport { FormModal } from 'shared/components/FormModal';\r\nimport { FormSearch } from 'shared/components/FormSearch';\r\nimport { Btn } from 'shared/components/Btn';\r\nimport { ROUTES } from 'shared/constants';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { showToastError } from 'shared/components/Toast/utils/helpers';\r\nimport { guestPermissions } from 'shared/constants/permissions';\r\nimport { getProfile } from 'store/profile/selectors';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { getIsOpenSearch, setIsOpenSearch } from 'store/location';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { generatePath, matchPath, useHistory } from 'react-router';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = React.forwardRef(({ isBurgerOpen, setIsBurgerOpen }, propagationNode) => {\r\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\r\n  const [isTooltipOpen, setIsTooltipOpen] = useState(false);\r\n  const [debouncedSearchValue, setDebouncedSearchValue] = useState('');\r\n  const [isUserModalActive, setIsUserModalActive] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n  const searchInputRef = useRef(null);\r\n  const headerRef = useRef(null);\r\n\r\n  const isUserSearched = useRef(null);\r\n\r\n  const history = useHistory();\r\n  const searchMatch = matchPath(history.location.pathname, { path: ROUTES.search });\r\n\r\n  const isInputValueEmpty = debouncedSearchValue === '';\r\n\r\n  const { profile, personPermissions, isOpenSearch } = useSelector((state) => ({\r\n    profile: getProfile(state),\r\n    personPermissions: permissionsSelector(state),\r\n    isOpenSearch: getIsOpenSearch(state),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isCanViewMyReservations = hasPermission(guestPermissions, personPermissions);\r\n  const isEditProfile = profile?.hasUpdatedProfile === true;\r\n\r\n  const tooltipTitle = (\r\n    <div className=\"modal-tooltip\">\r\n      <p>!</p> <span>Важно</span>\r\n    </div>\r\n  );\r\n\r\n  const profileCloseHandler = useCallback(() => {\r\n    if (profile?.hasUpdatedProfile) setIsProfileOpen(false);\r\n    else {\r\n      showToastError('Ошибка редактирования', 'Введите фамилию и имя на русском языке, чтобы продолжить');\r\n    }\r\n  }, [profile?.hasUpdatedProfile]);\r\n\r\n  const tooltipCloseHandler = useCallback(() => {\r\n    setIsTooltipOpen(false);\r\n    setIsProfileOpen(true);\r\n  }, []);\r\n\r\n  const closeProfile = () => setIsProfileOpen(false);\r\n\r\n  const searchUser = (path, value) => history.push(generatePath(path, { fullName: value }));\r\n\r\n  useEffect(() => {\r\n    if (!isEditProfile && profile) setIsTooltipOpen(true);\r\n  }, [isEditProfile, profile?.hasUpdatedProfile]);\r\n\r\n  useEffect(() => {\r\n    if (selectedUser) {\r\n      searchUser(ROUTES.search, debouncedSearchValue);\r\n      isUserSearched.current = true;\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  useEffect(() => {\r\n    if (!searchMatch) {\r\n      setDebouncedSearchValue('');\r\n      isUserSearched.current = null;\r\n    }\r\n  }, [searchMatch]);\r\n\r\n  useEffect(() => {\r\n    if (!debouncedSearchValue) isUserSearched.current = null;\r\n  }, [debouncedSearchValue]);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\" ref={headerRef}>\r\n        <div className={cn('header__container', { 'header__container--center': isOpenSearch })}>\r\n          <div className={cn('header__tools', { 'header__tools--none': isOpenSearch })}>\r\n            <div className=\"header__tools-wrapper\">\r\n              <Btn\r\n                className=\"btn-round header__burger\"\r\n                icon={<Icon className=\"btn-round__icon\" name={isBurgerOpen ? 'burger-close' : 'burger'} size={32} />}\r\n                onClick={() => setIsBurgerOpen((prevState) => !prevState)}\r\n                ref={propagationNode}\r\n              />\r\n              <Btn\r\n                className=\"btn-round header__search\"\r\n                icon={<Icon className=\"btn-round__icon\" name=\"loupe\" size={32} />}\r\n                onClick={() => dispatch(setIsOpenSearch(true))}\r\n              />\r\n            </div>\r\n          </div>\r\n          <FormSearch isOpen={isOpenSearch} className=\"header__search\">\r\n            <Btn\r\n              className={cn('btn-round form-search__btn', { 'form-search__btn--is-active': isOpenSearch })}\r\n              icon={<Icon className=\"btn-round__icon\" name=\"arrow-back\" size={32} />}\r\n              onClick={() => dispatch(setIsOpenSearch(false))}\r\n              type=\"button\"\r\n            />\r\n            <div className=\"form-search__wrapper\">\r\n              <SearchInput\r\n                className={cn(\r\n                  'header-search calendar__time-group',\r\n                  { 'calendar__time-group--searching': !isInputValueEmpty },\r\n                  { 'calendar__time-group--searched': isUserSearched.current }\r\n                )}\r\n                iconName=\"loupe\"\r\n                placeholder=\"Найти бронь или сотрудника\"\r\n                ref={searchInputRef}\r\n                value={debouncedSearchValue}\r\n                setValue={setDebouncedSearchValue}\r\n                setModalActive={setIsUserModalActive}\r\n                setUsers={setUsers}\r\n                searchUser={searchUser}\r\n                isUserSearched={isUserSearched}\r\n                isGlobalSearch\r\n                isHeaderContains\r\n              >\r\n                {isUserModalActive && (\r\n                  <SearchModal\r\n                    users={users}\r\n                    close={setIsUserModalActive}\r\n                    setValue={setDebouncedSearchValue}\r\n                    selectUser={setSelectedUser}\r\n                    modalWidth={searchInputRef.current.clientWidth}\r\n                  />\r\n                )}\r\n              </SearchInput>\r\n            </div>\r\n          </FormSearch>\r\n          <div className={cn('header__logo', { 'header__logo--none': isOpenSearch })}>\r\n            <Logo />\r\n          </div>\r\n          <UserBar\r\n            profile={profile}\r\n            className=\"header__user-bar\"\r\n            isOpenSearch={isOpenSearch}\r\n            isCanViewMyReservations={isCanViewMyReservations}\r\n            setProfileOpen={setIsProfileOpen}\r\n          />\r\n        </div>\r\n      </header>\r\n\r\n      {isTooltipOpen && (\r\n        <FormModal onClose={tooltipCloseHandler} className=\"form-modal__tooltip\">\r\n          <>\r\n            <ConfirmationModal title={tooltipTitle} />\r\n            <span className=\"modal-text\">Для корректной работы системы Бронирования необходимо изменить ваши данные на русский язык.</span>\r\n          </>\r\n        </FormModal>\r\n      )}\r\n\r\n      {isProfileOpen && (\r\n        <FormModal onClose={profileCloseHandler} className=\"form-modal__profile\">\r\n          <UserProfile onClose={profileCloseHandler} closeProfile={closeProfile} />\r\n        </FormModal>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  setIsBurgerOpen: PropTypes.func,\r\n  isBurgerOpen: PropTypes.bool,\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfile } from 'store/profile/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { CancelHeader } from 'shared/components/CancelHeader';\r\nimport { getIsScheduleActive } from 'store/schedule/selectors';\r\nimport { getIsFilterActive } from 'store/users/selectors';\r\nimport { loadCardItemsTypeThunk } from 'store/cards/actions';\r\nimport { Header } from './Header';\r\nimport { Sidebar } from './Sidebar';\r\nimport { useWindowSize } from '../hooks/useWindowsSize';\r\n\r\nconst CANCEL_HEADER_VISIBLE_WIDTH = 992;\r\n\r\nexport default function Layout({ children }) {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [isBurgerOpen, setIsBurgerOpen] = useState(false);\r\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\r\n  const isScheduleActive = useSelector(getIsScheduleActive);\r\n  const isFilterActive = useSelector(getIsFilterActive);\r\n  const propagationNode = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const windowWidth = useWindowSize().width;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfile());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCardItemsTypeThunk());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    setIsBurgerOpen(isSidebarOpen);\r\n  }, [isSidebarOpen]);\r\n\r\n  useEffect(() => {\r\n    setIsSidebarOpen(isBurgerOpen);\r\n  }, [isBurgerOpen]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Sidebar isOpen={isSidebarOpen} setIsOpen={setIsSidebarOpen} exclude={propagationNode} />\r\n      <div className=\"content\">\r\n        {(isScheduleActive || isFilterActive) && windowWidth < CANCEL_HEADER_VISIBLE_WIDTH ? (\r\n          <CancelHeader>{isScheduleActive ? 'Дата отображения' : 'Фильтры'}</CancelHeader>\r\n        ) : (\r\n          <Header\r\n            setIsSidebarOpen={setIsSidebarOpen}\r\n            isBurgerOpen={isBurgerOpen}\r\n            setIsBurgerOpen={setIsBurgerOpen}\r\n            isSidebarOpen={isSidebarOpen}\r\n            ref={propagationNode}\r\n            isOpenSearch={isOpenSearch}\r\n            setIsOpenSearch={setIsOpenSearch}\r\n          />\r\n        )}\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { showToastError } from 'shared/components/Toast/utils/helpers';\r\nimport { CardAttributes } from 'shared/components/CardListItem/components/';\r\nimport reservationsServices from 'services/reservations/reservationsServices';\r\nimport cardsServices from 'services/cards/cardServices';\r\n\r\nexport const ReservationTools = ({ reservation }) => {\r\n  const [tools, setTools] = useState(null);\r\n  const [monitorInfo, setMonitorInfo] = useState([]);\r\n\r\n  const fetchTools = useCallback(async () => {\r\n    try {\r\n      const response = await reservationsServices.getLoadTools(reservation?.tableId);\r\n      setTools(response);\r\n    } catch (e) {\r\n      showToastError('Данные не корректны');\r\n    }\r\n  }, [reservation?.tableId]);\r\n\r\n  const loadMonitorInfo = useCallback(() => {\r\n    tools?.data.forEach((item) => {\r\n      if (item.inventoryCode) {\r\n        cardsServices.checkMonitor(item.inventoryCode).then((res) => {\r\n          const monitorIndex = monitorInfo.findIndex((monitor) => monitor.code === item.inventoryCode);\r\n          if (res.status === 'ok' && monitorIndex < 0) {\r\n            setMonitorInfo([...monitorInfo, res.data]);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [monitorInfo, tools?.data]);\r\n\r\n  useEffect(() => {\r\n    if (reservation?.id) {\r\n      fetchTools();\r\n    }\r\n  }, [fetchTools, reservation?.id]);\r\n\r\n  return <CardAttributes items={tools?.data} monitorInfo={monitorInfo} loadMonitorInfo={loadMonitorInfo} />;\r\n};\r\n\r\nReservationTools.propTypes = {\r\n  reservation: PropTypes.object,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { ReservationTools } from 'modules/Reservation/components/ReservationTools';\r\nimport { Icon } from 'shared/components';\r\nimport { CALENDAR_MODES, ROUTES, SESSION_STORAGE_KEYS } from 'shared/constants';\r\nimport { disableClick, format } from 'shared/utils/utils';\r\nimport { setCurrentDate } from 'store/schedule';\r\nimport { parseISO } from 'date-fns/esm';\r\nimport { generatePath, useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport './reservationCard.scss';\r\n\r\nexport function ReservationCard({ reservation, isEditMode, pickReservation, selectedRooms }) {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCardClick = (scheduleMode) => {\r\n    dispatch(setCurrentDate(parseISO(reservation.dateFrom)));\r\n    sessionStorage.setItem(SESSION_STORAGE_KEYS.sessionDate, reservation.dateFrom);\r\n    history.push(generatePath(ROUTES.calendar, { id: reservation.room, number: reservation.place, mode: scheduleMode }));\r\n  };\r\n\r\n  const selectCard = (e) => {\r\n    disableClick(e);\r\n\r\n    setIsSelected((select) => !select);\r\n    pickReservation((cards) => {\r\n      const reservationIndex = cards.findIndex((card) => card.bookingId === reservation.bookingId);\r\n      if (reservationIndex !== -1) {\r\n        cards.splice(reservationIndex, 1);\r\n        return [...cards];\r\n      }\r\n      return [...cards, reservation];\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditMode === false) setIsSelected(false);\r\n  }, [isEditMode]);\r\n\r\n  useEffect(() => {\r\n    const isRoomSelected = selectedRooms.find((room) => room.bookingId === reservation.bookingId);\r\n    if (isRoomSelected) setIsSelected(true);\r\n    else setIsSelected(false);\r\n  }, [reservation.bookingId, selectedRooms]);\r\n\r\n  return (\r\n    <div\r\n      key={reservation.room}\r\n      className=\"reservation-card\"\r\n      onClick={(e) => (isEditMode ? disableClick(e) : handleCardClick(CALENDAR_MODES.week))}\r\n      onTouchStart={(e) => (isEditMode ? disableClick(e) : handleCardClick(CALENDAR_MODES.details))}\r\n    >\r\n      <div className=\"reservation-card__preview\">\r\n        {isEditMode && (\r\n          <label className=\"round-checkbox reservation-card-checkbox__inner\" onClick={selectCard}>\r\n            <input className=\"round-checkbox__field\" type=\"checkbox\" />\r\n            <span className={cn('reservation-checkbox', { 'reservation-checkbox--active': isSelected })}>\r\n              <Icon className=\"reservation-checkbox__icon\" name=\"checked\" size={10} />\r\n            </span>\r\n          </label>\r\n        )}\r\n      </div>\r\n      <div className=\"reservation-card__content\">\r\n        <div className=\"info reservation-card__info\">\r\n          <div className=\"info__location\">\r\n            <span className=\"info__room\">{reservation.room}</span>\r\n            <span className=\"info__place\">/ М{reservation.place}</span>\r\n          </div>\r\n          <div className=\"info__date\">{format(parseISO(reservation.dateFrom), 'd LLL y')}</div>\r\n        </div>\r\n        <div className=\"info reservation-card__reservations\">\r\n          <div className=\"info__time\">\r\n            {format(parseISO(reservation.dateFrom), 'HH:mm')} - {format(parseISO(reservation.dateTo), 'HH:mm')}\r\n          </div>\r\n        </div>\r\n        <ReservationTools reservation={reservation} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nReservationCard.propTypes = {\r\n  reservation: PropTypes.object,\r\n  selectedRooms: PropTypes.array,\r\n  pickReservation: PropTypes.func,\r\n  isEditMode: PropTypes.bool,\r\n};\r\n","export const getMyReservations = (store) => store.reservations.allReservations.rows;\r\nexport const getSelectedDateFrom = (store) => store.reservations.selectedDateFrom;\r\nexport const getSelectedDateTo = (store) => store.reservations.selectedDateTo;\r\nexport const getSelectedTimeFrom = (store) => store.reservations.selectedTimeFrom;\r\nexport const getSelectedTimeTo = (store) => store.reservations.selectedTimeTo;","import PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport addDays from 'date-fns/addDays';\r\nimport { ReservationCard } from 'modules/Reservation/components/ReservationCard';\r\nimport { useSelector } from 'react-redux';\r\nimport { getSelectedDateFrom, getSelectedDateTo, getSelectedTimeFrom, getSelectedTimeTo } from 'store/reservations/selectors';\r\nimport { useMemo } from 'react';\r\nimport { isBefore, isAfter } from 'date-fns';\r\nimport './reservationRoom.scss';\r\n\r\nexport const ReservationRoom = ({\r\n  isEditMode,\r\n  pickReservation,\r\n  selectedReservations = [],\r\n  myBookings,\r\n  checkedRooms = [],\r\n  checkedPlaces = [],\r\n}) => {\r\n  const selectCurrentRoom = (roomTitle, reservations) => reservations.filter((card) => roomTitle === card.room.name);\r\n  const selectedDateFrom = useSelector(getSelectedDateFrom);\r\n  const selectedDateTo = useSelector(getSelectedDateTo);\r\n  const selectedTimeFrom = useSelector(getSelectedTimeFrom);\r\n  const selectedTimeTo = useSelector(getSelectedTimeTo);\r\n  const selectAll = (roomTitle, reservations) => {\r\n    const oldReservations = Array.from(new Set(selectedReservations));\r\n    const [bookingObject] = selectCurrentRoom(roomTitle, reservations);\r\n    const newReservations = Array.from(new Set(bookingObject.tables));\r\n    const diff = newReservations.filter((reservation) => !oldReservations.includes(reservation));\r\n    pickReservation((allReservations) => [...allReservations, ...diff]);\r\n  };\r\n\r\n  const myFilteredBookings = useMemo(() => {\r\n    const filtered = [];\r\n    if (checkedPlaces.length === 0) {\r\n      return myBookings;\r\n    }\r\n    for (const room of myBookings) {\r\n      for (const place of checkedPlaces) {\r\n        if (place.location === room.room.name && room.tables.some((el) => place.place === el.place)) {\r\n          filtered.push({\r\n            room: {\r\n              name: room.room.name,\r\n              id: room.room.id,\r\n            },\r\n            tables: room.tables.filter((item) => place.place === item.place),\r\n          });\r\n        } else {\r\n          filtered.push({\r\n            room: {\r\n              name: '',\r\n              id: '',\r\n            },\r\n            tables: [],\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return filtered.filter((elem) => elem.room.name !== '');\r\n  }, [checkedPlaces, myBookings]);\r\n\r\n  const filteredВookingsByDate = useMemo(() => {\r\n    const result = [];\r\n    if (myFilteredBookings) {\r\n      for (const booking of myFilteredBookings) {\r\n        if (selectedDateFrom !== null && selectedDateTo === null) {\r\n          result.push({\r\n            room: {\r\n              name: booking.room.name,\r\n              id: booking.room.id,\r\n            },\r\n            tables: booking.tables.filter((table) => isBefore(selectedDateFrom, new Date(table.dateFrom))),\r\n          });\r\n        } else if (selectedDateFrom !== null && selectedDateTo !== null) {\r\n          result.push({\r\n            room: {\r\n              name: booking.room.name,\r\n              id: booking.room.id,\r\n            },\r\n            tables: booking.tables.filter(\r\n              (table) => isBefore(selectedDateFrom, new Date(table.dateFrom)) && isAfter(addDays(selectedDateTo, 1), new Date(table.dateTo))\r\n            ),\r\n          });\r\n        } else {\r\n          return myFilteredBookings;\r\n        }\r\n      }\r\n    }\r\n    return result.filter((el) => el.tables.length !== 0);\r\n  }, [myFilteredBookings, selectedDateFrom, selectedDateTo]);\r\n\r\n  const filteredВookingsByTime = useMemo(() => {\r\n    const result = [];\r\n    if (filteredВookingsByDate) {\r\n      for (const booking of filteredВookingsByDate) {\r\n        if (selectedTimeFrom !== null && selectedTimeTo === null) {\r\n          result.push({\r\n            room: {\r\n              name: booking.room.name,\r\n              id: booking.room.id,\r\n            },\r\n            tables: booking.tables.filter((table) => selectedTimeFrom.getHours() < new Date(table.dateTo).getHours()),\r\n          });\r\n        } else if (selectedTimeFrom !== null && selectedTimeTo !== null) {\r\n          result.push({\r\n            room: {\r\n              name: booking.room.name,\r\n              id: booking.room.id,\r\n            },\r\n            tables: booking.tables.filter(\r\n              (table) =>\r\n                selectedTimeFrom.getHours() < new Date(table.dateTo).getHours() &&\r\n                selectedTimeTo.getHours() > new Date(table.dateFrom).getHours()\r\n            ),\r\n          });\r\n        } else {\r\n          return filteredВookingsByDate;\r\n        }\r\n      }\r\n    }\r\n    return result.filter((el) => el.tables.length !== 0);\r\n  }, [filteredВookingsByDate, selectedTimeFrom, selectedTimeTo]);\r\n\r\n  return (\r\n    <>\r\n      {filteredВookingsByTime\r\n        .filter((item) => (checkedRooms.length <= 0 ? myBookings : checkedRooms.includes(item.room.name)))\r\n        .map((el) => (\r\n          <div key={el.room.id} className=\"reservation-room rooms__box\">\r\n            <div className=\"reservation-room__title\">\r\n              <div className=\"main-title\">Комната {el.room.name}</div>\r\n              <button\r\n                className={cn('reservation-room__select-all', { 'reservation-room__select-all--active': isEditMode })}\r\n                onClick={function selectRoom() {\r\n                  selectAll(el.room.name, myBookings);\r\n                }}\r\n              >\r\n                Выбрать все\r\n              </button>\r\n            </div>\r\n            <div className=\"reservation-cards\">\r\n              {el.tables.map((table) => (\r\n                <ReservationCard\r\n                  key={table.bookingId}\r\n                  reservation={table}\r\n                  isEditMode={isEditMode}\r\n                  pickReservation={pickReservation}\r\n                  selectedRooms={selectedReservations}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nReservationRoom.propTypes = {\r\n  checkedRooms: PropTypes.array,\r\n  checkedPlaces: PropTypes.array,\r\n  isEditMode: PropTypes.bool,\r\n  pickReservation: PropTypes.func,\r\n  selectedReservations: PropTypes.array,\r\n  myBookings: PropTypes.array,\r\n};\r\n","import cn from 'classnames';\r\nimport { Icon } from 'shared/components/Icon';\r\nimport { useFilterContext } from 'shared/components/Filter/FilterContext';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function WorkplaceFilter({ showSearchFilter, excludeRef }) {\r\n  const { checkedPlaces, setCheckedPlaces } = useFilterContext();\r\n  const checkedCount = checkedPlaces.length;\r\n\r\n  const cleanSearchFilter = (e) => {\r\n    e.stopPropagation();\r\n    setCheckedPlaces([]);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"filter-box__name\">Рабочее место</div>\r\n      <div className={cn('filter', { 'filter--active': checkedCount > 0 })} onClick={showSearchFilter} ref={excludeRef}>\r\n        <div className=\"filter__text\">\r\n          {checkedCount === 1\r\n            ? `Выбрано ${checkedCount} рабочee место`\r\n            : checkedCount > 1\r\n            ? `Выбрано ${checkedCount} рабочих места`\r\n            : 'Выбрать рабочее место'}\r\n        </div>\r\n        {checkedCount > 0 ? (\r\n          <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={cleanSearchFilter} />\r\n        ) : (\r\n          <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nWorkplaceFilter.propTypes = {\r\n  showSearchFilter: PropTypes.func,\r\n  excludeRef: PropTypes.node,\r\n};\r\n","import cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { useClickAway } from 'shared/hooks';\r\nimport { useRef, useState } from 'react';\r\nimport { Icon } from 'shared/components';\r\nimport { Back } from 'shared/components/Back';\r\nimport './locationsFilter.scss';\r\n\r\nexport const LocationsFilter = ({ locations, checkedRooms, setCheckedRooms, openFilters }) => {\r\n  const [locationsFilter, setlocationsFilter] = useState(false);\r\n  const showLocationsFilter = () => setlocationsFilter(!locationsFilter);\r\n\r\n  const modalRef = useRef(null);\r\n  const excludeRef = useRef(null);\r\n\r\n  useClickAway({\r\n    ref: modalRef,\r\n    cb: () => setlocationsFilter(false),\r\n    exclude: excludeRef,\r\n  });\r\n\r\n  const selectRoom = (nameRoom) =>\r\n    checkedRooms.includes(nameRoom)\r\n      ? setCheckedRooms(checkedRooms.filter((el) => el !== nameRoom))\r\n      : setCheckedRooms([...checkedRooms, nameRoom]);\r\n\r\n  const cleanCheckboxs = (e) => {\r\n    e.stopPropagation();\r\n    setCheckedRooms([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-box my-reservation__filter-location\">\r\n      <div className=\"filter-box__name\">Кабинет</div>\r\n      <div className={cn('filter', { 'filter--active': checkedRooms.length > 0 })} onClick={showLocationsFilter} ref={excludeRef}>\r\n        <div className=\"filter__text\">\r\n          {checkedRooms.length <= 0 ? 'Выбрать кабинет' : checkedRooms.map((el, ind) => (ind === 0 ? <>{el}</> : <>&#44;&#32;{el}</>))}\r\n        </div>\r\n        {checkedRooms.length > 0 ? (\r\n          <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={cleanCheckboxs} />\r\n        ) : (\r\n          <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n        )}\r\n      </div>\r\n      <div className={cn('location-filter filter-box__location-filter', { 'location-filter--active': locationsFilter })} ref={modalRef}>\r\n        <Back text=\"Кабинет\" openFilters={showLocationsFilter} />\r\n        <div className=\"location-filter__wrapper\">\r\n          {locations.map((place) => (\r\n            <label key={place.id} className=\"checkbox-inner\">\r\n              <input\r\n                className=\"checkbox-inner__field\"\r\n                type=\"checkbox\"\r\n                onChange={() => selectRoom(place.name)}\r\n                checked={checkedRooms.includes(place.name)}\r\n              />\r\n              <span className=\"custom-checkbox checkbox-inner__custom-checkbox\">{place.name}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button className=\"action-btn location-filter__action-btn\" onClick={openFilters}>\r\n          Указать\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLocationsFilter.propTypes = {\r\n  checkedRooms: PropTypes.array,\r\n  locations: PropTypes.array,\r\n  setCheckedRooms: PropTypes.any,\r\n  openFilters: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { Icon } from 'shared/components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDateFrom } from 'store/reservations/index';\r\n\r\nexport const FilterDateFrom = React.forwardRef(({ value, onClick }, ref) => {\r\n  const dispatch = useDispatch();\r\n  const cleanDate = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(setDateFrom(null));\r\n  }\r\n\r\n  return (\r\n    <div className={cn('filter filter-box__filter', { 'filter--active': value !== '' })} onClick={onClick} ref={ref}>\r\n      <div className=\"filter__text\">{value === '' ? 'От' : value.replace(/[/]/g, '.')}</div>\r\n      {value === '' ? (\r\n        <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n      ) : (\r\n        <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={cleanDate} />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFilterDateFrom.propTypes = {\r\n  onClick: PropTypes.func,\r\n  value: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { Icon } from 'shared/components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDateTo } from 'store/reservations/index';\r\n\r\nexport const FilterDateTo = React.forwardRef(({ value, onClick }, ref) => {\r\n  const dispatch = useDispatch();\r\n  const cleanDate = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(setDateTo(null));\r\n  }\r\n\r\n  return (\r\n    <div className={cn('filter filter-box__filter', { 'filter--active': value !== '' })} onClick={onClick} ref={ref}>\r\n      <div className=\"filter__text\">{value === '' ? 'До' : value.replace(/[/]/g, '.')}</div>\r\n      {value === '' ? (\r\n        <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n      ) : (\r\n        <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={cleanDate} />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFilterDateTo.propTypes = {\r\n  onClick: PropTypes.func,\r\n  value: PropTypes.array,\r\n};\r\n","import DatePicker from 'react-datepicker';\r\nimport { FilterDateFrom } from '../FilterDateFrom';\r\nimport { FilterDateTo } from '../FilterDateTo';\r\nimport { Icon } from 'shared/components';\r\nimport { setDateFrom, setDateTo } from 'store/reservations/index';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSelectedDateFrom, getSelectedDateTo } from 'store/reservations/selectors';\r\n\r\nexport const FilterDate = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedDateFrom = useSelector(getSelectedDateFrom);\r\n  const selectedDateTo = useSelector(getSelectedDateTo);\r\n\r\n  return (\r\n    <div className=\"filter-box my-reservation__filter-data\">\r\n      <div className=\"filter-box__name\">Дата</div>\r\n      <div className=\"filter-box__period\">\r\n        <DatePicker\r\n          selected={selectedDateFrom}\r\n          onChange={(date) => dispatch(setDateFrom(date))}\r\n          showYearDropdown\r\n          dateFormatCalendar=\"LLLL\"\r\n          popperClassName=\"react-datepicker-popper--from\"\r\n          customInput={<FilterDateFrom />}\r\n        />\r\n        <Icon className=\"filter-box__period-icon\" name=\"arrow-right\" />\r\n        <DatePicker\r\n          selected={selectedDateTo}\r\n          onChange={(date) => dispatch(setDateTo(date))}\r\n          showYearDropdown\r\n          dateFormatCalendar=\"LLLL\"\r\n          popperClassName=\"react-datepicker-popper--to\"\r\n          customInput={<FilterDateTo />}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { Icon } from 'shared/components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTimeFrom } from 'store/reservations/index';\r\n\r\nexport const FilterTimeFrom = React.forwardRef(({ value, onClick }, ref) => {\r\n  const dispatch = useDispatch();\r\n  const cleanTime = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(setTimeFrom(null));\r\n  }\r\n\r\n  return (\r\n    <div className={cn('filter filter-box__filter', { 'filter--active': value !== '' })} onClick={onClick} ref={ref}>\r\n      <div className=\"filter__text\">{value === '' ? 'Время от' : value}</div>\r\n      {value === '' ? (\r\n        <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n      ) : (\r\n        <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={cleanTime} />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFilterTimeFrom.propTypes = {\r\n  onClick: PropTypes.func,\r\n  value: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { Icon } from 'shared/components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTimeTo } from 'store/reservations/index';\r\n\r\nexport const FilterTimeTo = React.forwardRef(({ value, onClick }, ref) => {\r\n  const dispatch = useDispatch();\r\n  const cleanTime = (e) => {\r\n    e.stopPropagation();\r\n    dispatch(setTimeTo(null));\r\n  }\r\n\r\n  return (\r\n    <div className={cn('filter filter-box__filter', { 'filter--active': value !== '' })} onClick={onClick} ref={ref}>\r\n      <div className=\"filter__text\">{value === '' ? 'Время до' : value}</div>\r\n      {value === '' ? (\r\n        <Icon className=\"filter__arrow\" name=\"range-arrow-down\" size={8} />\r\n      ) : (\r\n        <Icon className=\"filter__close\" name=\"time-close\" size={16} onClick={cleanTime} />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nFilterTimeTo.propTypes = {\r\n  onClick: PropTypes.func,\r\n  value: PropTypes.array,\r\n};\r\n","import DatePicker from 'react-datepicker';\r\nimport { FilterTimeFrom } from '../FilterTimeFrom/FilterTimeFrom';\r\nimport { FilterTimeTo } from '../FilterTimeTo/FilterTimeTo';\r\nimport { Icon } from 'shared/components';\r\nimport { setTimeFrom, setTimeTo } from 'store/reservations/index';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSelectedTimeFrom, getSelectedTimeTo } from 'store/reservations/selectors';\r\n\r\nexport const FilterTime = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedTimeFrom = useSelector(getSelectedTimeFrom);\r\n  const selectedTimeTo = useSelector(getSelectedTimeTo);\r\n\r\n  return (\r\n    <div className=\"filter-box my-reservation__filter-time\">\r\n      <div className=\"filter-box__name\">Время</div>\r\n      <div className=\"filter-box__period\">\r\n        <DatePicker\r\n          selected={selectedTimeFrom}\r\n          onChange={(time) => dispatch(setTimeFrom(time))}\r\n          showTimeSelect\r\n          showTimeSelectOnly\r\n          timeIntervals={60}\r\n          minTime={new Date().setHours(6, 0, 0, 0)}\r\n          maxTime={new Date().setHours(23, 0, 0, 0)}\r\n          dateFormat=\"H:mm\"\r\n          popperClassName=\"react-datepicker-popper--from\"\r\n          customInput={<FilterTimeFrom />}\r\n        />\r\n        <Icon className=\"filter-box__period-icon\" name=\"arrow-right\" />\r\n        <DatePicker\r\n          selected={selectedTimeTo}\r\n          onChange={(time) => dispatch(setTimeTo(time))}\r\n          showTimeSelect\r\n          showTimeSelectOnly\r\n          timeIntervals={60}\r\n          minTime={new Date().setHours(6, 0, 0, 0)}\r\n          maxTime={new Date().setHours(23, 0, 0, 0)}\r\n          dateFormat=\"H:mm\"\r\n          popperClassName=\"react-datepicker-popper--to\"\r\n          customInput={<FilterTimeTo />}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useRef, useState } from 'react';\r\nimport WorkplaceFilter from './components/WorkplaceFilter/WorkplaceFilter';\r\nimport { useFilterContext } from '../Filter/FilterContext';\r\nimport { LocationsFilter } from 'modules/Reservation/components/LocationsFilter';\r\nimport { SearchFilter } from 'shared/components/SearchFilter';\r\nimport { FilterDate } from 'modules/Reservation/components/FilterDate';\r\nimport { FilterTime } from 'modules/Reservation/components/FilterTime';\r\nimport { useClickAway } from 'shared/hooks';\r\nimport { Back } from '../Back';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nconst Filters = ({ isFiltersOpen, openFilters, isReservation }) => {\r\n  const [isSearchFilterActive, setIsSearchFilterActive] = useState(false);\r\n  const { checkedRooms, locations, setCheckedRooms } = useFilterContext();\r\n\r\n  const modalRef = useRef(null);\r\n  const excludeRef = useRef(null);\r\n\r\n  const showSearchFilter = () => setIsSearchFilterActive(!isSearchFilterActive);\r\n\r\n  useClickAway({\r\n    ref: modalRef,\r\n    cb: () => setIsSearchFilterActive(false),\r\n    exclude: excludeRef,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'my-reservation__filters',\r\n        { 'my-reservation__filters--disabled': !isFiltersOpen },\r\n        { 'my-reservation__filters--reservation': isReservation && !isFiltersOpen }\r\n      )}\r\n    >\r\n      <Back text=\"Фильтры\" openFilters={openFilters} />\r\n      <div className=\"my-reservation__wrapper\">\r\n        <FilterDate />\r\n        <FilterTime />\r\n        <LocationsFilter checkedRooms={checkedRooms} setCheckedRooms={setCheckedRooms} locations={locations} openFilters={openFilters} />\r\n        <div className=\"filter-box my-reservation__filter-place\">\r\n          <WorkplaceFilter showSearchFilter={showSearchFilter} excludeRef={excludeRef} />\r\n          <SearchFilter\r\n            ref={modalRef}\r\n            customClass=\"filter-box__search-filter\"\r\n            isDropdownActive={isSearchFilterActive}\r\n            openFilters={openFilters}\r\n            showSearchFilter={showSearchFilter}\r\n          />\r\n        </div>\r\n        <button className=\"action-btn my-reservation__btn-filter\" onClick={openFilters}>\r\n          Отфильтровать\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n\r\nFilters.propTypes = {\r\n  isFiltersOpen: PropTypes.bool,\r\n  isReservation: PropTypes.bool,\r\n  openFilters: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { Icon } from 'shared/components/Icon';\r\nimport propTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nconst FilterTitle = React.forwardRef(({ title, subTitle, isEditMode, changeEditMode, isSearchPage, openFilters }, ref) => (\r\n  <div ref={ref} className={cn('my-reservations__settings', { 'my-reservation__search-settings': isSearchPage })}>\r\n    <div className={cn('my-reservation__title-group', { 'my-reservation__search-title-group': isSearchPage })}>\r\n      <h2 className=\"my-reservation__main-title\">{title}</h2>\r\n      <span className=\"my-reservation__sub-title\">{subTitle}</span>\r\n    </div>\r\n    <div className=\"my-reservations__btns\">\r\n      <button\r\n        className={cn(\r\n          'edit-btn',\r\n          { 'edit-btn--active': isEditMode },\r\n          { 'filters-btn--active': isSearchPage && isEditMode },\r\n          { 'edit-btn--is-search': isSearchPage }\r\n        )}\r\n        onClick={changeEditMode}\r\n      >\r\n        {isSearchPage ? 'Фильтры' : isEditMode ? 'Отмена' : 'Редактировать'}\r\n      </button>\r\n      <button className={cn('filters-btn', { 'filters-btn--active': isEditMode })} onClick={openFilters}>\r\n        <Icon className=\"my-reservation__filtering-icon\" name=\"filter\" size={38} />\r\n      </button>\r\n    </div>\r\n  </div>\r\n));\r\n\r\nexport default FilterTitle;\r\n\r\nFilterTitle.propTypes = {\r\n  title: propTypes.string,\r\n  subTitle: propTypes.string,\r\n  isEditMode: propTypes.bool,\r\n  isSearchPage: propTypes.bool,\r\n  changeEditMode: propTypes.func,\r\n  openFilters: propTypes.func,\r\n};\r\n","export function getValidReservations(userReservations) {\r\n  if (userReservations) {\r\n    const result = {};\r\n    for (const reservation of userReservations) {\r\n      const { room } = reservation.table;\r\n      if (!result[room.name]) {\r\n        result[room.name] = {\r\n          room: {\r\n            name: reservation.table.room.name,\r\n            id: reservation.table.id,\r\n          },\r\n          tables: [\r\n            {\r\n              imageUrl: reservation.table.imageUrl,\r\n              room: reservation.table.room.name,\r\n              place: reservation.table.name,\r\n              dateFrom: reservation.from,\r\n              dateTo: reservation.to,\r\n              tableId: reservation.table.id,\r\n              bookingId: reservation.id,\r\n            },\r\n          ],\r\n        };\r\n      } else {\r\n        result[room.name].tables.push({\r\n          imageUrl: reservation.table.imageUrl,\r\n          room: reservation.table.room.name,\r\n          place: reservation.table.name,\r\n          dateFrom: reservation.from,\r\n          dateTo: reservation.to,\r\n          tableId: reservation.table.id,\r\n          bookingId: reservation.id,\r\n        });\r\n      }\r\n    }\r\n    return Object.values(result);\r\n  }\r\n  return null;\r\n}\r\n","import { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { ReservationRoom } from './components/ReservationRoom';\r\nimport paginationService from 'services/paginationService/paginationService';\r\nimport { ConfirmationModal, DeleteModal, EmptyReservation } from 'shared/components';\r\nimport { Filters } from 'shared/components/Filters';\r\nimport { FormModal } from 'shared/components/FormModal';\r\nimport { hasPermission } from 'shared/utils';\r\nimport { recruiterPermissions } from 'shared/constants/permissions';\r\nimport { FilterContext } from 'shared/components/Filter/FilterContext';\r\nimport FilterTitle from 'shared/components/Filters/components/FilterTitle';\r\nimport { useCardFilters } from 'shared/hooks/useCardFilters';\r\nimport { getValidReservations } from 'shared/utils/reservations';\r\nimport { useDeleteReservations } from 'shared/hooks';\r\nimport { loadReservationsThunk } from 'store/reservations/actions';\r\nimport { getMyReservations } from 'store/reservations/selectors';\r\nimport { setScheduleActive } from 'store/schedule';\r\nimport { permissionsSelector } from 'store/auth/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { formatISO, set } from 'date-fns';\r\n\r\nimport './reservation.scss';\r\n\r\nconst RESERVATION_COUNT = 100;\r\n\r\nexport const Reservation = () => {\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\r\n  const [isOpenConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n  const initialFiltersValue = useCardFilters();\r\n\r\n  const dispatch = useDispatch();\r\n  const { myReservations, personPermissions } = useSelector((state) => ({\r\n    myReservations: getMyReservations(state),\r\n    personPermissions: permissionsSelector(state),\r\n  }));\r\n\r\n  const isRecruiter = hasPermission(recruiterPermissions, personPermissions);\r\n  const currentDate = useRef(new Date());\r\n  const validReservations = useMemo(() => getValidReservations(myReservations), [myReservations]);\r\n\r\n  const { deleteScheduleHandle, selectedReservations, setSelectedReservations } = useDeleteReservations(\r\n    isRecruiter,\r\n    currentDate,\r\n    setOpenConfirmationModal,\r\n    setIsEditMode\r\n  );\r\n\r\n  const isReservationSelect = selectedReservations.length !== 0;\r\n  const delCount = useMemo(() => selectedReservations.length, [selectedReservations]);\r\n\r\n  const activateSchedule = () => dispatch(setScheduleActive(true));\r\n  const openFilters = () => setIsFiltersOpen(!isFiltersOpen);\r\n  const closeConfirmationModal = () => setOpenConfirmationModal(false);\r\n  const openConfirmationModal = () => setOpenConfirmationModal(true);\r\n\r\n  const changeEditMode = () => {\r\n    setIsEditMode((mode) => !mode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = isFiltersOpen ? 'hidden' : 'visible';\r\n  }, [isFiltersOpen]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      loadReservationsThunk(\r\n        paginationService.getParamsForPageRequest(\r\n          RESERVATION_COUNT,\r\n          {\r\n            dateFrom: formatISO(set(currentDate.current, { hours: 0, minutes: 0 })),\r\n            type: 0,\r\n          },\r\n          ''\r\n        )\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isEditMode) setSelectedReservations([]);\r\n  }, [isEditMode]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-reservations\">\r\n        <FilterContext.Provider value={initialFiltersValue}>\r\n          <div className=\"my-reservations__filter\">\r\n            <FilterTitle\r\n              title=\"Мои бронирования\"\r\n              isEditMode={isEditMode}\r\n              changeEditMode={changeEditMode}\r\n              activateSchedule={activateSchedule}\r\n              openFilters={openFilters}\r\n            />\r\n            <Filters isFiltersOpen={isFiltersOpen} openFilters={openFilters} isReservation />\r\n          </div>\r\n        </FilterContext.Provider>\r\n\r\n        <div className=\"rooms\">\r\n          {validReservations?.length > 0 ? (\r\n            <ReservationRoom\r\n              checkedRooms={initialFiltersValue.checkedRooms}\r\n              checkedPlaces={initialFiltersValue.checkedPlaces}\r\n              isEditMode={isEditMode}\r\n              pickReservation={setSelectedReservations}\r\n              selectedReservations={selectedReservations}\r\n              myReservation={myReservations}\r\n              myBookings={validReservations}\r\n            />\r\n          ) : (\r\n            <EmptyReservation subtitle=\"Для бронирования места необходимо перейти в карту рабочих мест\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <DeleteModal deleteCount={delCount} onClick={openConfirmationModal} title=\"Выбрано броней:\" isActive={isReservationSelect} />\r\n      {isOpenConfirmationModal && (\r\n        <FormModal title={<span>Удаление брони </span>} onClose={closeConfirmationModal} isDeleteForm>\r\n          <div className=\"delete-card\">\r\n            <ConfirmationModal\r\n              onClose={closeConfirmationModal}\r\n              action={deleteScheduleHandle}\r\n              title=\"Вы действительно хотите удалить бронь выделенных слотов?\"\r\n            />\r\n          </div>\r\n        </FormModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { showToastError, showToastSuccess } from 'shared/components/Toast/utils/helpers';\r\nimport paginationService from 'services/paginationService/paginationService';\r\nimport { loadReservationsThunk } from 'store/reservations/actions';\r\nimport { deleteReservations } from 'store/schedule/actions';\r\nimport { formatISO } from 'date-fns';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function useDeleteReservations(isRecruiter, currentDate, openModal, setIsEditMode) {\r\n  const [selectedReservations, setSelectedReservations] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const disableEditMode = () => {\r\n    setIsEditMode(false);\r\n    setSelectedReservations([]);\r\n    dispatch(\r\n      loadReservationsThunk(\r\n        paginationService.getParamsForPageRequest(100, {\r\n          dateFrom: formatISO(currentDate.current),\r\n        })\r\n      )\r\n    );\r\n  };\r\n\r\n  const prepareDeleteData = (reservations) => {\r\n    const deleteId = {\r\n      ids: [],\r\n    };\r\n    reservations.forEach((reservation) => {\r\n      deleteId.ids.push(reservation.bookingId);\r\n    });\r\n\r\n    return deleteId;\r\n  };\r\n\r\n  const deleteScheduleHandle = async () => {\r\n    try {\r\n      await dispatch(deleteReservations(prepareDeleteData(selectedReservations), isRecruiter));\r\n\r\n      openModal(false);\r\n      disableEditMode();\r\n\r\n      const isMultipleDelete = selectedReservations.length > 1;\r\n      const title = isMultipleDelete ? 'Бронирования удалены' : 'Бронирование удалено';\r\n\r\n      showToastSuccess(title, `Вы успешно удалили ${isMultipleDelete ? 'бронирования' : 'бронирование'}`);\r\n    } catch {\r\n      showToastError('Ошибка удаления', 'Попробуйте ещё раз');\r\n    }\r\n  };\r\n\r\n  return { selectedReservations, setSelectedReservations, deleteScheduleHandle };\r\n}\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getCurrentLocation } from 'store/location/selectors';\r\nimport { loadCardsThunk, loadCardItemsTypeThunk } from 'store/cards/actions';\r\nimport { Calendar, CardList, Icon, Modal } from 'shared/components';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport { getParamsForLoadCards } from 'services/cards/getParamsForLoadCards';\r\nimport { useClickAway } from 'shared/hooks';\r\nimport { useLocationId } from 'shared/hooks/useLocationId';\r\nimport { cardsSlice } from 'store/cards';\r\nimport { getCurrentDate } from 'store/schedule/selectors';\r\nimport { formatISO, set } from 'date-fns';\r\n\r\nexport default function Location({ isOpenSearch }) {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n  const resRef = useRef(null);\r\n  const excludeRef = useRef(null);\r\n\r\n  const locationId = useLocationId();\r\n  const { selectedDate } = useSelector((state) => ({\r\n    selectedDate: getCurrentDate(state),\r\n  }));\r\n\r\n  const currentLocation = useSelector(getCurrentLocation(locationId));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = () => setIsOpenModal(false);\r\n  const openModal = () => setIsOpenModal(true);\r\n\r\n  useEffect(() => {\r\n    if (currentLocation?.id) {\r\n      dispatch(loadCardsThunk(getParamsForLoadCards(currentLocation?.id, formatISO(set(selectedDate, { hours: 0, minutes: 0 }))))).finally(\r\n        () => dispatch(loadCardItemsTypeThunk())\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      dispatch(cardsSlice.actions.cleanState());\r\n    };\r\n  }, [currentLocation?.id, dispatch, selectedDate]);\r\n\r\n  useClickAway({\r\n    ref: resRef,\r\n    cb: () => {\r\n      setIsOpenModal(false);\r\n    },\r\n    exclude: excludeRef,\r\n  });\r\n\r\n  return (\r\n    <main className={cn('main', { 'main--none': isOpenSearch })}>\r\n      <div className=\"main__container\">\r\n        <div className=\"workspace\">\r\n          <div className=\"workspace__header\">\r\n            <div className=\"workspace__header-top\">\r\n              <div className=\"workspace__header-group\">\r\n                <h2 className=\"title workspace__title\">Комната {locationId}</h2>\r\n                <Calendar />\r\n              </div>\r\n            </div>\r\n            {locationId && (\r\n              <div\r\n                className=\"workspace__schema\"\r\n                ref={excludeRef}\r\n                onMouseEnter={openModal}\r\n                onMouseLeave={closeModal}\r\n                onTouchStart={openModal}\r\n              >\r\n                <Icon name=\"info\" size={24} fill />\r\n                <span className=\"workspace__schema-text\">Схема расположения</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <CardList currentLocation={currentLocation} />\r\n        </div>\r\n        <Modal isOpen={isOpenModal} title={`Кабинет ${currentLocation?.name}`} ref={resRef}>\r\n          <img className=\"modal__img\" src={currentLocation?.imageUrl} alt={`Схема ${currentLocation?.name} кабинета`} />\r\n        </Modal>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nLocation.propTypes = {\r\n  isOpenSearch: PropTypes.bool,\r\n};\r\n","import { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { ReservationRoom } from '../Reservation/components/ReservationRoom';\r\nimport reservationsServices from 'services/reservations/reservationsServices';\r\nimport paginationService from 'services/paginationService/paginationService';\r\nimport { EmptyReservation } from 'shared/components';\r\nimport { getValidReservations } from 'shared/utils/reservations';\r\nimport { Filters } from 'shared/components/Filters';\r\nimport { FilterContext } from 'shared/components/Filter/FilterContext';\r\nimport FilterTitle from 'shared/components/Filters/components/FilterTitle';\r\nimport { useCardFilters } from 'shared/hooks';\r\nimport { setScheduleActive } from 'store/schedule';\r\nimport { useParams } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { set } from 'date-fns';\r\n\r\nimport './index.scss';\r\n\r\nconst RESERVATION_COUNT = 100;\r\n\r\nexport default function SearchPage() {\r\n  const [myReservations, setMyReservations] = useState([]);\r\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\r\n  const searchOptions = useRef({ dateFrom: set(new Date(), { hours: 0, minutes: 0 }) });\r\n  const validReservations = useMemo(() => getValidReservations(myReservations), [myReservations]);\r\n\r\n  const { fullName: userName } = useParams();\r\n  const initialFiltersValue = useCardFilters();\r\n  const dispatch = useDispatch();\r\n\r\n  const activateSchedule = () => dispatch(setScheduleActive(true));\r\n  const openFilters = () => setIsFiltersOpen(!isFiltersOpen);\r\n\r\n  const fetchUserReservations = async (reservationCount, reqOptions, userFullName) => {\r\n    try {\r\n      const res = await reservationsServices.getReservations(\r\n        paginationService.getParamsForPageRequest(reservationCount, reqOptions, userFullName)\r\n      );\r\n      setMyReservations(res.rows);\r\n    } catch {\r\n      setMyReservations([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserReservations(RESERVATION_COUNT, searchOptions.current, userName);\r\n  }, [userName]);\r\n\r\n  return (\r\n    <div className=\"my-reservations\">\r\n      <FilterContext.Provider value={initialFiltersValue}>\r\n        <div className=\"my-reservations__filter my-reservations__search\">\r\n          <FilterTitle\r\n            title=\"Результаты поиска\"\r\n            subTitle={userName}\r\n            isEditMode={isFiltersOpen}\r\n            changeEditMode={openFilters}\r\n            activateSchedule={activateSchedule}\r\n            openFilters={openFilters}\r\n            isSearchPage\r\n          />\r\n          <Filters isFiltersOpen={isFiltersOpen} openFilters={openFilters} />\r\n        </div>\r\n      </FilterContext.Provider>\r\n\r\n      {validReservations?.length > 0 ? (\r\n        <div className=\"rooms\">\r\n          <ReservationRoom\r\n            checkedRooms={initialFiltersValue.checkedRooms}\r\n            checkedPlaces={initialFiltersValue.checkedPlaces}\r\n            myBookings={validReservations}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <EmptyReservation />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Redirect, Route, Switch } from 'react-router';\r\nimport { ROUTES } from 'shared/constants';\r\nimport Login from 'modules/Login';\r\nimport { ProtectedRoute, UnauthenticatedRoute } from 'shared/components';\r\nimport Compensation from 'modules/Compensation';\r\nimport UserPage from 'modules/UserPage';\r\nimport UserRole from 'modules/UserRole';\r\nimport VersionHistory from 'modules/VersionHistory';\r\nimport Settings from 'modules/Settings';\r\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\r\nimport ru from 'date-fns/locale/ru';\r\nimport { Layout } from './shared/layout';\r\nimport { Reservation } from './modules/Reservation';\r\nimport { SchedulePage } from './modules/Schedule/components';\r\nimport Location from './modules/Location';\r\nimport SearchPage from './modules/SearchPage';\r\n\r\nregisterLocale('ru', ru);\r\nsetDefaultLocale('ru');\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <UnauthenticatedRoute path={ROUTES.login} component={Login} />\r\n      <ProtectedRoute\r\n        render={() => (\r\n          <Layout>\r\n            <Switch>\r\n              <Route path={ROUTES.reservation} component={Reservation} />\r\n              <Route path={ROUTES.search} component={SearchPage} />\r\n              <Route path={ROUTES.usersList} component={UserPage} />\r\n              <Route path={ROUTES.userRoles} component={UserRole} />\r\n              <Route path={ROUTES.compensations} component={Compensation} />\r\n              <Route path={ROUTES.settings} component={Settings} />\r\n              <Route path={ROUTES.calendar} component={SchedulePage} />\r\n              <Route path={ROUTES.room} component={Location} />\r\n              <Route path={ROUTES.versionHistory} component={VersionHistory} />\r\n              <Redirect to={ROUTES.reservation} />\r\n            </Switch>\r\n          </Layout>\r\n        )}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ROUTES } from 'shared/constants';\r\nimport store from 'store';\r\nimport { refreshToken } from 'store/auth/actions';\r\nimport { history } from 'shared/utils/history';\r\n\r\n\r\nexport default (instance) => {\r\n  instance.interceptors.response.use(\r\n    (response) =>\r\n      response,\r\n    async (error) => {\r\n      const originalConfig = error.config;\r\n      if (error.response.status === 401 && !originalConfig.retry) {\r\n        originalConfig.retry = true;\r\n        const res = await store.dispatch(refreshToken());\r\n        if (refreshToken.fulfilled.match(res)) {\r\n          return instance(originalConfig);\r\n        }\r\n      }\r\n      if (error.response.status === 403) {\r\n        history.push(ROUTES.home);\r\n      }\r\n      return Promise.reject(error);\r\n    },\r\n  );\r\n};\r\n","import setupAuthHeader from './setup-auth-header';\r\nimport checkValidToken from './check-valid-token';\r\nimport showServerErrors from './show-server-errors';\r\n\r\nexport function initApiInterceptors(axiosInstance) {\r\n  setupAuthHeader(axiosInstance);\r\n  checkValidToken(axiosInstance);\r\n  showServerErrors(axiosInstance);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport apiAxios from 'services/api/apiAxios';\r\nimport svg4 from 'svg4everybody';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'store';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { initApiInterceptors } from 'services/interceptors';\r\nimport tokenService from 'services/auth/tokenService';\r\nimport { Router } from 'react-router';\r\nimport authService from 'services/auth/authService';\r\nimport { authActions } from 'store/auth';\r\nimport { history } from 'shared/utils/history';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nimport 'assets/stylesheets/scss/index.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'assets/scripts/modernizr/modernizr-custom.js';\r\nimport 'assets/stylesheets/datepicker.css';\r\n\r\nsvg4();\r\n\r\ninitApiInterceptors(apiAxios);\r\n\r\nstore.dispatch(authActions.setIsAuth(tokenService.init(authService.refresh, store, authActions)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n        <ToastContainer />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","export default (instance) => {\r\n  instance.interceptors.request.use((config) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem('accessToken')}`\r\n    return config;\r\n  });\r\n};\r\n","import { showToastError } from 'shared/components/Toast/utils/helpers';\r\n\r\nexport default (instance) => {\r\n  instance.interceptors.response.use(\r\n    (response) => response,\r\n    async (error) => {\r\n      if (error.response.status === 503) {\r\n        showToastError('Сервис недоступен', 'Попробуйте позже');\r\n      } else if (error.response.status === 400) {\r\n        showToastError('Данные не корректны', 'Повторите попытку');\r\n      } else if (error.response.status === 403) {\r\n        showToastError('Отказ в доступе', 'Недостаточно прав для просмотра данной страницы');\r\n      } else if (error.response.status === 502) {\r\n        showToastError(' Ошибка', 'Невозможно получить почту. Обратитесь к разработчикам');\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n"],"sourceRoot":""}